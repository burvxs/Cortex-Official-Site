{"ast":null,"code":"var _jsxFileName = \"C:\\\\Workspace\\\\Cortex\\\\cortex-official-website\\\\src\\\\front-end\\\\src\\\\components\\\\forms\\\\Register.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Base from '../base/Base';\nimport Modal from 'react-modal';\nimport { Row, Col } from 'reactstrap';\nModal.defaultStyles.overlay.backgroundColor = \"cornsilk\";\n\nclass RegisterForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.validateForm = () => {\n      if (this.status !== null) {\n        if (this.status == 406) {\n          this.isInvalid = true;\n        } else if (!this.isInvalid) this.isValid = true;\n      }\n    };\n\n    this.handleFormChange = e => {\n      let elementName = e.target.name;\n      let content = e.target.value;\n      this.setState({\n        values: { ...this.state.values,\n          [elementName]: content\n        }\n      });\n    };\n\n    this.SubmitRegisterData = async e => {\n      e.preventDefault();\n      console.log(this.state);\n      this.setState({\n        isSubmitting: true\n      });\n      const res = await fetch(\"http://127.0.0.1:8000/api/accounts/\", {\n        method: \"POST\",\n        body: JSON.stringify(this.state.values),\n        headers: {\n          \"Content-Type\": \"application/json\",\n          'Accept': 'application/json'\n        }\n      });\n      this.status = res.status;\n      this.setState({\n        isSubmitting: false\n      });\n      const data = await res.json();\n      !data.hasOwnProperty(\"error\") ? this.setState({\n        message: data.success\n      }) : this.setState({\n        message: data.error,\n        isError: true\n      });\n      console.log(this.state.message);\n      this.setState({\n        values: {\n          email: \"\",\n          firstname: \"\",\n          lastname: \"\",\n          fullName: \"\",\n          password: \"\",\n          passwordConfirm: \"\",\n          phoneNumber: \"\"\n        }\n      });\n    };\n\n    this.feedbackStyle = () => {\n      if (this.isInvalid == true) {\n        return {\n          display: \"flex\"\n        };\n      }\n    };\n\n    this.toggleHover = e => {\n      this.setState({\n        isHover: !this.state.hover\n      });\n      if (this.state.isHover) this.setState({\n        isHover: false\n      });\n    };\n\n    this.getHoverStyle = () => {\n      var style;\n      if (this.state.isHover) style = \"#404040\";else style = \"black\";\n      return style;\n    };\n\n    this.state = {\n      values: {\n        email: \"\",\n        firstname: \"\",\n        lastname: \"\",\n        fullName: \"\",\n        password: \"\",\n        passwordConfirm: \"\",\n        phoneNumber: \"\"\n      },\n      isSubmitting: false,\n      isOpen: false,\n      isError: false,\n      isHover: false\n    };\n    this.status = null;\n  }\n\n  componentDidMount() {\n    this.setState({\n      isOpen: true\n    });\n  }\n\n  render() {\n    this.validateForm();\n    const buttonStyle = {\n      outline: \"none\",\n      width: \"90%\",\n      height: \"35px\",\n      marginTop: \"30px\",\n      marginLeft: \"18px\",\n      borderRadius: \"10px\",\n      borderColor: \"\t#FFFFFF\",\n      borderWidth: \"2px\",\n      backgroundColor: this.getHoverStyle(),\n      color: \"white\",\n      transition: \"all ease .5s\"\n    };\n    document.getElementById('root').style.filter = 'none';\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.isOpen,\n      ariaHideApp: false,\n      style: modalStyle,\n      width: \"10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }\n    }, \"Sign Up\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        paddingTop: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        display: \"flex\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 29\n      }\n    }, \"First Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      style: {\n        width: \"100%\",\n        paddingRight: \"5px\"\n      },\n      type: \"text\",\n      name: \"firstname\",\n      placeholder: \"Enter your first name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      style: {\n        paddingLeft: \"5px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        display: \"flex\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 29\n      }\n    }, \"Last Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      style: {\n        width: \"100%\"\n      },\n      type: \"text\",\n      name: \"lastname\",\n      placeholder: \"Enter your last name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        paddingTop: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        display: \"flex\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 29\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n      style: {\n        width: \"100%\"\n      },\n      type: \"text\",\n      name: \"firstname\",\n      placeholder: \"Enter your email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        display: \"flex\",\n        paddingTop: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 29\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      style: {\n        width: \"100%\"\n      },\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"Enter your password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        display: \"flex\",\n        paddingTop: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 29\n      }\n    }, \"Confirm Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      style: {\n        width: \"100%\"\n      },\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"Confirm password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"registerSubmit\",\n      onMouseEnter: this.toggleHover,\n      onMouseLeave: this.toggleHover,\n      style: buttonStyle,\n      type: \"submit\",\n      onSubmit: this.SubmitRegisterData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 29\n      }\n    }, \"Create a Cortex account\")))));\n  }\n\n}\n\nconst formStyle = {\n  padding: \"15px\",\n  margin: \"auto\",\n  width: \"100%\",\n  maxWidth: \"1000px\"\n};\nconst modalStyle = {\n  content: {\n    margin: \"auto\",\n    width: \"55vh\",\n    height: \"51vh\",\n    position: \"absolute\",\n    borderRadius: \"10px\",\n    overflow: \"none\"\n  }\n};\nexport default RegisterForm;","map":{"version":3,"sources":["C:/Workspace/Cortex/cortex-official-website/src/front-end/src/components/forms/Register.js"],"names":["React","Component","Link","Base","Modal","Row","Col","defaultStyles","overlay","backgroundColor","RegisterForm","constructor","props","validateForm","status","isInvalid","isValid","handleFormChange","e","elementName","target","name","content","value","setState","values","state","SubmitRegisterData","preventDefault","console","log","isSubmitting","res","fetch","method","body","JSON","stringify","headers","data","json","hasOwnProperty","message","success","error","isError","email","firstname","lastname","fullName","password","passwordConfirm","phoneNumber","feedbackStyle","display","toggleHover","isHover","hover","getHoverStyle","style","isOpen","componentDidMount","render","buttonStyle","outline","width","height","marginTop","marginLeft","borderRadius","borderColor","borderWidth","color","transition","document","getElementById","filter","modalStyle","paddingTop","paddingRight","paddingLeft","formStyle","padding","margin","maxWidth","position","overflow"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport Base from '../base/Base'\r\nimport Modal from 'react-modal'\r\nimport {\r\n          Row, \r\n          Col,\r\n        } from 'reactstrap'\r\n\r\n\r\nModal.defaultStyles.overlay.backgroundColor = \"cornsilk\"\r\n\r\nclass RegisterForm extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            values: {\r\n                email: \"\",\r\n                firstname: \"\",\r\n                lastname: \"\",\r\n                fullName: \"\",\r\n                password : \"\",\r\n                passwordConfirm : \"\",\r\n                phoneNumber : \"\",\r\n            },\r\n            isSubmitting: false,\r\n            isOpen : false,\r\n            isError: false,\r\n            isHover : false\r\n        } \r\n\r\n        this.status = null\r\n    }\r\n\r\n    validateForm = () => {\r\n        if(this.status !== null){\r\n            if (this.status == 406){\r\n                this.isInvalid = true\r\n            }else if(!this.isInvalid)\r\n                this.isValid = true\r\n        }\r\n    }\r\n    handleFormChange = (e) =>{\r\n        let elementName = e.target.name;\r\n        let content = e.target.value;\r\n        this.setState({\r\n            values : {\r\n                ...this.state.values, [elementName] : content\r\n            }            \r\n        });\r\n    }\r\n    SubmitRegisterData = async e =>{\r\n        e.preventDefault();\r\n        console.log(this.state)\r\n        this.setState({isSubmitting : true})\r\n\r\n        const res = await fetch(\"http://127.0.0.1:8000/api/accounts/\", {\r\n            method : \"POST\",\r\n            body: JSON.stringify(this.state.values),\r\n            headers : {\r\n                \"Content-Type\" : \"application/json\",\r\n                'Accept': 'application/json'\r\n            }\r\n        });\r\n        this.status = res.status\r\n        this.setState({isSubmitting : false})\r\n        const data = await res.json();\r\n        !data.hasOwnProperty(\"error\")\r\n        ? this.setState({ message : data.success })\r\n        : this.setState({message: data.error, isError: true}) \r\n        console.log(this.state.message)\r\n        this.setState({\r\n            values : {\r\n                email: \"\",\r\n                firstname: \"\",\r\n                lastname: \"\",\r\n                fullName: \"\",\r\n                password : \"\",\r\n                passwordConfirm : \"\",\r\n                phoneNumber : \"\",\r\n            },\r\n        })\r\n    }\r\n    feedbackStyle = () => {\r\n        if(this.isInvalid == true){\r\n            return {\r\n                display : \"flex\"\r\n            }\r\n        }\r\n    }\r\n    toggleHover = (e) => {\r\n        this.setState({isHover : !this.state.hover})\r\n        if (this.state.isHover)\r\n            this.setState({isHover : false})\r\n    }\r\n    getHoverStyle = () => {\r\n        var style\r\n        if(this.state.isHover)\r\n            style = \"#404040\"\r\n        else\r\n            style = \"black\"\r\n        return style\r\n    }\r\n    componentDidMount(){\r\n        this.setState({\r\n            isOpen : true\r\n        });\r\n    }\r\n    render(){\r\n        this.validateForm()\r\n        const buttonStyle = {\r\n            outline : \"none\",\r\n            width: \"90%\",\r\n            height : \"35px\",\r\n            marginTop : \"30px\", \r\n            marginLeft : \"18px\",\r\n            borderRadius : \"10px\",\r\n            borderColor : \"\t#FFFFFF\",\r\n            borderWidth : \"2px\",\r\n            backgroundColor : this.getHoverStyle(),\r\n            color : \"white\",\r\n            transition: \"all ease .5s\",\r\n        }\r\n        document.getElementById('root').style.filter = 'none'\r\n        return(    \r\n            <div style={{display : \"flex\"}}>          \r\n                <Modal isOpen={this.state.isOpen} ariaHideApp={false} style={modalStyle} width=\"10\">\r\n                    <h2>Sign Up</h2>\r\n                    <hr/>\r\n                    <Row style={{paddingTop : \"10px\"}}>             \r\n                        <Col>\r\n                            <label style={{display : \"flex\"}}>First Name</label>\r\n                            <input style={{width: \"100%\", paddingRight : \"5px\" }} type=\"text\" name=\"firstname\" placeholder=\"Enter your first name\"/>\r\n                        </Col>\r\n                        <Col style={{paddingLeft : \"5px\"}}>\r\n                            <label style={{display : \"flex\"}}>Last Name</label>\r\n                            <input style={{width: \"100%\" }} type=\"text\" name=\"lastname\" placeholder=\"Enter your last name\"/>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row style={{paddingTop : \"10px\"}}>\r\n                        <Col>\r\n                            <label style={{display : \"flex\"}}>Email</label>\r\n                            <input style={{width: \"100%\" }} type=\"text\" name=\"firstname\" placeholder=\"Enter your email\"/>\r\n                            <label style={{display : \"flex\", paddingTop : \"10px\"}}>Password</label>\r\n                            <input style={{width: \"100%\" }} type=\"password\" name=\"password\" placeholder=\"Enter your password\"/>\r\n                            <label style={{display : \"flex\", paddingTop : \"10px\"}}>Confirm Password</label>\r\n                            <input style={{width: \"100%\"}} type=\"password\" name=\"password\" placeholder=\"Confirm password\"/>\r\n                            <button className=\"registerSubmit\" onMouseEnter={this.toggleHover} onMouseLeave={this.toggleHover} style={buttonStyle} type=\"submit\" onSubmit={this.SubmitRegisterData}>\r\n                                Create a Cortex account\r\n                            </button>\r\n                        </Col>\r\n                    </Row>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst formStyle = {\r\n    padding: \"15px\",\r\n    margin: \"auto\",\r\n    width : \"100%\",\r\n    maxWidth : \"1000px\"\r\n}\r\nconst modalStyle = {\r\n    content : {\r\n        margin : \"auto\",\r\n        width : \"55vh\",\r\n        height : \"51vh\",\r\n        position : \"absolute\",\r\n        borderRadius : \"10px\",\r\n        overflow : \"none\"\r\n      }\r\n}\r\nexport default RegisterForm"]},"metadata":{},"sourceType":"module"}