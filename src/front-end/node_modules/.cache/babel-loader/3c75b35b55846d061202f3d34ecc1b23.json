{"ast":null,"code":"var _jsxFileName = \"C:\\\\Workspace\\\\Cortex\\\\cortex-official-website\\\\src\\\\front-end\\\\src\\\\components\\\\forms\\\\Register.js\";\nimport React, { Component } from 'react';\nimport { Form, FormGroup, Input, Label, Row, Col, Container, Button, FormFeedback } from 'reactstrap';\n\nclass RegisterForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.validateForm = () => {\n      this.comparedEmails.forEach(index => {\n        if (this.state.email === this.comparedEmails[index]) {\n          console.log(this.comparedEmails[index]);\n          this.isValid = false;\n        } else this.isValid = true;\n      });\n      return this.isValid = false;\n    };\n\n    this.handleFormChange = e => {\n      let elementName = e.target.name;\n      let content = e.target.value;\n      console.log(elementName);\n      this.setState({\n        values: { ...this.state.values,\n          [elementName]: content\n        }\n      });\n    };\n\n    this.SubmitRegisterData = async e => {\n      e.preventDefault();\n      console.log(this.state);\n      this.setState({\n        isSubmitting: true\n      });\n      const res = await fetch(\"http://127.0.0.1:8000/api/accounts/\", {\n        method: \"POST\",\n        body: JSON.stringify(this.state.values),\n        headers: {\n          \"Content-Type\": \"application/json\",\n          'Accept': 'application/json'\n        }\n      });\n      this.setState({\n        isSubmitting: false\n      });\n      const data = await res.json();\n      console.log(data);\n      !data.hasOwnProperty(\"error\") ? this.setState({\n        message: data.success\n      }) : this.setState({\n        message: data.error,\n        isError: true\n      });\n      this.setState({\n        values: {\n          email: \"\",\n          firstname: \"\",\n          lastname: \"\",\n          fullName: \"\",\n          password: \"\",\n          passwordConfirm: \"\",\n          phoneNumber: \"\"\n        },\n        isError: false,\n        message: \"\"\n      });\n    };\n\n    this.state = {\n      values: {\n        email: \"\",\n        firstname: \"\",\n        lastname: \"\",\n        fullName: \"\",\n        password: \"\",\n        passwordConfirm: \"\",\n        phoneNumber: \"\"\n      },\n      isSubmitting: false,\n      isError: false\n    };\n    this.isValid = false;\n    this.comparedEmails = null;\n  }\n\n  async componentDidMount() {\n    const res = await fetch(\"http://127.0.0.1:8000/api/accounts\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Accept': 'application/json'\n      }\n    });\n    const emailJson = await res.json();\n    this.comparedEmails = [...emailJson].email;\n    !emailJson.hasOwnProperty(\"error\") ? this.setState({\n      message: emailJson.error\n    }) : this.setState({\n      message: emailJson.success\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        textAlign: \"left\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }, \"Registration Form\"), /*#__PURE__*/React.createElement(Form, {\n      style: formStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      form: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      style: {\n        display: \"flex\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 33\n      }\n    }, \"First Name\"), /*#__PURE__*/React.createElement(Input, {\n      onChange: this.handleFormChange,\n      name: \"firstname\",\n      style: {\n        display: \"flex\"\n      },\n      type: \"firstname\",\n      placeholder: \"Enter your first name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      style: {\n        display: \"flex\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 33\n      }\n    }, \"Last Name\"), /*#__PURE__*/React.createElement(Input, {\n      onChange: this.handleFormChange,\n      name: \"lastname\",\n      type: \"lastname\",\n      placeholder: \"Enter your last name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 33\n      }\n    })))), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      style: {\n        display: \"flex\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 25\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(Input, {\n      onChange: this.handleFormChange,\n      name: \"email\",\n      type: \"email\",\n      placeholder: \"Enter email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(FormFeedback, {\n      invalid: this.isValid.toString(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 25\n      }\n    }, \"You're already registered! Login?\"), /*#__PURE__*/React.createElement(Label, {\n      style: {\n        display: \"flex\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 25\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(Input, {\n      onChange: this.handleFormChange,\n      name: \"password\",\n      type: \"password\",\n      placeholder: \"Enter password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Label, {\n      style: {\n        display: \"flex\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 25\n      }\n    }, \"Confirm Password\"), /*#__PURE__*/React.createElement(Input, {\n      onChange: this.handleFormChange,\n      name: \"passwordConfirm\",\n      type: \"password\",\n      placeholder: \"Please confirm your password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      style: {\n        width: \"300px\"\n      },\n      onClick: this.SubmitRegisterData,\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 25\n      }\n    }, \"Submit\")));\n  }\n\n}\n\nconst formStyle = {\n  padding: \"15px\",\n  margin: \"auto\",\n  width: \"100%\",\n  maxWidth: \"1000px\"\n};\nexport default RegisterForm;","map":{"version":3,"sources":["C:/Workspace/Cortex/cortex-official-website/src/front-end/src/components/forms/Register.js"],"names":["React","Component","Form","FormGroup","Input","Label","Row","Col","Container","Button","FormFeedback","RegisterForm","constructor","props","validateForm","comparedEmails","forEach","index","state","email","console","log","isValid","handleFormChange","e","elementName","target","name","content","value","setState","values","SubmitRegisterData","preventDefault","isSubmitting","res","fetch","method","body","JSON","stringify","headers","data","json","hasOwnProperty","message","success","error","isError","firstname","lastname","fullName","password","passwordConfirm","phoneNumber","componentDidMount","emailJson","render","textAlign","formStyle","display","toString","width","padding","margin","maxWidth"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\r\n\r\nimport {\r\n          Form, \r\n          FormGroup,\r\n          Input,\r\n          Label,\r\n          Row, \r\n          Col,\r\n          Container,\r\n          Button,\r\n          FormFeedback\r\n        } from 'reactstrap'\r\n\r\nclass RegisterForm extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            values: {\r\n                email: \"\",\r\n                firstname: \"\",\r\n                lastname: \"\",\r\n                fullName: \"\",\r\n                password : \"\",\r\n                passwordConfirm : \"\",\r\n                phoneNumber : \"\",\r\n            },\r\n            isSubmitting: false,\r\n            isError: false\r\n        }\r\n        this.isValid = false\r\n        this.comparedEmails = null\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const res = await fetch(\"http://127.0.0.1:8000/api/accounts\", {\r\n            method : \"GET\",\r\n            headers : {\r\n                \"Content-Type\" : \"application/json\",\r\n                'Accept': 'application/json'\r\n            }\r\n        })\r\n        const emailJson = await res.json(); \r\n        this.comparedEmails = [...emailJson].email \r\n        !emailJson.hasOwnProperty(\"error\") ? \r\n        this.setState({message : emailJson.error}) :\r\n        this.setState({message : emailJson.success})\r\n    }\r\n \r\n    validateForm = () => {\r\n            this.comparedEmails.forEach(index => {\r\n             if(this.state.email === this.comparedEmails[index]){\r\n                console.log(this.comparedEmails[index])\r\n                this.isValid = false\r\n             }                      \r\n            else\r\n                this.isValid = true\r\n        });\r\n        return this.isValid = false\r\n    }\r\n    handleFormChange = (e) =>{\r\n        let elementName = e.target.name;\r\n        let content = e.target.value;\r\n        console.log(elementName)\r\n        this.setState({\r\n            values : {\r\n                ...this.state.values, [elementName] : content\r\n            }            \r\n        });\r\n    }\r\n    SubmitRegisterData = async e =>{\r\n        e.preventDefault();\r\n        console.log(this.state)\r\n        this.setState({isSubmitting : true})\r\n\r\n        const res = await fetch(\"http://127.0.0.1:8000/api/accounts/\", {\r\n            method : \"POST\",\r\n            body: JSON.stringify(this.state.values),\r\n            headers : {\r\n                \"Content-Type\" : \"application/json\",\r\n                'Accept': 'application/json'\r\n            }\r\n        });\r\n        this.setState({isSubmitting : false})\r\n        const data = await res.json();\r\n        console.log(data)\r\n        !data.hasOwnProperty(\"error\")\r\n        ? this.setState({ message : data.success })\r\n        : this.setState({message: data.error, isError: true}) \r\n\r\n        this.setState({\r\n            values : {\r\n                email: \"\",\r\n                firstname: \"\",\r\n                lastname: \"\",\r\n                fullName: \"\",\r\n                password : \"\",\r\n                passwordConfirm : \"\",\r\n                phoneNumber : \"\",\r\n            },\r\n            isError: false, \r\n            message : \"\"\r\n        })\r\n    }\r\n    render(){\r\n        return(    \r\n            <Container>\r\n                <h3 style={{textAlign : \"left\"}}>Registration Form</h3>\r\n                <Form style={formStyle}>               \r\n                    <Row form>\r\n                        <Col>\r\n                            <FormGroup>\r\n                                <Label style={{display : \"flex\"}}>First Name</Label>\r\n                                <Input onChange={this.handleFormChange} name=\"firstname\" style={{display : \"flex\"}}  type=\"firstname\" placeholder=\"Enter your first name\"/>\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col>\r\n                            <FormGroup>\r\n                                <Label style={{display : \"flex\"}}>Last Name</Label>\r\n                                <Input onChange={this.handleFormChange} name=\"lastname\" type=\"lastname\" placeholder=\"Enter your last name\"/>  \r\n                            </FormGroup>\r\n                        </Col>\r\n                    </Row>\r\n                    <FormGroup>\r\n                        <Label style={{display : \"flex\"}}>Email</Label>\r\n                        <Input onChange={this.handleFormChange} name=\"email\" type=\"email\" placeholder=\"Enter email\"/>  \r\n                        <FormFeedback invalid={this.isValid.toString()}>\r\n                            You're already registered! Login? \r\n                        </FormFeedback>\r\n                        <Label style={{display : \"flex\"}} >Password</Label>\r\n                        <Input onChange={this.handleFormChange} name=\"password\" type=\"password\" placeholder=\"Enter password\"/>  \r\n                        <Label style={{display : \"flex\"}} >Confirm Password</Label>\r\n                        <Input onChange={this.handleFormChange} name=\"passwordConfirm\" type=\"password\" placeholder=\"Please confirm your password\"/>  \r\n                    </FormGroup>    \r\n                        <Button style={{width : \"300px\"}} onClick={this.SubmitRegisterData} type=\"submit\">\r\n                            Submit\r\n                        </Button>\r\n                </Form>\r\n            </Container>  \r\n        )\r\n    }\r\n}\r\nconst formStyle = {\r\n    padding: \"15px\",\r\n    margin: \"auto\",\r\n    width : \"100%\",\r\n    maxWidth : \"1000px\"\r\n}\r\nexport default RegisterForm"]},"metadata":{},"sourceType":"module"}