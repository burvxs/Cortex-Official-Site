{"ast":null,"code":"var _jsxFileName = \"C:\\\\Workspace\\\\Cortex\\\\cortex-official-website\\\\src\\\\front-end\\\\src\\\\components\\\\products\\\\RenderFilter.js\";\nimport React, { Component } from 'react';\nimport \"../../checkbox.scss\";\n\nclass RenderFilter extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getHighestPrice = () => {\n      return Math.max(...this.props.itemsToFilter.map(item => {\n        return item.price;\n      }));\n    };\n\n    this.getLowestPrice = () => {\n      return Math.min(...this.props.itemsToFilter.map(item => {\n        return item.price;\n      }));\n    };\n\n    this.handleSymbolChange = e => {\n      e.preventDefault();\n      this.setState({\n        symbol: this.props.isFiltering() ? \"-\" : \"+\",\n        isOpen: !this.state.isOpen\n      });\n    };\n\n    this.handleFilterByMax = () => {\n      this.props.filterByMax();\n    };\n\n    this.displayCheckboxText = (startPrice, endPrice) => {\n      return \"$\" + startPrice + \" - \" + \"$\" + endPrice;\n    };\n\n    this.getPriceDifferences = () => {\n      var diff = [];\n\n      for (var i = 0; i < this.props.itemsToFilter.length; i++) {\n        if (this.props.itemsToFilter[i] !== undefined || null) {\n          if (this.props.itemsToFilter[i + 1] !== undefined) {\n            diff.push(Math.abs(this.props.itemsToFilter[i].price - this.props.itemsToFilter[i + 1].price));\n          } else {\n            break;\n          }\n        }\n      }\n\n      diff.sort((a, b) => a - b);\n      return diff;\n    };\n\n    this.toggleMaxCheckbox = e => {\n      console.log(this.state.isMaxChecked);\n      this.setState({\n        isMaxChecked: !this.state.isMaxChecked\n      });\n      this.handleFilterByMax();\n    };\n\n    this.renderCheckboxPrice = () => {\n      let checkboxes = [];\n\n      for (let i = 0; i < this.PRICE_THRESHOLDS.length; i++) {\n        if (this.sortedPriceArray()[i] !== undefined) {\n          if (this.checkProductBetweenValues(this.PRICE_THRESHOLDS[i], this.PRICE_THRESHOLDS[i + 1])) {\n            checkboxes.push( /*#__PURE__*/React.createElement(React.Fragment, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 29\n              }\n            }, /*#__PURE__*/React.createElement(\"input\", {\n              className: \"filter-checkbox\",\n              id: \"filter-checkbox-\" + i,\n              type: \"checkbox\",\n              checked: this.state.isMaxChecked,\n              onChange: this.toggleMaxCheckbox,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 33\n              }\n            }), /*#__PURE__*/React.createElement(\"label\", {\n              for: \"filter-checkbox-\" + i,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 35\n              }\n            }, this.displayCheckboxText(this.PRICE_THRESHOLDS[i], this.PRICE_THRESHOLDS[i + 1]))));\n          }\n        }\n      }\n\n      console.log(checkboxes);\n      return checkboxes;\n    };\n\n    this.sortedPriceArray = () => {\n      let priceArray;\n\n      if (this.props.itemsToFilter !== undefined) {\n        priceArray = this.props.itemsToFilter.sort((a, b) => {\n          return a.price - b.price;\n        });\n      }\n\n      return priceArray;\n    };\n\n    this.checkProductBetweenValues = (startValue, endValue) => {\n      let productExists = false;\n\n      for (let i = 0; i < this.props.itemsToFilter.length; i++) {\n        if (this.props.itemsToFilter[i] !== undefined) {\n          if (this.props.itemsToFilter[i].price > startValue && this.props.itemsToFilter[i].price < endValue) {\n            this.productLimit++;\n            if (this.productLimit > 0) productExists = this.props.itemsToFilter.includes(this.props.itemsToFilter[i]);\n          }\n        }\n      }\n\n      this.productLimit = 0;\n      return productExists;\n    };\n\n    this.filterForm = () => {\n      if (this.state.isOpen) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"filter-wrapper\",\n          style: {\n            position: \"absolute\",\n            zIndex: \"2\",\n            background: \"white\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"price-filter-wrapper\",\n          style: {\n            display: \"inline-flex\",\n            flexDirection: \"column\",\n            marginLeft: \"170vh\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"ul\", {\n          style: {\n            listStyle: \"none\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 24\n          }\n        }, /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"h3\", {\n          style: {\n            textAlign: \"left\",\n            fontSize: \"17px\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 29\n          }\n        }, \"Price\")), this.renderCheckboxPrice().map((item, i) => /*#__PURE__*/React.createElement(\"li\", {\n          style: {\n            textAlign: \"left\"\n          },\n          key: i,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 29\n          }\n        }, item)))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"price-filter-wrapper\",\n          style: {\n            display: \"inline-flex\",\n            flexDirection: \"column\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"ul\", {\n          style: {\n            listStyle: \"none\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 22\n          }\n        }, /*#__PURE__*/React.createElement(\"h3\", {\n          style: {\n            textAlign: \"left\",\n            fontSize: \"17px\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 26\n          }\n        }, \"Price\")), this.renderCheckboxPrice().map((item, i) => /*#__PURE__*/React.createElement(\"li\", {\n          style: {\n            textAlign: \"left\"\n          },\n          key: i,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 26\n          }\n        }, item)))));\n      } else return null;\n    };\n\n    this.state = {\n      symbol: \"+\",\n      isOpen: true,\n      isMaxChecked: false,\n      priceFilterStartValue: 0,\n      priceFilterEndValue: 0\n    };\n    this.PRICE_THRESHOLDS = [0, 50, 100, 200, 300, 400, 500, 700, 900, 1000];\n    this.productLimit = 0;\n  }\n\n  render() {\n    console.log(this.sortedPriceArray());\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        paddingRight: \"70px\",\n        textAlign: \"right\",\n        position: \"relative\",\n        zIndex: \"2\"\n      },\n      className: \"filter-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        cursor: \"pointer\"\n      },\n      onClick: this.handleSymbolChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }\n    }, this.state.symbol, \"Filter\"), this.filterForm());\n  }\n\n}\n\nexport default RenderFilter;","map":{"version":3,"sources":["C:/Workspace/Cortex/cortex-official-website/src/front-end/src/components/products/RenderFilter.js"],"names":["React","Component","RenderFilter","constructor","props","getHighestPrice","Math","max","itemsToFilter","map","item","price","getLowestPrice","min","handleSymbolChange","e","preventDefault","setState","symbol","isFiltering","isOpen","state","handleFilterByMax","filterByMax","displayCheckboxText","startPrice","endPrice","getPriceDifferences","diff","i","length","undefined","push","abs","sort","a","b","toggleMaxCheckbox","console","log","isMaxChecked","renderCheckboxPrice","checkboxes","PRICE_THRESHOLDS","sortedPriceArray","checkProductBetweenValues","priceArray","startValue","endValue","productExists","productLimit","includes","filterForm","position","zIndex","background","display","flexDirection","marginLeft","listStyle","textAlign","fontSize","priceFilterStartValue","priceFilterEndValue","render","paddingRight","cursor"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAGA,OAAO,qBAAP;;AAEA,MAAMC,YAAN,SAA4BD,SAA5B,CAAsC;AAClCE,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAChB,UAAMA,KAAN;;AADgB,SAYpBC,eAZoB,GAYF,MAAM;AACpB,aAAOC,IAAI,CAACC,GAAL,CAAS,GAAG,KAAKH,KAAL,CAAWI,aAAX,CAAyBC,GAAzB,CAA8BC,IAAD,IAAU;AAAC,eAAOA,IAAI,CAACC,KAAZ;AAAkB,OAA1D,CAAZ,CAAP;AACH,KAdmB;;AAAA,SAepBC,cAfoB,GAeH,MAAM;AACnB,aAAON,IAAI,CAACO,GAAL,CAAS,GAAG,KAAKT,KAAL,CAAWI,aAAX,CAAyBC,GAAzB,CAA6BC,IAAI,IAAI;AAAC,eAAOA,IAAI,CAACC,KAAZ;AAAkB,OAAxD,CAAZ,CAAP;AACH,KAjBmB;;AAAA,SAkBpBG,kBAlBoB,GAkBEC,CAAD,IAAO;AACxBA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKC,QAAL,CAAc;AACVC,QAAAA,MAAM,EAAG,KAAKd,KAAL,CAAWe,WAAX,KAA2B,GAA3B,GAAiC,GADhC;AAEVC,QAAAA,MAAM,EAAG,CAAC,KAAKC,KAAL,CAAWD;AAFX,OAAd;AAIH,KAxBmB;;AAAA,SAyBpBE,iBAzBoB,GAyBA,MAAM;AACtB,WAAKlB,KAAL,CAAWmB,WAAX;AACH,KA3BmB;;AAAA,SA4BpBC,mBA5BoB,GA4BE,CAACC,UAAD,EAAaC,QAAb,KAA0B;AAC5C,aAAO,MAAMD,UAAN,GAAmB,KAAnB,GAA2B,GAA3B,GAAiCC,QAAxC;AACH,KA9BmB;;AAAA,SA+BpBC,mBA/BoB,GA+BE,MAAM;AACxB,UAAIC,IAAI,GAAG,EAAX;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKzB,KAAL,CAAWI,aAAX,CAAyBsB,MAA7C,EAAqDD,CAAC,EAAtD,EAAyD;AACrD,YAAG,KAAKzB,KAAL,CAAWI,aAAX,CAAyBqB,CAAzB,MAAgCE,SAAhC,IAA6C,IAAhD,EAAqD;AACjD,cAAI,KAAK3B,KAAL,CAAWI,aAAX,CAAyBqB,CAAC,GAAG,CAA7B,MAAoCE,SAAxC,EAAkD;AAC9CH,YAAAA,IAAI,CAACI,IAAL,CAAU1B,IAAI,CAAC2B,GAAL,CAAS,KAAK7B,KAAL,CAAWI,aAAX,CAAyBqB,CAAzB,EAA4BlB,KAA5B,GAAoC,KAAKP,KAAL,CAAWI,aAAX,CAAyBqB,CAAC,GAAG,CAA7B,EAAgClB,KAA7E,CAAV;AACH,WAFD,MAEK;AACD;AACH;AACJ;AACJ;;AACDiB,MAAAA,IAAI,CAACM,IAAL,CAAU,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAAxB;AACA,aAAOR,IAAP;AACH,KA5CmB;;AAAA,SA6CpBS,iBA7CoB,GA6CCtB,CAAD,IAAO;AACvBuB,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKlB,KAAL,CAAWmB,YAAvB;AACA,WAAKvB,QAAL,CAAc;AAACuB,QAAAA,YAAY,EAAG,CAAC,KAAKnB,KAAL,CAAWmB;AAA5B,OAAd;AACA,WAAKlB,iBAAL;AACH,KAjDmB;;AAAA,SAkDpBmB,mBAlDoB,GAkDE,MAAM;AACxB,UAAIC,UAAU,GAAG,EAAjB;;AACA,WAAI,IAAIb,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,KAAKc,gBAAL,CAAsBb,MAAzC,EAAiDD,CAAC,EAAlD,EAAqD;AACjD,YAAI,KAAKe,gBAAL,GAAwBf,CAAxB,MAA+BE,SAAnC,EAA6C;AACzC,cAAG,KAAKc,yBAAL,CAA+B,KAAKF,gBAAL,CAAsBd,CAAtB,CAA/B,EAAyD,KAAKc,gBAAL,CAAsBd,CAAC,GAAG,CAA1B,CAAzD,CAAH,EAA0F;AAClFa,YAAAA,UAAU,CAACV,IAAX,eACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACI;AACA,cAAA,SAAS,EAAE,iBADX;AAEA,cAAA,EAAE,EAAE,qBAAqBH,CAFzB;AAGA,cAAA,IAAI,EAAC,UAHL;AAIA,cAAA,OAAO,EAAE,KAAKR,KAAL,CAAWmB,YAJpB;AAKA,cAAA,QAAQ,EAAE,KAAKH,iBALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAOM;AAAO,cAAA,GAAG,EAAE,qBAAqBR,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACG,KAAKL,mBAAL,CAAyB,KAAKmB,gBAAL,CAAsBd,CAAtB,CAAzB,EAAmD,KAAKc,gBAAL,CAAsBd,CAAC,GAAG,CAA1B,CAAnD,CADH,CAPN,CADJ;AAaH;AACJ;AAER;;AACDS,MAAAA,OAAO,CAACC,GAAR,CAAYG,UAAZ;AACA,aAAOA,UAAP;AACH,KA1EmB;;AAAA,SA2EpBE,gBA3EoB,GA2ED,MAAM;AACrB,UAAIE,UAAJ;;AACA,UAAI,KAAK1C,KAAL,CAAWI,aAAX,KAA6BuB,SAAjC,EAA2C;AACtCe,QAAAA,UAAU,GAAG,KAAK1C,KAAL,CAAWI,aAAX,CAAyB0B,IAAzB,CAA8B,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAClD,iBAAOD,CAAC,CAACxB,KAAF,GAAUyB,CAAC,CAACzB,KAAnB;AACH,SAFa,CAAb;AAGJ;;AACD,aAAOmC,UAAP;AACH,KAnFmB;;AAAA,SAoFpBD,yBApFoB,GAoFQ,CAACE,UAAD,EAAaC,QAAb,KAA0B;AAClD,UAAIC,aAAa,GAAG,KAApB;;AACA,WAAK,IAAIpB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKzB,KAAL,CAAWI,aAAX,CAAyBsB,MAA7C,EAAqDD,CAAC,EAAtD,EAAyD;AACrD,YAAI,KAAKzB,KAAL,CAAWI,aAAX,CAAyBqB,CAAzB,MAAgCE,SAApC,EAA8C;AAC1C,cAAK,KAAK3B,KAAL,CAAWI,aAAX,CAAyBqB,CAAzB,EAA4BlB,KAA5B,GAAoCoC,UAApC,IAAkD,KAAK3C,KAAL,CAAWI,aAAX,CAAyBqB,CAAzB,EAA4BlB,KAA5B,GAAoCqC,QAA3F,EAAoG;AAChG,iBAAKE,YAAL;AACA,gBAAI,KAAKA,YAAL,GAAoB,CAAxB,EACID,aAAa,GAAG,KAAK7C,KAAL,CAAWI,aAAX,CAAyB2C,QAAzB,CAAkC,KAAK/C,KAAL,CAAWI,aAAX,CAAyBqB,CAAzB,CAAlC,CAAhB;AACP;AACJ;AACJ;;AACD,WAAKqB,YAAL,GAAoB,CAApB;AACA,aAAOD,aAAP;AACH,KAjGmB;;AAAA,SAkGpBG,UAlGoB,GAkGP,MAAM;AACf,UAAI,KAAK/B,KAAL,CAAWD,MAAf,EAAsB;AAClB,4BACI;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAgC,UAAA,KAAK,EAAE;AAACiC,YAAAA,QAAQ,EAAG,UAAZ;AAAwBC,YAAAA,MAAM,EAAG,GAAjC;AAAsCC,YAAAA,UAAU,EAAG;AAAnD,WAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI;AAAM,UAAA,SAAS,EAAC,sBAAhB;AAAuC,UAAA,KAAK,EAAE;AAACC,YAAAA,OAAO,EAAG,aAAX;AAA0BC,YAAAA,aAAa,EAAG,QAA1C;AAAoDC,YAAAA,UAAU,EAAG;AAAjE,WAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACG;AAAI,UAAA,KAAK,EAAE;AAACC,YAAAA,SAAS,EAAG;AAAb,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI;AAAI,UAAA,KAAK,EAAE;AAAEC,YAAAA,SAAS,EAAG,MAAd;AAAsBC,YAAAA,QAAQ,EAAG;AAAjC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,CADD,EAIE,KAAKpB,mBAAL,GAA2BhC,GAA3B,CAA+B,CAACC,IAAD,EAAOmB,CAAP,kBAC5B;AAAI,UAAA,KAAK,EAAE;AAAC+B,YAAAA,SAAS,EAAG;AAAb,WAAX;AAAiC,UAAA,GAAG,EAAE/B,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA0CnB,IAA1C,CADH,CAJF,CADH,CADJ,eAWI;AAAM,UAAA,SAAS,EAAC,sBAAhB;AAAuC,UAAA,KAAK,EAAE;AAAC8C,YAAAA,OAAO,EAAG,aAAX;AAA0BC,YAAAA,aAAa,EAAG;AAA1C,WAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACA;AAAI,UAAA,KAAK,EAAE;AAACE,YAAAA,SAAS,EAAG;AAAb,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI;AAAI,UAAA,KAAK,EAAE;AAAEC,YAAAA,SAAS,EAAG,MAAd;AAAsBC,YAAAA,QAAQ,EAAG;AAAjC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,CADD,EAIE,KAAKpB,mBAAL,GAA2BhC,GAA3B,CAA+B,CAACC,IAAD,EAAOmB,CAAP,kBAC5B;AAAI,UAAA,KAAK,EAAE;AAAC+B,YAAAA,SAAS,EAAG;AAAb,WAAX;AAAiC,UAAA,GAAG,EAAE/B,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA0CnB,IAA1C,CADH,CAJF,CADA,CAXJ,CADJ;AAwBH,OAzBD,MA2BI,OAAO,IAAP;AACP,KA/HmB;;AAEhB,SAAKW,KAAL,GAAY;AACRH,MAAAA,MAAM,EAAG,GADD;AAERE,MAAAA,MAAM,EAAG,IAFD;AAGRoB,MAAAA,YAAY,EAAG,KAHP;AAIRsB,MAAAA,qBAAqB,EAAG,CAJhB;AAKRC,MAAAA,mBAAmB,EAAG;AALd,KAAZ;AAOA,SAAKpB,gBAAL,GAAwB,CAAC,CAAD,EAAI,EAAJ,EAAQ,GAAR,EAAa,GAAb,EAAkB,GAAlB,EAAuB,GAAvB,EAA4B,GAA5B,EAAiC,GAAjC,EAAsC,GAAtC,EAA2C,IAA3C,CAAxB;AACA,SAAKO,YAAL,GAAoB,CAApB;AACH;;AAqHDc,EAAAA,MAAM,GAAI;AACN1B,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKK,gBAAL,EAAZ;AACA,wBACI;AAAK,MAAA,KAAK,EAAE;AAACqB,QAAAA,YAAY,EAAG,MAAhB;AAAwBL,QAAAA,SAAS,EAAG,OAApC;AAA6CP,QAAAA,QAAQ,EAAG,UAAxD;AAAoEC,QAAAA,MAAM,EAAG;AAA7E,OAAZ;AAA+F,MAAA,SAAS,EAAC,gBAAzG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACQ;AAAM,MAAA,KAAK,EAAE;AAACY,QAAAA,MAAM,EAAG;AAAV,OAAb;AAAmC,MAAA,OAAO,EAAE,KAAKpD,kBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsE,KAAKO,KAAL,CAAWH,MAAjF,WADR,EAES,KAAKkC,UAAL,EAFT,CADJ;AAMH;;AAzIiC;;AA6ItC,eAAelD,YAAf","sourcesContent":["import React, {Component} from 'react'\r\n\r\n\r\nimport \"../../checkbox.scss\"\r\n\r\nclass RenderFilter  extends Component {\r\n    constructor (props) {\r\n        super(props)\r\n        this.state ={ \r\n            symbol : \"+\",\r\n            isOpen : true,\r\n            isMaxChecked : false,\r\n            priceFilterStartValue : 0, \r\n            priceFilterEndValue : 0\r\n        }\r\n        this.PRICE_THRESHOLDS = [0, 50, 100, 200, 300, 400, 500, 700, 900, 1000]\r\n        this.productLimit = 0;\r\n    }\r\n    getHighestPrice = () => {\r\n        return Math.max(...this.props.itemsToFilter.map((item) => {return item.price}))\r\n    }\r\n    getLowestPrice = () => {\r\n        return Math.min(...this.props.itemsToFilter.map(item => {return item.price}))   \r\n    }\r\n    handleSymbolChange = (e) => {\r\n        e.preventDefault()     \r\n        this.setState({\r\n            symbol : this.props.isFiltering() ? \"-\" : \"+\",\r\n            isOpen : !this.state.isOpen\r\n        })   \r\n    }\r\n    handleFilterByMax = () => {\r\n        this.props.filterByMax()\r\n    }\r\n    displayCheckboxText = (startPrice, endPrice) => {\r\n        return \"$\" + startPrice + \" - \" + \"$\" + endPrice\r\n    }\r\n    getPriceDifferences = () => {\r\n        var diff = []\r\n        for (var i = 0; i < this.props.itemsToFilter.length; i++){  \r\n            if(this.props.itemsToFilter[i] !== undefined || null){\r\n                if (this.props.itemsToFilter[i + 1] !== undefined){\r\n                    diff.push(Math.abs(this.props.itemsToFilter[i].price - this.props.itemsToFilter[i + 1].price))               \r\n                }else{\r\n                    break;    \r\n                }                                    \r\n            }\r\n        }\r\n        diff.sort((a, b) => a - b)\r\n        return diff;\r\n    }\r\n    toggleMaxCheckbox = (e) => {\r\n        console.log(this.state.isMaxChecked)\r\n        this.setState({isMaxChecked : !this.state.isMaxChecked})\r\n        this.handleFilterByMax()\r\n    }\r\n    renderCheckboxPrice = () => {\r\n        let checkboxes = [] \r\n        for(let i = 0; i < this.PRICE_THRESHOLDS.length; i++){ \r\n            if (this.sortedPriceArray()[i] !== undefined){\r\n                if(this.checkProductBetweenValues(this.PRICE_THRESHOLDS[i], this.PRICE_THRESHOLDS[i + 1])){      \r\n                        checkboxes.push(    \r\n                            <React.Fragment>                        \r\n                                <input \r\n                                className={\"filter-checkbox\"}\r\n                                id={\"filter-checkbox-\" + i}\r\n                                type=\"checkbox\"\r\n                                checked={this.state.isMaxChecked}\r\n                                onChange={this.toggleMaxCheckbox}\r\n                                /><label for={\"filter-checkbox-\" + i} >\r\n                                    {this.displayCheckboxText(this.PRICE_THRESHOLDS[i], this.PRICE_THRESHOLDS[i + 1])}\r\n                                </label>\r\n                            </React.Fragment> \r\n                        )\r\n                    }\r\n                }\r\n            \r\n        }\r\n        console.log(checkboxes)\r\n        return checkboxes;\r\n    }\r\n    sortedPriceArray = () => {\r\n        let priceArray\r\n        if (this.props.itemsToFilter !== undefined){\r\n             priceArray = this.props.itemsToFilter.sort((a, b) => {\r\n                return a.price - b.price;\r\n            })\r\n        }\r\n        return priceArray\r\n    }\r\n    checkProductBetweenValues = (startValue, endValue) => {\r\n        let productExists = false;\r\n        for (let i = 0; i < this.props.itemsToFilter.length; i++){\r\n            if (this.props.itemsToFilter[i] !== undefined){\r\n                if ( this.props.itemsToFilter[i].price > startValue && this.props.itemsToFilter[i].price < endValue){\r\n                    this.productLimit++ \r\n                    if (this.productLimit > 0)\r\n                        productExists = this.props.itemsToFilter.includes(this.props.itemsToFilter[i])                \r\n                }\r\n            }\r\n        }\r\n        this.productLimit = 0;\r\n        return productExists\r\n    }\r\n    filterForm = () => {\r\n        if (this.state.isOpen){\r\n            return (\r\n                <div className=\"filter-wrapper\" style={{position : \"absolute\", zIndex : \"2\", background : \"white\"}}>\r\n                    <div  className=\"price-filter-wrapper\" style={{display : \"inline-flex\", flexDirection : \"column\", marginLeft : \"170vh\"}}>                   \r\n                       <ul style={{listStyle : \"none\"}}>\r\n                        <li>\r\n                            <h3 style={{ textAlign : \"left\", fontSize : \"17px\"}}>Price</h3>  \r\n                        </li>     \r\n                        {this.renderCheckboxPrice().map((item, i) => (\r\n                            <li style={{textAlign : \"left\"}} key={i}>{item}</li>\r\n                        ))}                      \r\n                       </ul>\r\n                    </div>\r\n                    <div  className=\"price-filter-wrapper\" style={{display : \"inline-flex\", flexDirection : \"column\"}}>                   \r\n                    <ul style={{listStyle : \"none\"}}>\r\n                     <li>\r\n                         <h3 style={{ textAlign : \"left\", fontSize : \"17px\"}}>Price</h3>  \r\n                     </li>     \r\n                     {this.renderCheckboxPrice().map((item, i) => (\r\n                         <li style={{textAlign : \"left\"}} key={i}>{item}</li>\r\n                     ))}                      \r\n                    </ul>\r\n                 </div>\r\n                </div>\r\n            )\r\n        }\r\n        else\r\n            return null\r\n    }\r\n    render () {\r\n        console.log(this.sortedPriceArray())\r\n        return (\r\n            <div style={{paddingRight : \"70px\", textAlign : \"right\", position : \"relative\", zIndex : \"2\"}} className=\"filter-wrapper\">\r\n                    <span style={{cursor : \"pointer\"}} onClick={this.handleSymbolChange}>{this.state.symbol}Filter</span>\r\n                    {this.filterForm()}\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default RenderFilter\r\n"]},"metadata":{},"sourceType":"module"}