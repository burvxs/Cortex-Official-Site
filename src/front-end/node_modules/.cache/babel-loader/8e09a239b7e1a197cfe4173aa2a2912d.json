{"ast":null,"code":"var _jsxFileName = \"C:\\\\Workspace\\\\Cortex\\\\cortex-official-website\\\\src\\\\front-end\\\\src\\\\components\\\\products\\\\ProductGrid.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from 'prop-types';\n\nclass ProductGrid extends Component {\n  constructor(props) {\n    super(props);\n\n    this.makeGrid = () => {\n      let rows = this.props.rows;\n      let cols = this.props.cols;\n      let grid = [];\n      let cell;\n      if (rows == 0) rows = rows + 1;\n\n      for (let c = 0; c < rows * cols; c++) {\n        console.log(this.props.itemsToRender[c]);\n        cell = /*#__PURE__*/React.createElement(React.Fragment, {\n          key: grid.length,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 20\n          }\n        }, this.props.itemsToRender[c]);\n        grid.push(cell);\n      }\n\n      return grid;\n    };\n\n    this.setCellHeight = () => {\n      let propHeight = this.props.itemHeight.concat(\" \");\n      let height = propHeight.repeat(this.props.rows);\n      return height;\n    };\n\n    this.setCellWidth = () => {\n      let propWidth = this.props.itemWidth.concat(\" \");\n      let width = propWidth.repeat(this.props.cols);\n      return width;\n    };\n  }\n\n  render() {\n    const containerStyle = {\n      display: \"grid\",\n      justifyContent: \"center\",\n      gridRows: this.props.rows,\n      gridCols: this.props.cols,\n      gridTemplateRows: this.setCellHeight(),\n      gridTemplateColumns: this.setCellWidth(),\n      columnGap: \"30px\",\n      rowGap: \"30px\"\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      onClick: this.selectItem,\n      style: containerStyle,\n      id: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, this.makeGrid());\n  }\n\n}\n\nProductGrid.propTypes = {\n  rows: PropTypes.number.isRequired,\n  cols: PropTypes.number.isRequired,\n  itemWidth: PropTypes.string.isRequired,\n  itemHeight: PropTypes.string.isRequired,\n  itemsToRender: PropTypes.array.isRequired\n};\nexport default ProductGrid;","map":{"version":3,"sources":["C:/Workspace/Cortex/cortex-official-website/src/front-end/src/components/products/ProductGrid.js"],"names":["React","Component","PropTypes","ProductGrid","constructor","props","makeGrid","rows","cols","grid","cell","c","console","log","itemsToRender","length","push","setCellHeight","propHeight","itemHeight","concat","height","repeat","setCellWidth","propWidth","itemWidth","width","render","containerStyle","display","justifyContent","gridRows","gridCols","gridTemplateRows","gridTemplateColumns","columnGap","rowGap","selectItem","propTypes","number","isRequired","string","array"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\"\r\nimport PropTypes from 'prop-types'\r\n\r\nclass ProductGrid extends Component {\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n    makeGrid = () => {\r\n        let rows = this.props.rows\r\n        let cols = this.props.cols\r\n        let grid = []\r\n        let cell\r\n        if (rows == 0)\r\n            rows = rows + 1\r\n        for (let c = 0; c < (rows * cols); c++){\r\n    \r\n            console.log(this.props.itemsToRender[c])\r\n            cell = <React.Fragment key={grid.length}>{this.props.itemsToRender[c]}</React.Fragment>\r\n            grid.push(cell)\r\n        }\r\n        return grid\r\n    }\r\n    setCellHeight = () => {\r\n        let propHeight = this.props.itemHeight.concat(\" \")\r\n        let height = propHeight.repeat(this.props.rows)\r\n        return height\r\n    }\r\n    setCellWidth = () => {\r\n        let propWidth = this.props.itemWidth.concat(\" \")\r\n        let width = propWidth.repeat(this.props.cols)\r\n        return width\r\n    }\r\n    render(){\r\n        const containerStyle = {\r\n            display : \"grid\",\r\n            justifyContent : \"center\",\r\n            gridRows : this.props.rows,\r\n            gridCols : this.props.cols,\r\n            gridTemplateRows : this.setCellHeight(),\r\n            gridTemplateColumns : this.setCellWidth(),\r\n            columnGap : \"30px\",\r\n            rowGap : \"30px\"        \r\n        }\r\n        return(\r\n            <div onClick={this.selectItem} style={containerStyle} id=\"container\">\r\n                {this.makeGrid()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nProductGrid.propTypes = {\r\n    rows : PropTypes.number.isRequired,\r\n    cols : PropTypes.number.isRequired,\r\n    itemWidth : PropTypes.string.isRequired,\r\n    itemHeight : PropTypes.string.isRequired,\r\n    itemsToRender : PropTypes.array.isRequired\r\n}\r\n\r\nexport default ProductGrid"]},"metadata":{},"sourceType":"module"}