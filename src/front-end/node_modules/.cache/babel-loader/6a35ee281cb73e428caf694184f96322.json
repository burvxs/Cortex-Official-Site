{"ast":null,"code":"var _jsxFileName = \"C:\\\\Workspace\\\\Cortex\\\\cortex-official-website\\\\src\\\\front-end\\\\src\\\\components\\\\products\\\\RenderFilter.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport \"../../checkbox.scss\";\n\nclass RenderFilter extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      this.setState({\n        isItemChecked: this.fillPriceCheckboxArray()\n      });\n    };\n\n    this.fillPriceCheckboxArray = () => {\n      let arr = [];\n\n      if (this.priceCheckboxCount !== 0) {\n        for (let i = 0; i < this.priceCheckboxCount; i++) {\n          arr.push(false);\n        }\n      }\n\n      console.log(arr);\n      return arr;\n    };\n\n    this.handleSymbolChange = e => {\n      e.preventDefault();\n      this.setState({\n        symbol: this.props.isFiltering() ? \"-\" : \"+\",\n        isOpen: !this.state.isOpen\n      });\n    };\n\n    this.displayCheckboxText = (startPrice, endPrice) => {\n      return \"$\" + startPrice + \" - \" + \"$\" + endPrice;\n    };\n\n    this.getPriceDifferences = () => {\n      var diff = [];\n\n      for (var i = 0; i < this.props.readObjects.length; i++) {\n        if (this.props.readObjects()[i] !== undefined || null) {\n          if (this.props.readObjects()[i + 1] !== undefined) {\n            diff.push(Math.abs(this.props.readObjects[i].price - this.props.readObjects[i + 1].price));\n          } else {\n            break;\n          }\n        }\n      }\n\n      diff.sort((a, b) => a - b);\n      return diff;\n    };\n\n    this.checkPriceItem = async e => {\n      e.preventDefault();\n      let idString = e.target.id;\n      let cbIndex = idString.substr(idString.length - 1);\n      cbIndex = parseInt(cbIndex);\n      this.state.isItemChecked[cbIndex] = e.target.checked;\n\n      if (this.state.isItemChecked[cbIndex]) {\n        const passedData = {\n          minRange: this.priceFilterStart[cbIndex],\n          maxRange: this.priceFilterEnd[cbIndex]\n        };\n        const res = await fetch(\"http://127.0.0.1:8000/api/products/?price__range=\" + passedData.minRange + \",\" + passedData.maxRange, {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            'Accept': 'application/json'\n          }\n        });\n        const data = await res.json();\n        !data.hasOwnProperty(\"error\") ? this.setState({\n          message: data.success\n        }) : this.setState({\n          message: data.error,\n          isError: true\n        });\n        if (!this.state.isError) this.props.onFilter(data[\"products\"]);\n\n        for (let i = 0; i < this.state.isItemChecked.length; i++) {\n          this.state.isItemChecked[i] = false;\n        }\n      }\n    };\n\n    this.renderCheckboxPrice = () => {\n      let checkboxes = [];\n\n      for (let i = 0; i < this.PRICE_THRESHOLDS.length; i++) {\n        if (this.checkProductBetweenValues(this.PRICE_THRESHOLDS[i], this.PRICE_THRESHOLDS[i + 1])) {\n          checkboxes.push( /*#__PURE__*/React.createElement(React.Fragment, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(\"input\", {\n            className: \"filter-checkbox\",\n            id: \"filter-checkbox-\" + i,\n            type: \"checkbox\",\n            checked: this.state.isItemChecked[i] || false,\n            onChange: this.handlePriceFilter,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 29\n            }\n          }), /*#__PURE__*/React.createElement(\"label\", {\n            htmlFor: \"filter-checkbox-\" + i,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 31\n            }\n          }, this.displayCheckboxText(this.PRICE_THRESHOLDS[i], this.PRICE_THRESHOLDS[i + 1]))));\n          this.priceFilterStart.push(this.PRICE_THRESHOLDS[i]);\n          this.priceFilterEnd.push(this.PRICE_THRESHOLDS[i + 1]);\n        } else break;\n      }\n\n      this.priceCount = checkboxes.length;\n      return checkboxes;\n    };\n\n    this.checkProductBetweenValues = (startValue, endValue) => {\n      let productExists = false;\n      const fullProductArray = this.props.readObjects;\n\n      for (let i = 0; i < fullProductArray.length; i++) {\n        if (fullProductArray[i] !== undefined) {\n          if (fullProductArray[i].price > startValue && fullProductArray[i].price < endValue) {\n            this.productLimit++;\n            if (this.productLimit > 0) productExists = this.props.readObjects.includes(fullProductArray[i]);\n          }\n        }\n      }\n\n      this.productLimit = 0;\n      return productExists;\n    };\n\n    this.filterForm = () => {\n      if (this.state.isOpen) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"filter-wrapper\",\n          style: filterWrapperStyle,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"price-filter-wrapper\",\n          style: {\n            gridArea: \"1 / col3Start\",\n            paddingRight: \"15vh\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"ul\", {\n          style: {\n            listStyle: \"none\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 24\n          }\n        }, /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"h3\", {\n          style: {\n            textAlign: \"left\",\n            fontSize: \"17px\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 29\n          }\n        }, \"Price\")), this.renderCheckboxPrice().map((item, i) => /*#__PURE__*/React.createElement(\"li\", {\n          style: {\n            textAlign: \"left\"\n          },\n          key: i,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 29\n          }\n        }, item)))));\n      } else return null;\n    };\n\n    this.state = {\n      symbol: \"+\",\n      isOpen: false,\n      isError: false\n    };\n    this.PRICE_THRESHOLDS = [0, 50, 100, 200, 300, 400, 500, 700, 900, 1000];\n    this.productLimit = 0;\n    this.priceFilterStart = [];\n    this.priceFilterEnd = [];\n    this.priceCheckboxCount = 0;\n    this.handlePriceFilter = this.checkPriceItem.bind(this);\n    console.log(this.state.isItemChecked);\n  }\n\n  set priceCount(value) {\n    this.priceCheckboxCount = value;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: \"100%\",\n        textAlign: \"right\",\n        position: \"relative\",\n        zIndex: \"10\",\n        justifyContent: \"right\",\n        background: \"black\"\n      },\n      className: \"filter-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        cursor: \"pointer\"\n      },\n      onClick: this.handleSymbolChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }\n    }, this.state.symbol, \"Filter\"), this.filterForm());\n  }\n\n}\n\nconst filterWrapperStyle = {\n  display: \"grid\",\n  columns: \"4\",\n  gridTemplateColumns: \"repeat(4, 1fr)\",\n  columnGap: \"40px\",\n  rowGap: \"40px\",\n  gridTemplateRows: \"1\",\n  width: \"100%\",\n  justifyItems: \"end\",\n  position: \"absolute\",\n  zIndex: \"2\",\n  background: \"white\"\n};\nexport default RenderFilter;","map":{"version":3,"sources":["C:/Workspace/Cortex/cortex-official-website/src/front-end/src/components/products/RenderFilter.js"],"names":["React","Component","Link","RenderFilter","constructor","props","componentDidMount","setState","isItemChecked","fillPriceCheckboxArray","arr","priceCheckboxCount","i","push","console","log","handleSymbolChange","e","preventDefault","symbol","isFiltering","isOpen","state","displayCheckboxText","startPrice","endPrice","getPriceDifferences","diff","readObjects","length","undefined","Math","abs","price","sort","a","b","checkPriceItem","idString","target","id","cbIndex","substr","parseInt","checked","passedData","minRange","priceFilterStart","maxRange","priceFilterEnd","res","fetch","method","headers","data","json","hasOwnProperty","message","success","error","isError","onFilter","renderCheckboxPrice","checkboxes","PRICE_THRESHOLDS","checkProductBetweenValues","handlePriceFilter","priceCount","startValue","endValue","productExists","fullProductArray","productLimit","includes","filterForm","filterWrapperStyle","gridArea","paddingRight","listStyle","textAlign","fontSize","map","item","bind","value","render","height","position","zIndex","justifyContent","background","cursor","display","columns","gridTemplateColumns","columnGap","rowGap","gridTemplateRows","width","justifyItems"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AAEA,OAAO,qBAAP;;AAEA,MAAMC,YAAN,SAA4BF,SAA5B,CAAsC;AAClCG,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAChB,UAAMA,KAAN;;AADgB,SAgBpBC,iBAhBoB,GAgBA,MAAK;AACrB,WAAKC,QAAL,CAAc;AACVC,QAAAA,aAAa,EAAG,KAAKC,sBAAL;AADN,OAAd;AAGH,KApBmB;;AAAA,SAqBpBA,sBArBoB,GAqBK,MAAM;AAC3B,UAAIC,GAAG,GAAG,EAAV;;AACA,UAAI,KAAKC,kBAAL,KAA4B,CAAhC,EAAkC;AAC9B,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKD,kBAAzB,EAA6CC,CAAC,EAA9C,EAAiD;AAC7CF,UAAAA,GAAG,CAACG,IAAJ,CAAS,KAAT;AACH;AACJ;;AACDC,MAAAA,OAAO,CAACC,GAAR,CAAYL,GAAZ;AACA,aAAOA,GAAP;AACH,KA9BmB;;AAAA,SA+BpBM,kBA/BoB,GA+BEC,CAAD,IAAO;AACxBA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKX,QAAL,CAAc;AACVY,QAAAA,MAAM,EAAG,KAAKd,KAAL,CAAWe,WAAX,KAA2B,GAA3B,GAAiC,GADhC;AAEVC,QAAAA,MAAM,EAAG,CAAC,KAAKC,KAAL,CAAWD;AAFX,OAAd;AAIH,KArCmB;;AAAA,SAsCpBE,mBAtCoB,GAsCE,CAACC,UAAD,EAAaC,QAAb,KAA0B;AAC5C,aAAO,MAAMD,UAAN,GAAmB,KAAnB,GAA2B,GAA3B,GAAiCC,QAAxC;AACH,KAxCmB;;AAAA,SAyCpBC,mBAzCoB,GAyCE,MAAM;AACxB,UAAIC,IAAI,GAAG,EAAX;;AACA,WAAK,IAAIf,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKP,KAAL,CAAWuB,WAAX,CAAuBC,MAA3C,EAAmDjB,CAAC,EAApD,EAAuD;AACnD,YAAG,KAAKP,KAAL,CAAWuB,WAAX,GAAyBhB,CAAzB,MAAgCkB,SAAhC,IAA6C,IAAhD,EAAqD;AACjD,cAAI,KAAKzB,KAAL,CAAWuB,WAAX,GAAyBhB,CAAC,GAAG,CAA7B,MAAoCkB,SAAxC,EAAkD;AAC9CH,YAAAA,IAAI,CAACd,IAAL,CAAUkB,IAAI,CAACC,GAAL,CAAS,KAAK3B,KAAL,CAAWuB,WAAX,CAAuBhB,CAAvB,EAA0BqB,KAA1B,GAAkC,KAAK5B,KAAL,CAAWuB,WAAX,CAAuBhB,CAAC,GAAG,CAA3B,EAA8BqB,KAAzE,CAAV;AACH,WAFD,MAEK;AACD;AACH;AACJ;AACJ;;AACDN,MAAAA,IAAI,CAACO,IAAL,CAAU,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAAxB;AACA,aAAOT,IAAP;AACH,KAtDmB;;AAAA,SA0DpBU,cA1DoB,GA0DH,MAAMpB,CAAN,IAAW;AACxBA,MAAAA,CAAC,CAACC,cAAF;AACA,UAAIoB,QAAQ,GAAGrB,CAAC,CAACsB,MAAF,CAASC,EAAxB;AACA,UAAIC,OAAO,GAAGH,QAAQ,CAACI,MAAT,CAAgBJ,QAAQ,CAACT,MAAT,GAAkB,CAAlC,CAAd;AACAY,MAAAA,OAAO,GAAGE,QAAQ,CAACF,OAAD,CAAlB;AACA,WAAKnB,KAAL,CAAWd,aAAX,CAAyBiC,OAAzB,IAAoCxB,CAAC,CAACsB,MAAF,CAASK,OAA7C;;AAEA,UAAI,KAAKtB,KAAL,CAAWd,aAAX,CAAyBiC,OAAzB,CAAJ,EAAsC;AAClC,cAAMI,UAAU,GAAG;AACfC,UAAAA,QAAQ,EAAG,KAAKC,gBAAL,CAAsBN,OAAtB,CADI;AAEfO,UAAAA,QAAQ,EAAG,KAAKC,cAAL,CAAoBR,OAApB;AAFI,SAAnB;AAIA,cAAMS,GAAG,GAAG,MAAMC,KAAK,CAAC,sDAAsDN,UAAU,CAACC,QAAjE,GAA4E,GAA5E,GAAkFD,UAAU,CAACG,QAA9F,EAAwG;AAC3HI,UAAAA,MAAM,EAAG,KADkH;AAE3HC,UAAAA,OAAO,EAAG;AACN,4BAAiB,kBADX;AAEN,sBAAU;AAFJ;AAFiH,SAAxG,CAAvB;AAOA,cAAMC,IAAI,GAAG,MAAMJ,GAAG,CAACK,IAAJ,EAAnB;AACA,SAACD,IAAI,CAACE,cAAL,CAAoB,OAApB,CAAD,GACE,KAAKjD,QAAL,CAAc;AAACkD,UAAAA,OAAO,EAAGH,IAAI,CAACI;AAAhB,SAAd,CADF,GAEE,KAAKnD,QAAL,CAAc;AAACkD,UAAAA,OAAO,EAAGH,IAAI,CAACK,KAAhB;AAAuBC,UAAAA,OAAO,EAAG;AAAjC,SAAd,CAFF;AAGA,YAAG,CAAC,KAAKtC,KAAL,CAAWsC,OAAf,EACI,KAAKvD,KAAL,CAAWwD,QAAX,CAAoBP,IAAI,CAAC,UAAD,CAAxB;;AACJ,aAAK,IAAI1C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKU,KAAL,CAAWd,aAAX,CAAyBqB,MAA7C,EAAqDjB,CAAC,EAAtD,EAAyD;AACjD,eAAKU,KAAL,CAAWd,aAAX,CAAyBI,CAAzB,IAA8B,KAA9B;AACP;AACJ;AACJ,KAvFmB;;AAAA,SAwFpBkD,mBAxFoB,GAwFE,MAAM;AACxB,UAAIC,UAAU,GAAG,EAAjB;;AACA,WAAI,IAAInD,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,KAAKoD,gBAAL,CAAsBnC,MAAzC,EAAiDjB,CAAC,EAAlD,EAAqD;AACjD,YAAG,KAAKqD,yBAAL,CAA+B,KAAKD,gBAAL,CAAsBpD,CAAtB,CAA/B,EAAyD,KAAKoD,gBAAL,CAAsBpD,CAAC,GAAG,CAA1B,CAAzD,CAAH,EAA0F;AACtFmD,UAAAA,UAAU,CAAClD,IAAX,eACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACQ;AACA,YAAA,SAAS,EAAC,iBADV;AAEA,YAAA,EAAE,EAAE,qBAAqBD,CAFzB;AAGA,YAAA,IAAI,EAAC,UAHL;AAIA,YAAA,OAAO,EAAE,KAAKU,KAAL,CAAWd,aAAX,CAAyBI,CAAzB,KAA+B,KAJxC;AAKA,YAAA,QAAQ,EAAE,KAAKsD,iBALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADR,eAOU;AAAO,YAAA,OAAO,EAAE,qBAAqBtD,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACG,KAAKW,mBAAL,CAAyB,KAAKyC,gBAAL,CAAsBpD,CAAtB,CAAzB,EAAmD,KAAKoD,gBAAL,CAAsBpD,CAAC,GAAG,CAA1B,CAAnD,CADH,CAPV,CADJ;AAaA,eAAKmC,gBAAL,CAAsBlC,IAAtB,CAA2B,KAAKmD,gBAAL,CAAsBpD,CAAtB,CAA3B;AACA,eAAKqC,cAAL,CAAoBpC,IAApB,CAAyB,KAAKmD,gBAAL,CAAsBpD,CAAC,GAAG,CAA1B,CAAzB;AACH,SAhBD,MAiBI;AACP;;AACD,WAAKuD,UAAL,GAAkBJ,UAAU,CAAClC,MAA7B;AACA,aAAOkC,UAAP;AACH,KAhHmB;;AAAA,SAiHpBE,yBAjHoB,GAiHQ,CAACG,UAAD,EAAaC,QAAb,KAA0B;AAClD,UAAIC,aAAa,GAAG,KAApB;AACA,YAAMC,gBAAgB,GAAG,KAAKlE,KAAL,CAAWuB,WAApC;;AACA,WAAK,IAAIhB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG2D,gBAAgB,CAAC1C,MAArC,EAA6CjB,CAAC,EAA9C,EAAiD;AAC7C,YAAI2D,gBAAgB,CAAC3D,CAAD,CAAhB,KAAwBkB,SAA5B,EAAsC;AAClC,cAAKyC,gBAAgB,CAAC3D,CAAD,CAAhB,CAAoBqB,KAApB,GAA4BmC,UAA5B,IAA0CG,gBAAgB,CAAC3D,CAAD,CAAhB,CAAoBqB,KAApB,GAA4BoC,QAA3E,EAAoF;AAChF,iBAAKG,YAAL;AACA,gBAAI,KAAKA,YAAL,GAAoB,CAAxB,EACIF,aAAa,GAAG,KAAKjE,KAAL,CAAWuB,WAAX,CAAuB6C,QAAvB,CAAgCF,gBAAgB,CAAC3D,CAAD,CAAhD,CAAhB;AACP;AACJ;AACJ;;AACD,WAAK4D,YAAL,GAAoB,CAApB;AACA,aAAOF,aAAP;AACH,KA/HmB;;AAAA,SAgIpBI,UAhIoB,GAgIP,MAAM;AACf,UAAI,KAAKpD,KAAL,CAAWD,MAAf,EAAsB;AAClB,4BACI;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAgC,UAAA,KAAK,EAAEsD,kBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI;AAAM,UAAA,SAAS,EAAC,sBAAhB;AAAuC,UAAA,KAAK,EAAE;AAACC,YAAAA,QAAQ,EAAG,eAAZ;AAA6BC,YAAAA,YAAY,EAAG;AAA5C,WAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACG;AAAI,UAAA,KAAK,EAAE;AAACC,YAAAA,SAAS,EAAG;AAAb,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI;AAAI,UAAA,KAAK,EAAE;AAAEC,YAAAA,SAAS,EAAG,MAAd;AAAsBC,YAAAA,QAAQ,EAAG;AAAjC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,CADD,EAIE,KAAKlB,mBAAL,GAA2BmB,GAA3B,CAA+B,CAACC,IAAD,EAAOtE,CAAP,kBAC5B;AAAI,UAAA,KAAK,EAAE;AAACmE,YAAAA,SAAS,EAAG;AAAb,WAAX;AAAiC,UAAA,GAAG,EAAEnE,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA0CsE,IAA1C,CADH,CAJF,CADH,CADJ,CADJ;AAcH,OAfD,MAiBI,OAAO,IAAP;AACP,KAnJmB;;AAEhB,SAAK5D,KAAL,GAAY;AACRH,MAAAA,MAAM,EAAG,GADD;AAERE,MAAAA,MAAM,EAAG,KAFD;AAGRuC,MAAAA,OAAO,EAAG;AAHF,KAAZ;AAKA,SAAKI,gBAAL,GAAwB,CAAC,CAAD,EAAI,EAAJ,EAAQ,GAAR,EAAa,GAAb,EAAkB,GAAlB,EAAuB,GAAvB,EAA4B,GAA5B,EAAiC,GAAjC,EAAsC,GAAtC,EAA2C,IAA3C,CAAxB;AACA,SAAKQ,YAAL,GAAoB,CAApB;AACA,SAAKzB,gBAAL,GAAwB,EAAxB;AACA,SAAKE,cAAL,GAAsB,EAAtB;AACA,SAAKtC,kBAAL,GAA0B,CAA1B;AACA,SAAKuD,iBAAL,GAAyB,KAAK7B,cAAL,CAAoB8C,IAApB,CAAyB,IAAzB,CAAzB;AACArE,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKO,KAAL,CAAWd,aAAvB;AAEH;;AAwCD,MAAI2D,UAAJ,CAAeiB,KAAf,EAAqB;AACjB,SAAKzE,kBAAL,GAA0ByE,KAA1B;AACH;;AA2FDC,EAAAA,MAAM,GAAI;AACN,wBACI;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAG,MAAV;AAAkBP,QAAAA,SAAS,EAAG,OAA9B;AAAuCQ,QAAAA,QAAQ,EAAG,UAAlD;AAA8DC,QAAAA,MAAM,EAAG,IAAvE;AAA6EC,QAAAA,cAAc,EAAG,OAA9F;AAAuGC,QAAAA,UAAU,EAAG;AAApH,OAAZ;AAA0I,MAAA,SAAS,EAAC,gBAApJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAM,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAG;AAAV,OAAb;AAAmC,MAAA,OAAO,EAAE,KAAK3E,kBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsE,KAAKM,KAAL,CAAWH,MAAjF,WADJ,EAEK,KAAKuD,UAAL,EAFL,CADJ;AAMH;;AA5JiC;;AA+JtC,MAAMC,kBAAkB,GAAG;AACvBiB,EAAAA,OAAO,EAAG,MADa;AAEvBC,EAAAA,OAAO,EAAG,GAFa;AAGvBC,EAAAA,mBAAmB,EAAE,gBAHE;AAIvBC,EAAAA,SAAS,EAAG,MAJW;AAKvBC,EAAAA,MAAM,EAAG,MALc;AAMvBC,EAAAA,gBAAgB,EAAG,GANI;AAOvBC,EAAAA,KAAK,EAAG,MAPe;AAQvBC,EAAAA,YAAY,EAAG,KARQ;AASvBZ,EAAAA,QAAQ,EAAG,UATY;AAUvBC,EAAAA,MAAM,EAAG,GAVc;AAWvBE,EAAAA,UAAU,EAAG;AAXU,CAA3B;AAeA,eAAevF,YAAf","sourcesContent":["import React, {Component} from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport \"../../checkbox.scss\"\r\n\r\nclass RenderFilter  extends Component {\r\n    constructor (props) {\r\n        super(props)\r\n        this.state ={ \r\n            symbol : \"+\",\r\n            isOpen : false,\r\n            isError : false\r\n        }\r\n        this.PRICE_THRESHOLDS = [0, 50, 100, 200, 300, 400, 500, 700, 900, 1000]\r\n        this.productLimit = 0;\r\n        this.priceFilterStart = []\r\n        this.priceFilterEnd = []\r\n        this.priceCheckboxCount = 0\r\n        this.handlePriceFilter = this.checkPriceItem.bind(this)\r\n        console.log(this.state.isItemChecked)\r\n        \r\n    }\r\n    componentDidMount = () =>{\r\n        this.setState({\r\n            isItemChecked : this.fillPriceCheckboxArray()\r\n        })\r\n    }\r\n    fillPriceCheckboxArray = () => {\r\n        let arr = []\r\n        if (this.priceCheckboxCount !== 0){\r\n            for (let i = 0; i < this.priceCheckboxCount; i++){\r\n                arr.push(false)\r\n            }  \r\n        }\r\n        console.log(arr)\r\n        return arr\r\n    }\r\n    handleSymbolChange = (e) => {\r\n        e.preventDefault()     \r\n        this.setState({\r\n            symbol : this.props.isFiltering() ? \"-\" : \"+\",\r\n            isOpen : !this.state.isOpen\r\n        })   \r\n    }\r\n    displayCheckboxText = (startPrice, endPrice) => {\r\n        return \"$\" + startPrice + \" - \" + \"$\" + endPrice\r\n    }\r\n    getPriceDifferences = () => {\r\n        var diff = []\r\n        for (var i = 0; i < this.props.readObjects.length; i++){  \r\n            if(this.props.readObjects()[i] !== undefined || null){\r\n                if (this.props.readObjects()[i + 1] !== undefined){\r\n                    diff.push(Math.abs(this.props.readObjects[i].price - this.props.readObjects[i + 1].price))               \r\n                }else{\r\n                    break;    \r\n                }                                    \r\n            }\r\n        }\r\n        diff.sort((a, b) => a - b)\r\n        return diff;\r\n    }\r\n    set priceCount(value){\r\n        this.priceCheckboxCount = value\r\n    }\r\n    checkPriceItem = async e => {\r\n        e.preventDefault()\r\n        let idString = e.target.id\r\n        let cbIndex = idString.substr(idString.length - 1)\r\n        cbIndex = parseInt(cbIndex)\r\n        this.state.isItemChecked[cbIndex] = e.target.checked  \r\n     \r\n        if (this.state.isItemChecked[cbIndex]){                \r\n            const passedData = {\r\n                minRange : this.priceFilterStart[cbIndex],\r\n                maxRange : this.priceFilterEnd[cbIndex]\r\n            }\r\n            const res = await fetch(\"http://127.0.0.1:8000/api/products/?price__range=\" + passedData.minRange + \",\" + passedData.maxRange, {\r\n                method : \"GET\",\r\n                headers : {\r\n                    \"Content-Type\" : \"application/json\",\r\n                    'Accept': 'application/json'\r\n                }                  \r\n            })\r\n            const data = await res.json()\r\n            !data.hasOwnProperty(\"error\") \r\n            ? this.setState({message : data.success})\r\n            : this.setState({message : data.error, isError : true})          \r\n            if(!this.state.isError)\r\n                this.props.onFilter(data[\"products\"])\r\n            for (let i = 0; i < this.state.isItemChecked.length; i++){\r\n                    this.state.isItemChecked[i] = false\r\n            } \r\n        }\r\n    }\r\n    renderCheckboxPrice = () => {\r\n        let checkboxes = [] \r\n        for(let i = 0; i < this.PRICE_THRESHOLDS.length; i++){ \r\n            if(this.checkProductBetweenValues(this.PRICE_THRESHOLDS[i], this.PRICE_THRESHOLDS[i + 1])){ \r\n                checkboxes.push(    \r\n                    <React.Fragment>    \r\n                            <input \r\n                            className=\"filter-checkbox\"\r\n                            id={\"filter-checkbox-\" + i}\r\n                            type=\"checkbox\"\r\n                            checked={this.state.isItemChecked[i] || false}\r\n                            onChange={this.handlePriceFilter}\r\n                            /><label htmlFor={\"filter-checkbox-\" + i} >\r\n                                {this.displayCheckboxText(this.PRICE_THRESHOLDS[i], this.PRICE_THRESHOLDS[i + 1])}\r\n                            </label>\r\n                    </React.Fragment> \r\n                )\r\n                this.priceFilterStart.push(this.PRICE_THRESHOLDS[i])\r\n                this.priceFilterEnd.push(this.PRICE_THRESHOLDS[i + 1])\r\n            }else\r\n                break;          \r\n        }\r\n        this.priceCount = checkboxes.length\r\n        return checkboxes;\r\n    }\r\n    checkProductBetweenValues = (startValue, endValue) => {\r\n        let productExists = false;\r\n        const fullProductArray = this.props.readObjects\r\n        for (let i = 0; i < fullProductArray.length; i++){\r\n            if (fullProductArray[i] !== undefined){\r\n                if ( fullProductArray[i].price > startValue && fullProductArray[i].price < endValue){\r\n                    this.productLimit++ \r\n                    if (this.productLimit > 0)\r\n                        productExists = this.props.readObjects.includes(fullProductArray[i])                \r\n                }\r\n            }\r\n        }\r\n        this.productLimit = 0;\r\n        return productExists\r\n    }\r\n    filterForm = () => {\r\n        if (this.state.isOpen){\r\n            return (\r\n                <div className=\"filter-wrapper\" style={filterWrapperStyle}>\r\n                    <div  className=\"price-filter-wrapper\" style={{gridArea : \"1 / col3Start\", paddingRight : \"15vh\"}}>                   \r\n                       <ul style={{listStyle : \"none\"}}>\r\n                        <li>\r\n                            <h3 style={{ textAlign : \"left\", fontSize : \"17px\"}}>Price</h3>  \r\n                        </li>     \r\n                        {this.renderCheckboxPrice().map((item, i) => (\r\n                            <li style={{textAlign : \"left\"}} key={i}>{item}</li>\r\n                        ))}                      \r\n                       </ul>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else\r\n            return null\r\n    }\r\n    render () {\r\n        return (\r\n            <div style={{height : \"100%\", textAlign : \"right\", position : \"relative\", zIndex : \"10\", justifyContent : \"right\", background : \"black\"}} className=\"filter-wrapper\">\r\n                <span style={{cursor : \"pointer\"}} onClick={this.handleSymbolChange}>{this.state.symbol}Filter</span>\r\n                {this.filterForm()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst filterWrapperStyle = {\r\n    display : \"grid\", \r\n    columns : \"4\",\r\n    gridTemplateColumns: \"repeat(4, 1fr)\", \r\n    columnGap : \"40px\",\r\n    rowGap : \"40px\",\r\n    gridTemplateRows : \"1\",\r\n    width : \"100%\",\r\n    justifyItems : \"end\", \r\n    position : \"absolute\", \r\n    zIndex : \"2\", \r\n    background : \"white\"\r\n}\r\n\r\n\r\nexport default RenderFilter\r\n"]},"metadata":{},"sourceType":"module"}