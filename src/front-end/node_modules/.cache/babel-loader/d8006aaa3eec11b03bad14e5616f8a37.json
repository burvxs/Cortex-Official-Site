{"ast":null,"code":"var _jsxFileName = \"C:\\\\Workspace\\\\Cortex\\\\cortex-official-website\\\\src\\\\front-end\\\\src\\\\components\\\\forms\\\\Register.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Base from '../base/Base';\nimport Modal from 'react-modal';\nimport { Row, Col } from 'reactstrap';\nModal.defaultStyles.overlay.backgroundColor = \"none\";\n\nclass RegisterForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.validateForm = () => {\n      if (this.status !== null) {\n        if (this.status == 406) {\n          this.isInvalid = true;\n        } else if (!this.isInvalid) this.isValid = true;\n      }\n    };\n\n    this.handleFormChange = e => {\n      let elementName = e.target.name;\n      let content = e.target.value;\n      this.setState({\n        values: { ...this.state.values,\n          [elementName]: content\n        }\n      });\n    };\n\n    this.SubmitRegisterData = async e => {\n      e.preventDefault();\n      console.log(this.state);\n\n      if (this.state.isValid[0] && this.state.isValid[1]) {\n        this.setState({\n          isSubmitting: true\n        });\n        const res = await fetch(\"http://127.0.0.1:8000/api/accounts/\", {\n          method: \"POST\",\n          body: JSON.stringify(this.state.values),\n          headers: {\n            \"Content-Type\": \"application/json\",\n            'Accept': 'application/json'\n          }\n        });\n        this.status = res.status;\n        this.setState({\n          isSubmitting: false\n        });\n        const data = await res.json();\n        !data.hasOwnProperty(\"error\") ? this.setState({\n          message: data.success\n        }) : this.setState({\n          message: data.error,\n          isError: true\n        });\n        console.log(this.state.message);\n        this.setState({\n          values: {\n            email: \"\",\n            firstname: \"\",\n            lastname: \"\",\n            fullName: \"\",\n            password: \"\",\n            phoneNumber: \"\"\n          }\n        });\n      }\n    };\n\n    this.feedbackStyle = () => {\n      if (this.isInvalid == true) {\n        return {\n          display: \"flex\"\n        };\n      }\n    };\n\n    this.toggleHover = e => {\n      this.setState({\n        isHover: !this.state.hover\n      });\n      if (this.state.isHover) this.setState({\n        isHover: false\n      });\n    };\n\n    this.getHoverStyle = () => {\n      var style;\n      if (this.state.isHover) style = \"#404040\";else style = \"black\";\n      return style;\n    };\n\n    this.validatePassword = e => {\n      //let digitReg = new RegExp(\"[0-9].{2}\");    \n      let lenReg = new RegExp(\"(?=.*[A-Z])\");\n      let isConfirmed = false;\n\n      if (e.target.value === \"\" || e.target.value === null || e.target.value === undefined) {\n        this.setState({\n          isPasswordValid: false\n        });\n        this.feedbackValue = /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            color: \"red\",\n            marginBottom: \"-5px\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 34\n          }\n        }, \"Password cannot be empty.\");\n      } else {\n        isConfirmed = true;\n      }\n\n      if (isConfirmed) {\n        if (!lenReg.test(this.state.confirmPassword)) {\n          this.setState({\n            isPasswordValid: false\n          });\n          this.feedbackValue = /*#__PURE__*/React.createElement(\"p\", {\n            style: {\n              color: \"red\",\n              marginBottom: \"-5px\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 38\n            }\n          }, \"Password must contain atleast 2 numbers 8 digits.\");\n        } else {\n          this.setState({\n            isPasswordValid: true\n          });\n          this.feedbackValue = null;\n        }\n      }\n    };\n\n    this.getPasswordInputStyle = () => {\n      if (!this.state.isPasswordValid) {\n        return \"red\";\n      } else {\n        return \"black\";\n      }\n    };\n\n    this.validateEmail = e => {\n      let reEmail = new RegExp(\"/\\S+@\\S+\\.\\S+/\");\n\n      if (e.target.value != null) {\n        if (this.state.values.email.indexOf('@') > 0) {\n          this.feedbackValue = /*#__PURE__*/React.createElement(\"p\", {\n            style: {\n              color: \"red\",\n              marginBottom: \"-5px\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 38\n            }\n          }, \"This is not a email\");\n          this.setState({\n            isEmailValid: false\n          });\n        } else {\n          this.setState({\n            isEmailValid: true\n          });\n        }\n      }\n    };\n\n    this.state = {\n      values: {\n        email: \"\",\n        firstname: \"\",\n        lastname: \"\",\n        fullName: \"\",\n        password: \"\",\n        phoneNumber: \"\"\n      },\n      isSubmitting: false,\n      isOpen: false,\n      isPasswordValid: false,\n      isEmailValid: false,\n      isValid: [this.isPasswordValid, this.isEmailValid],\n      isError: false,\n      isHover: false\n    };\n    this.feedbackValue = null;\n    this.status = null;\n  }\n\n  componentDidMount() {\n    this.setState({\n      isOpen: true\n    });\n  }\n\n  render() {\n    this.validateForm();\n    const buttonStyle = {\n      outline: \"none\",\n      width: \"90%\",\n      height: \"39px\",\n      marginLeft: \"18px\",\n      borderRadius: \"10px\",\n      borderColor: \"\t#FFFFFF\",\n      borderWidth: \"2px\",\n      backgroundColor: this.getHoverStyle(),\n      color: \"white\",\n      transition: \"all ease .5s\"\n    };\n    const inputStyle = {\n      borderColor: \"black\",\n      borderWidth: \"1px\",\n      borderRadius: \"3px\",\n      outline: \"none\",\n      width: \"100%\"\n    };\n    document.getElementById('root').style.filter = 'none';\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.isOpen,\n      ariaHideApp: false,\n      style: modalStyle,\n      width: \"10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 21\n      }\n    }, \"Sign Up\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        paddingTop: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        display: \"flex\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 29\n      }\n    }, \"First Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      style: {\n        width: \"100%\",\n        paddingRight: \"5px\"\n      },\n      type: \"text\",\n      name: \"firstname\",\n      placeholder: \"Enter your first name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      style: {\n        paddingLeft: \"5px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        display: \"flex\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 29\n      }\n    }, \"Last Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      style: {\n        width: \"100%\"\n      },\n      type: \"text\",\n      name: \"lastname\",\n      placeholder: \"Enter your last name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        paddingTop: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        display: \"flex\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 29\n      }\n    }, \"Email *\"), /*#__PURE__*/React.createElement(\"input\", {\n      style: inputStyle,\n      type: \"text\",\n      name: \"email\",\n      onChange: this.validateEmail,\n      placeholder: \"Enter your email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        display: \"flex\",\n        paddingTop: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 29\n      }\n    }, \"Password *\"), /*#__PURE__*/React.createElement(\"input\", {\n      style: inputStyle,\n      type: \"password\",\n      name: \"password\",\n      onChange: this.validatePassword,\n      placeholder: \"Enter your password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 29\n      }\n    }), this.feedbackValue, /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        paddingLeft: \"20px\",\n        paddingTop: \"10px\",\n        color: \"#808080\",\n        fontSize: \"15px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 29\n      }\n    }, \"Protect your data!\"), /*#__PURE__*/React.createElement(\"ul\", {\n      style: {\n        marginTop: \"-10px\",\n        fontSize: \"15px\",\n        color: \"#808080\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 33\n      }\n    }, \"Try to include one symbol in your password. !@#$\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 33\n      }\n    }, \"Password must have numbers.\")), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"registerSubmit\",\n      onMouseEnter: this.toggleHover,\n      onMouseLeave: this.toggleHover,\n      style: buttonStyle,\n      type: \"submit\",\n      onSubmit: this.SubmitRegisterData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 29\n      }\n    }, \"Create a Cortex account\")))));\n  }\n\n}\n\nconst formStyle = {\n  padding: \"15px\",\n  margin: \"auto\",\n  width: \"100%\",\n  maxWidth: \"1000px\"\n};\nconst modalStyle = {\n  content: {\n    margin: \"auto\",\n    width: \"55vh\",\n    height: \"50vh\",\n    position: \"absolute\",\n    borderRadius: \"10px\",\n    overflow: \"none\",\n    boxShadow: \"0px 0px 20px\"\n  }\n};\nexport default RegisterForm;","map":{"version":3,"sources":["C:/Workspace/Cortex/cortex-official-website/src/front-end/src/components/forms/Register.js"],"names":["React","Component","Link","Base","Modal","Row","Col","defaultStyles","overlay","backgroundColor","RegisterForm","constructor","props","validateForm","status","isInvalid","isValid","handleFormChange","e","elementName","target","name","content","value","setState","values","state","SubmitRegisterData","preventDefault","console","log","isSubmitting","res","fetch","method","body","JSON","stringify","headers","data","json","hasOwnProperty","message","success","error","isError","email","firstname","lastname","fullName","password","phoneNumber","feedbackStyle","display","toggleHover","isHover","hover","getHoverStyle","style","validatePassword","lenReg","RegExp","isConfirmed","undefined","isPasswordValid","feedbackValue","color","marginBottom","test","confirmPassword","getPasswordInputStyle","validateEmail","reEmail","indexOf","isEmailValid","isOpen","componentDidMount","render","buttonStyle","outline","width","height","marginLeft","borderRadius","borderColor","borderWidth","transition","inputStyle","document","getElementById","filter","modalStyle","paddingTop","paddingRight","paddingLeft","fontSize","marginTop","formStyle","padding","margin","maxWidth","position","overflow","boxShadow"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport Base from '../base/Base'\r\nimport Modal from 'react-modal'\r\nimport {\r\n          Row, \r\n          Col,\r\n        } from 'reactstrap'\r\n\r\n\r\nModal.defaultStyles.overlay.backgroundColor = \"none\"\r\n\r\nclass RegisterForm extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            values: {\r\n                email: \"\",\r\n                firstname: \"\",\r\n                lastname: \"\",\r\n                fullName: \"\",\r\n                password : \"\",\r\n                phoneNumber : \"\",\r\n            },\r\n            isSubmitting: false,\r\n            isOpen : false,\r\n            isPasswordValid : false,\r\n            isEmailValid : false,\r\n            isValid : [this.isPasswordValid, this.isEmailValid],\r\n            isError: false,\r\n            isHover : false\r\n        } \r\n\r\n        this.feedbackValue = null\r\n        this.status = null\r\n    }\r\n\r\n    validateForm = () => {\r\n        if(this.status !== null){\r\n            if (this.status == 406){\r\n                this.isInvalid = true\r\n            }else if(!this.isInvalid)\r\n                this.isValid = true\r\n        }\r\n    }\r\n    handleFormChange = (e) =>{\r\n        let elementName = e.target.name;\r\n        let content = e.target.value;\r\n        this.setState({\r\n            values : {\r\n                ...this.state.values, [elementName] : content\r\n            }            \r\n        });\r\n    }\r\n    SubmitRegisterData = async e =>{\r\n        e.preventDefault();\r\n        console.log(this.state)\r\n        if(this.state.isValid[0] && this.state.isValid[1]){\r\n            this.setState({isSubmitting : true})\r\n\r\n            const res = await fetch(\"http://127.0.0.1:8000/api/accounts/\", {\r\n                method : \"POST\",\r\n                body: JSON.stringify(this.state.values),\r\n                headers : {\r\n                    \"Content-Type\" : \"application/json\",\r\n                    'Accept': 'application/json'\r\n                }\r\n            });\r\n            this.status = res.status\r\n            this.setState({isSubmitting : false})\r\n            const data = await res.json();\r\n            !data.hasOwnProperty(\"error\")\r\n            ? this.setState({ message : data.success })\r\n            : this.setState({message: data.error, isError: true}) \r\n            console.log(this.state.message)\r\n            this.setState({\r\n                values : {\r\n                    email: \"\",\r\n                    firstname: \"\",\r\n                    lastname: \"\",\r\n                    fullName: \"\",\r\n                    password : \"\",\r\n                    phoneNumber : \"\",\r\n                },\r\n            })\r\n        }   \r\n    }\r\n    feedbackStyle = () => {\r\n        if(this.isInvalid == true){\r\n            return {\r\n                display : \"flex\"\r\n            }\r\n        }\r\n    }\r\n    toggleHover = (e) => {\r\n        this.setState({isHover : !this.state.hover})\r\n        if (this.state.isHover)\r\n            this.setState({isHover : false})\r\n    }\r\n    getHoverStyle = () => {\r\n        var style\r\n        if(this.state.isHover)\r\n            style = \"#404040\"\r\n        else\r\n            style = \"black\"\r\n        return style\r\n    }\r\n    componentDidMount(){\r\n        this.setState({\r\n            isOpen : true\r\n        });\r\n    }\r\n    validatePassword = (e) => {\r\n        //let digitReg = new RegExp(\"[0-9].{2}\");    \r\n        let lenReg = new RegExp(\"(?=.*[A-Z])\")  \r\n        let isConfirmed = false      \r\n        if (e.target.value === \"\" || e.target.value === null || e.target.value === undefined){\r\n            this.setState({\r\n                isPasswordValid : false\r\n            })\r\n            this.feedbackValue = <p style={{color : \"red\", marginBottom : \"-5px\"}}>Password cannot be empty.</p>\r\n        }else{\r\n            isConfirmed = true\r\n        }\r\n        if (isConfirmed){\r\n            if (!lenReg.test(this.state.confirmPassword)){\r\n                this.setState({\r\n                    isPasswordValid : false\r\n                })\r\n                this.feedbackValue = <p style={{color : \"red\", marginBottom : \"-5px\"}}>Password must contain atleast 2 numbers 8 digits.</p>\r\n            }else{\r\n                this.setState({\r\n                    isPasswordValid : true\r\n                })\r\n                this.feedbackValue = null\r\n            }\r\n        }       \r\n    }\r\n    getPasswordInputStyle = () => {\r\n        if (!this.state.isPasswordValid){\r\n            return \"red\"\r\n        }\r\n        else {\r\n            return \"black\"\r\n        }\r\n    }\r\n    validateEmail = (e) => {     \r\n        let reEmail = new RegExp(\"/\\S+@\\S+\\.\\S+/\")\r\n        if(e.target.value != null){\r\n            if (this.state.values.email.indexOf('@') > 0){\r\n                this.feedbackValue = <p style={{color : \"red\", marginBottom : \"-5px\"}}>This is not a email</p>\r\n                this.setState({\r\n                isEmailValid : false\r\n                })\r\n            }\r\n            else{\r\n                this.setState({\r\n                    isEmailValid : true\r\n                })\r\n            }\r\n        }\r\n    }\r\n    render(){\r\n        this.validateForm()\r\n        const buttonStyle = {\r\n            outline : \"none\",\r\n            width: \"90%\",\r\n            height : \"39px\",\r\n            marginLeft : \"18px\",\r\n            borderRadius : \"10px\",\r\n            borderColor : \"\t#FFFFFF\",\r\n            borderWidth : \"2px\",\r\n            backgroundColor : this.getHoverStyle(),\r\n            color : \"white\",\r\n            transition: \"all ease .5s\",\r\n        }\r\n        const inputStyle = {\r\n            borderColor : \"black\",\r\n            borderWidth : \"1px\",\r\n            borderRadius : \"3px\",\r\n            outline: \"none\",\r\n            width : \"100%\"\r\n        }\r\n        document.getElementById('root').style.filter = 'none'\r\n        return(    \r\n            <div style={{display : \"flex\"}}>          \r\n                <Modal isOpen={this.state.isOpen} ariaHideApp={false} style={modalStyle} width=\"10\">\r\n                    <h2>Sign Up</h2>\r\n                    <hr/>\r\n                    <Row style={{paddingTop : \"10px\"}}>             \r\n                        <Col>\r\n                            <label style={{display : \"flex\"}}>First Name</label>\r\n                            <input style={{width: \"100%\", paddingRight : \"5px\" }} type=\"text\" name=\"firstname\" placeholder=\"Enter your first name\"/>\r\n                        </Col>\r\n                        <Col style={{paddingLeft : \"5px\"}}>\r\n                            <label style={{display : \"flex\"}}>Last Name</label>\r\n                            <input style={{width: \"100%\" }} type=\"text\" name=\"lastname\" placeholder=\"Enter your last name\"/>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row style={{paddingTop : \"10px\"}}>\r\n                        <Col>\r\n                            <label style={{display : \"flex\"}}>Email *</label>\r\n                            <input style={inputStyle} type=\"text\" name=\"email\" onChange={this.validateEmail} placeholder=\"Enter your email\"/>\r\n                            <label style={{display : \"flex\", paddingTop : \"10px\"}}>Password *</label>\r\n                            <input style={inputStyle} type=\"password\" name=\"password\" onChange={this.validatePassword}  placeholder=\"Enter your password\"/>\r\n                            {this.feedbackValue}\r\n                            <label style={{ paddingLeft : \"20px\", paddingTop : \"10px\", color: \"#808080\", fontSize : \"15px\"}}>Protect your data!</label>                           \r\n                            <ul style={{marginTop : \"-10px\", fontSize : \"15px\", color: \"#808080\"}}>\r\n                                <li>Try to include one symbol in your password. !@#$</li>\r\n                                <li>Password must have numbers.</li>\r\n                            </ul>\r\n                            <button className=\"registerSubmit\" onMouseEnter={this.toggleHover} onMouseLeave={this.toggleHover} style={buttonStyle} type=\"submit\" onSubmit={this.SubmitRegisterData}>\r\n                                Create a Cortex account\r\n                            </button>\r\n                        </Col>\r\n                    </Row>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst formStyle = {\r\n    padding: \"15px\",\r\n    margin: \"auto\",\r\n    width : \"100%\",\r\n    maxWidth : \"1000px\"\r\n}\r\nconst modalStyle = {\r\n    content : {\r\n        margin : \"auto\",\r\n        width : \"55vh\",\r\n        height : \"50vh\",\r\n        position : \"absolute\",\r\n        borderRadius : \"10px\",\r\n        overflow : \"none\",\r\n        boxShadow : \"0px 0px 20px\"\r\n      }\r\n}\r\nexport default RegisterForm"]},"metadata":{},"sourceType":"module"}