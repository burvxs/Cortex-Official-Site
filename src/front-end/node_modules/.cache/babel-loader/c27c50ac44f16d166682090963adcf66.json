{"ast":null,"code":"var _jsxFileName = \"C:\\\\Workspace\\\\Cortex\\\\cortex-official-website\\\\src\\\\front-end\\\\src\\\\components\\\\PageRoutes.js\";\nimport React, { Component } from 'react';\nimport RegisterForm from \"./forms/Register\";\nimport ProductHandler from \"./products/ProductHandler\";\n\nclass PageRouter extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getIsRegOpen = () => {\n      if (this.props.UrlMatch == \"register\") return true;else return false;\n    };\n\n    this.loadedComponentFromUrl = () => {\n      switch (this.props.UrlMatch) {\n        case \"register\":\n          this.loadedComponent = /*#__PURE__*/React.createElement(RegisterForm, {\n            isOpen: this.getIsRegOpen(),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 40\n            }\n          });\n          break;\n\n        case \"products\":\n          this.loadedComponent = /*#__PURE__*/React.createElement(ProductHandler, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 40\n            }\n          });\n      }\n    };\n\n    this.state = {\n      isLoaded: false,\n      pageView: false,\n      components: null\n    };\n    this.loadedComponent = null;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, this.loadedComponentFromUrl(), this.loadedComponent);\n  }\n\n}\n\nexport default PageRouter;","map":{"version":3,"sources":["C:/Workspace/Cortex/cortex-official-website/src/front-end/src/components/PageRoutes.js"],"names":["React","Component","RegisterForm","ProductHandler","PageRouter","constructor","props","getIsRegOpen","UrlMatch","loadedComponentFromUrl","loadedComponent","state","isLoaded","pageView","components","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,OAAOC,YAAP,MAAyB,kBAAzB;AACA,OAAOC,cAAP,MAA2B,2BAA3B;;AAEA,MAAMC,UAAN,SAAyBH,SAAzB,CAAkC;AAC9BI,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SASlBC,YATkB,GASH,MAAM;AACjB,UAAI,KAAKD,KAAL,CAAWE,QAAX,IAAuB,UAA3B,EACI,OAAO,IAAP,CADJ,KAGI,OAAO,KAAP;AACP,KAdiB;;AAAA,SAelBC,sBAfkB,GAeO,MAAM;AAC3B,cAAO,KAAKH,KAAL,CAAWE,QAAlB;AACI,aAAK,UAAL;AACI,eAAKE,eAAL,gBAAuB,oBAAC,YAAD;AAAc,YAAA,MAAM,EAAE,KAAKH,YAAL,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAvB;AACA;;AACJ,aAAK,UAAL;AACI,eAAKG,eAAL,gBAAuB,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAvB;AALR;AAOH,KAvBiB;;AAEd,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAG,KADF;AAETC,MAAAA,QAAQ,EAAG,KAFF;AAGTC,MAAAA,UAAU,EAAG;AAHJ,KAAb;AAKA,SAAKJ,eAAL,GAAuB,IAAvB;AACH;;AAgBDK,EAAAA,MAAM,GAAE;AACJ,wBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKN,sBAAL,EADL,EAEK,KAAKC,eAFV,CADJ;AAMH;;AAhC6B;;AAmClC,eAAeN,UAAf","sourcesContent":["import React, {Component} from 'react'\r\n\r\nimport RegisterForm from \"./forms/Register\"\r\nimport ProductHandler from \"./products/ProductHandler\"\r\n\r\nclass PageRouter extends Component{  \r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            isLoaded : false,\r\n            pageView : false,\r\n            components : null\r\n        }\r\n        this.loadedComponent = null\r\n    }\r\n    getIsRegOpen = () => {\r\n        if (this.props.UrlMatch == \"register\")\r\n            return true;\r\n        else\r\n            return false\r\n    }\r\n    loadedComponentFromUrl = () => {\r\n        switch(this.props.UrlMatch){\r\n            case \"register\":          \r\n                this.loadedComponent = <RegisterForm isOpen={this.getIsRegOpen()}/>\r\n                break;\r\n            case \"products\":\r\n                this.loadedComponent = <ProductHandler/>\r\n        }\r\n    }\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                {this.loadedComponentFromUrl()}\r\n                {this.loadedComponent}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PageRouter;"]},"metadata":{},"sourceType":"module"}