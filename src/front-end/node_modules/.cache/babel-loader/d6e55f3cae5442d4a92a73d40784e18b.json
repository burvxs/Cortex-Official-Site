{"ast":null,"code":"var _jsxFileName = \"C:\\\\Workspace\\\\Cortex\\\\cortex-official-website\\\\src\\\\front-end\\\\src\\\\components\\\\products\\\\ProductHandler.js\";\nimport React, { Component } from \"react\";\nimport ProductGrid from './ProductGrid';\nimport RenderFilter from \"./RenderFilter\";\n\nclass ProductHandler extends Component {\n  constructor(props) {\n    super(props);\n\n    this.passFilterValue = () => {\n      this.setState({\n        isFiltering: !this.state.isFiltering\n      });\n      console.log(this.state.isFiltering);\n      return this.state.isFiltering;\n    };\n\n    this.handleSelectedItem = itemSelected => {\n      this.setState({\n        selectedIndex: itemSelected\n      });\n    };\n\n    this.selectItem = e => {\n      this.handleSelectedItem(e.target.id);\n      console.log(e.target.id);\n    };\n\n    this.toggleMaxCheckbox = () => {};\n\n    this.state = {\n      productImages: [],\n      productCount: 0,\n      selectedItem: \"\",\n      productItemObjects: [],\n      isFiltering: false,\n      isCleared: false\n    };\n    this.COLUMN_COUNT = 4;\n    this.rowCount = Math.ceil(this.state.productCount / this.COLUMN_COUNT);\n  }\n\n  async componentDidMount() {\n    const res = await fetch(\"http://127.0.0.1:8000/api/products/\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Accept': 'application/json'\n      }\n    });\n    const data = await res.json();\n\n    if (!this.state.isFiltering) {\n      this.setState({\n        productCount: data[\"product_count\"],\n        productItemObjects: data[\"products\"]\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"productWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(RenderFilter, {\n      itemsToFilter: this.state.productItemObjects,\n      isFiltering: this.passFilterValue,\n      isMaxChecked: this.isMaxChecked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"gridContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ProductGrid, {\n      rows: this.rowCount,\n      cols: this.COLUMN_COUNT,\n      itemWidth: \"200px\",\n      itemHeight: \"310px\",\n      itemsToRender: this.state.productItemObjects,\n      handleGridSelection: this.selectItem //isCleared={clearedGrid}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default ProductHandler;","map":{"version":3,"sources":["C:/Workspace/Cortex/cortex-official-website/src/front-end/src/components/products/ProductHandler.js"],"names":["React","Component","ProductGrid","RenderFilter","ProductHandler","constructor","props","passFilterValue","setState","isFiltering","state","console","log","handleSelectedItem","itemSelected","selectedIndex","selectItem","e","target","id","toggleMaxCheckbox","productImages","productCount","selectedItem","productItemObjects","isCleared","COLUMN_COUNT","rowCount","Math","ceil","componentDidMount","res","fetch","method","headers","data","json","render","isMaxChecked"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\"\r\n\r\nimport ProductGrid from './ProductGrid'\r\nimport RenderFilter from \"./RenderFilter\"\r\n\r\nclass ProductHandler extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            productImages : [],\r\n            productCount : 0,\r\n            selectedItem : \"\",\r\n            productItemObjects : [],\r\n            isFiltering : false,\r\n            isCleared : false\r\n        }\r\n        this.COLUMN_COUNT = 4\r\n        this.rowCount = Math.ceil(this.state.productCount / this.COLUMN_COUNT)\r\n    }\r\n    passFilterValue = () =>{\r\n        this.setState({\r\n            isFiltering : !this.state.isFiltering\r\n        })\r\n        console.log(this.state.isFiltering)\r\n        return this.state.isFiltering\r\n    }\r\n    async componentDidMount() {\r\n        const res = await fetch(\"http://127.0.0.1:8000/api/products/\", {\r\n                method : \"GET\",\r\n                headers : {\r\n                    \"Content-Type\" : \"application/json\",\r\n                    'Accept': 'application/json'\r\n                }\r\n            })\r\n        const data = await res.json()\r\n        if (!this.state.isFiltering){\r\n            this.setState({\r\n                productCount : data[\"product_count\"],\r\n                productItemObjects : data[\"products\"]\r\n            })    \r\n        }\r\n\r\n    }\r\n\r\n    handleSelectedItem = (itemSelected) => {\r\n        this.setState({\r\n            selectedIndex : itemSelected\r\n        })\r\n    }\r\n    selectItem = (e) => {\r\n        this.handleSelectedItem(e.target.id) \r\n        console.log(e.target.id)\r\n    }\r\n    toggleMaxCheckbox = () => {\r\n        \r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"productWrapper\"> \r\n                <RenderFilter itemsToFilter={this.state.productItemObjects} isFiltering={this.passFilterValue} isMaxChecked={this.isMaxChecked}/>           \r\n                <div className=\"gridContainer\">\r\n                    <ProductGrid rows={this.rowCount}\r\n                                cols={this.COLUMN_COUNT}\r\n                                itemWidth=\"200px\" \r\n                                itemHeight=\"310px\" \r\n                                itemsToRender={this.state.productItemObjects}\r\n                                handleGridSelection={this.selectItem}\r\n                                //isCleared={clearedGrid}\r\n                                />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default ProductHandler"]},"metadata":{},"sourceType":"module"}