{"ast":null,"code":"var _jsxFileName = \"C:\\\\Workspace\\\\Cortex\\\\cortex-official-website\\\\src\\\\front-end\\\\src\\\\components\\\\products\\\\ProductGrid.js\";\nimport React, { Component } from \"react\";\nimport ProductItem from './ProductItem';\n\nclass ProductGrid extends Component {\n  constructor(props) {\n    super(props);\n\n    this.makeRows = () => {\n      let rows = this.props.rows;\n      let cols = this.props.cols;\n      let grid = [];\n\n      for (let c = 0; c < rows * cols; c++) {\n        let cell = /*#__PURE__*/React.createElement(ProductItem, {\n          key: c,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 24\n          }\n        });\n        grid.push(cell);\n      }\n\n      return grid;\n    };\n\n    this.setCellWidth = () => {\n      for (let w = 0; w < this.props.rows; w++) {\n        return \"\".concat(...[\"200px\"]);\n      }\n    };\n\n    this.setCellHeight = () => {\n      for (let h = 0; h < this.props.cols; h++) {\n        return \"\".concat(...[\"200px\"]);\n      }\n    };\n\n    this.state = {\n      cell: null\n    };\n  }\n\n  render() {\n    console.log(this.setCellHeight());\n    const containerStyle = {\n      display: \"grid\",\n      justifyContent: \"center\",\n      gridRows: this.props.rows,\n      gridCols: this.props.cols,\n      gridTemplateRows: \"200px 200px 200px 200px 200px 200px\",\n      gridTemplateColumns: \"200px 200px 200px 200px\",\n      columnGap: \"10px\",\n      rowGap: \"100px\"\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: containerStyle,\n      id: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, this.makeRows());\n  }\n\n}\n\nexport default ProductGrid;","map":{"version":3,"sources":["C:/Workspace/Cortex/cortex-official-website/src/front-end/src/components/products/ProductGrid.js"],"names":["React","Component","ProductItem","ProductGrid","constructor","props","makeRows","rows","cols","grid","c","cell","push","setCellWidth","w","concat","setCellHeight","h","state","render","console","log","containerStyle","display","justifyContent","gridRows","gridCols","gridTemplateRows","gridTemplateColumns","columnGap","rowGap"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,WAAN,SAA0BF,SAA1B,CAAoC;AAChCG,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAMlBC,QANkB,GAMP,MAAM;AACb,UAAIC,IAAI,GAAG,KAAKF,KAAL,CAAWE,IAAtB;AACA,UAAIC,IAAI,GAAG,KAAKH,KAAL,CAAWG,IAAtB;AACA,UAAIC,IAAI,GAAG,EAAX;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAIH,IAAI,GAAGC,IAA5B,EAAmCE,CAAC,EAApC,EAAuC;AACnC,YAAIC,IAAI,gBAAG,oBAAC,WAAD;AAAa,UAAA,GAAG,EAAED,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAX;AACAD,QAAAA,IAAI,CAACG,IAAL,CAAUD,IAAV;AACH;;AACD,aAAOF,IAAP;AACH,KAfiB;;AAAA,SAgBlBI,YAhBkB,GAgBH,MAAM;AACjB,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKT,KAAL,CAAWE,IAA/B,EAAqCO,CAAC,EAAtC,EAAyC;AACrC,eAAO,GAAGC,MAAH,CAAU,GAAG,CAAC,OAAD,CAAb,CAAP;AACH;AACJ,KApBiB;;AAAA,SAqBlBC,aArBkB,GAqBF,MAAM;AAClB,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKZ,KAAL,CAAWG,IAA/B,EAAqCS,CAAC,EAAtC,EAAyC;AACrC,eAAO,GAAGF,MAAH,CAAU,GAAG,CAAC,OAAD,CAAb,CAAP;AACH;AACJ,KAzBiB;;AAEd,SAAKG,KAAL,GAAa;AACTP,MAAAA,IAAI,EAAG;AADE,KAAb;AAGH;;AAqBDQ,EAAAA,MAAM,GAAE;AACJC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,aAAL,EAAZ;AACA,UAAMM,cAAc,GAAG;AACnBC,MAAAA,OAAO,EAAG,MADS;AAEnBC,MAAAA,cAAc,EAAG,QAFE;AAGnBC,MAAAA,QAAQ,EAAG,KAAKpB,KAAL,CAAWE,IAHH;AAInBmB,MAAAA,QAAQ,EAAG,KAAKrB,KAAL,CAAWG,IAJH;AAKnBmB,MAAAA,gBAAgB,EAAG,qCALA;AAMnBC,MAAAA,mBAAmB,EAAG,yBANH;AAOnBC,MAAAA,SAAS,EAAG,MAPO;AAQnBC,MAAAA,MAAM,EAAG;AARU,KAAvB;AAWA,wBACI;AAAK,MAAA,KAAK,EAAER,cAAZ;AAA4B,MAAA,EAAE,EAAC,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKhB,QAAL,EADL,CADJ;AAKH;;AA7C+B;;AA+CpC,eAAeH,WAAf","sourcesContent":["import React, {Component} from \"react\"\r\n\r\nimport ProductItem from './ProductItem'\r\n\r\nclass ProductGrid extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            cell : null\r\n        }\r\n    }\r\n    makeRows = () => {\r\n        let rows = this.props.rows\r\n        let cols = this.props.cols\r\n        let grid = []\r\n        for (let c = 0; c < (rows * cols); c++){\r\n            let cell = <ProductItem key={c}/>\r\n            grid.push(cell)\r\n        }\r\n        return grid\r\n    }\r\n    setCellWidth = () => {\r\n        for (let w = 0; w < this.props.rows; w++){\r\n            return \"\".concat(...[\"200px\"])\r\n        }\r\n    }\r\n    setCellHeight = () => {\r\n        for (let h = 0; h < this.props.cols; h++){          \r\n            return \"\".concat(...[\"200px\"])\r\n        }\r\n    }\r\n    render(){\r\n        console.log(this.setCellHeight())\r\n        const containerStyle = {\r\n            display : \"grid\",\r\n            justifyContent : \"center\",\r\n            gridRows : this.props.rows,\r\n            gridCols : this.props.cols,\r\n            gridTemplateRows : \"200px 200px 200px 200px 200px 200px\",\r\n            gridTemplateColumns : \"200px 200px 200px 200px\",\r\n            columnGap : \"10px\",\r\n            rowGap : \"100px\"\r\n          \r\n        }\r\n        return(\r\n            <div style={containerStyle} id=\"container\">\r\n                {this.makeRows()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default ProductGrid"]},"metadata":{},"sourceType":"module"}