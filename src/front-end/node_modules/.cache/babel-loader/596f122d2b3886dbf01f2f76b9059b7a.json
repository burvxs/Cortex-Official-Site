{"ast":null,"code":"var _jsxFileName = \"C:\\\\Workspace\\\\Cortex\\\\cortex-official-website\\\\src\\\\front-end\\\\src\\\\components\\\\products\\\\ProductHandler.js\";\nimport React, { Component } from \"react\";\nimport ProductGrid from './ProductGrid';\nimport RenderFilter from \"./RenderFilter\";\n\nclass ProductHandler extends Component {\n  constructor(props) {\n    super(props);\n\n    this.passFilterValue = () => {\n      this.setState({\n        isFiltering: !this.state.isFiltering\n      });\n      console.log(this.state.isFiltering);\n      return this.state.isFiltering;\n    };\n\n    this.handleSelectedItem = itemSelected => {\n      this.setState({\n        selectedIndex: itemSelected\n      });\n    };\n\n    this.selectItem = e => {\n      this.handleSelectedItem(e.target.id);\n      console.log(e.target.id);\n    };\n\n    this.checkPriceItem = async e => {\n      let idString = e.target.id;\n      let cbIndex = idString.substr(idString.length - 1);\n      this.state.isItemChecked[cbIndex] = e.target.checked;\n\n      if (this.state.isItemChecked[cbIndex]) {\n        const passedData = {\n          minRange: this.priceFilterStart[cbIndex],\n          maxRange: this.priceFilterEnd[cbIndex]\n        };\n        const res = await fetch(\"http://127.0.0.1:8000/api/products_filter_price\", {\n          method: \"POST\",\n          body: JSON.stringify(passedData),\n          headers: {\n            \"Content-Type\": \"application/json\",\n            'Accept': 'application/json'\n          }\n        });\n        let data = await res.json();\n        !data.hasOwnProperty(\"error\") ? this.setState({\n          message: data.success\n        }) : this.setState({\n          message: data.error,\n          isError: true\n        });\n        console.log(this.state.message);\n\n        if (!this.state.isError) {\n          res = await fetch(\"http://127.0.0.1:8000/api/products_filter_price\", {\n            method: \"GET\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              'Accept': 'application/json'\n            }\n          });\n          const data = await res.json();\n          !data.hasOwnProperty(\"error\") ? this.setState({\n            message: data.success\n          }) : this.setState({\n            message: data.error,\n            isError: true\n          });\n          this.setState({\n            productItemObjects: data[\"products_filter_price\"]\n          });\n        }\n      }\n    };\n\n    this.state = {\n      productImages: [],\n      productCount: 0,\n      selectedItem: \"\",\n      productItemObjects: [],\n      isFiltering: false,\n      isError: false\n    };\n    this.COLUMN_COUNT = 4;\n    this.rowCount = Math.ceil(this.state.productCount / this.COLUMN_COUNT);\n  }\n\n  async componentDidMount() {\n    const res = await fetch(\"http://127.0.0.1:8000/api/products/\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Accept': 'application/json'\n      }\n    });\n    const data = await res.json();\n\n    if (!this.state.isFiltering) {\n      this.setState({\n        productCount: data[\"product_count\"],\n        productItemObjects: await data[\"products\"]\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"productWrapper\",\n      style: {\n        position: \"relative\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(RenderFilter, {\n      itemsToFilter: this.state.productItemObjects,\n      handleFilterByPrice: this.checkPriceItem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"gridContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ProductGrid, {\n      rows: this.rowCount,\n      cols: this.COLUMN_COUNT,\n      itemWidth: \"200px\",\n      itemHeight: \"310px\",\n      itemsToRender: this.state.productItemObjects,\n      handleGridSelection: this.selectItem //isCleared={clearedGrid}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default ProductHandler;","map":{"version":3,"sources":["C:/Workspace/Cortex/cortex-official-website/src/front-end/src/components/products/ProductHandler.js"],"names":["React","Component","ProductGrid","RenderFilter","ProductHandler","constructor","props","passFilterValue","setState","isFiltering","state","console","log","handleSelectedItem","itemSelected","selectedIndex","selectItem","e","target","id","checkPriceItem","idString","cbIndex","substr","length","isItemChecked","checked","passedData","minRange","priceFilterStart","maxRange","priceFilterEnd","res","fetch","method","body","JSON","stringify","headers","data","json","hasOwnProperty","message","success","error","isError","productItemObjects","productImages","productCount","selectedItem","COLUMN_COUNT","rowCount","Math","ceil","componentDidMount","render","position"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,MAAMC,cAAN,SAA6BH,SAA7B,CAAsC;AAClCI,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAalBC,eAbkB,GAaA,MAAK;AACnB,WAAKC,QAAL,CAAc;AACVC,QAAAA,WAAW,EAAG,CAAC,KAAKC,KAAL,CAAWD;AADhB,OAAd;AAGAE,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKF,KAAL,CAAWD,WAAvB;AACA,aAAO,KAAKC,KAAL,CAAWD,WAAlB;AACH,KAnBiB;;AAAA,SAqClBI,kBArCkB,GAqCIC,YAAD,IAAkB;AACnC,WAAKN,QAAL,CAAc;AACVO,QAAAA,aAAa,EAAGD;AADN,OAAd;AAGH,KAzCiB;;AAAA,SA0ClBE,UA1CkB,GA0CJC,CAAD,IAAO;AAChB,WAAKJ,kBAAL,CAAwBI,CAAC,CAACC,MAAF,CAASC,EAAjC;AACAR,MAAAA,OAAO,CAACC,GAAR,CAAYK,CAAC,CAACC,MAAF,CAASC,EAArB;AACH,KA7CiB;;AAAA,SA8ClBC,cA9CkB,GA8CD,MAAMH,CAAN,IAAW;AACxB,UAAII,QAAQ,GAAGJ,CAAC,CAACC,MAAF,CAASC,EAAxB;AACA,UAAIG,OAAO,GAAGD,QAAQ,CAACE,MAAT,CAAgBF,QAAQ,CAACG,MAAT,GAAkB,CAAlC,CAAd;AACA,WAAKd,KAAL,CAAWe,aAAX,CAAyBH,OAAzB,IAAoCL,CAAC,CAACC,MAAF,CAASQ,OAA7C;;AACA,UAAI,KAAKhB,KAAL,CAAWe,aAAX,CAAyBH,OAAzB,CAAJ,EAAsC;AAClC,cAAMK,UAAU,GAAG;AACfC,UAAAA,QAAQ,EAAG,KAAKC,gBAAL,CAAsBP,OAAtB,CADI;AAEfQ,UAAAA,QAAQ,EAAG,KAAKC,cAAL,CAAoBT,OAApB;AAFI,SAAnB;AAIA,cAAMU,GAAG,GAAG,MAAMC,KAAK,CAAC,iDAAD,EAAoD;AACvEC,UAAAA,MAAM,EAAG,MAD8D;AAEvEC,UAAAA,IAAI,EAAGC,IAAI,CAACC,SAAL,CAAeV,UAAf,CAFgE;AAGvEW,UAAAA,OAAO,EAAG;AACN,4BAAiB,kBADX;AAEN,sBAAU;AAFJ;AAH6D,SAApD,CAAvB;AAQA,YAAIC,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAJ,EAAjB;AACA,SAACD,IAAI,CAACE,cAAL,CAAoB,OAApB,CAAD,GACE,KAAKjC,QAAL,CAAc;AAACkC,UAAAA,OAAO,EAAGH,IAAI,CAACI;AAAhB,SAAd,CADF,GAEE,KAAKnC,QAAL,CAAc;AAACkC,UAAAA,OAAO,EAAGH,IAAI,CAACK,KAAhB;AAAuBC,UAAAA,OAAO,EAAG;AAAjC,SAAd,CAFF;AAGAlC,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKF,KAAL,CAAWgC,OAAvB;;AACA,YAAI,CAAC,KAAKhC,KAAL,CAAWmC,OAAhB,EAAwB;AACpBb,UAAAA,GAAG,GAAG,MAAMC,KAAK,CAAC,iDAAD,EAAoD;AACjEC,YAAAA,MAAM,EAAG,KADwD;AAEjEI,YAAAA,OAAO,EAAG;AACN,8BAAiB,kBADX;AAEN,wBAAU;AAFJ;AAFuD,WAApD,CAAjB;AAOA,gBAAMC,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAJ,EAAnB;AACA,WAACD,IAAI,CAACE,cAAL,CAAoB,OAApB,CAAD,GACE,KAAKjC,QAAL,CAAc;AAACkC,YAAAA,OAAO,EAAGH,IAAI,CAACI;AAAhB,WAAd,CADF,GAEE,KAAKnC,QAAL,CAAc;AAACkC,YAAAA,OAAO,EAAGH,IAAI,CAACK,KAAhB;AAAuBC,YAAAA,OAAO,EAAG;AAAjC,WAAd,CAFF;AAIA,eAAKrC,QAAL,CAAc;AACVsC,YAAAA,kBAAkB,EAAGP,IAAI,CAAC,uBAAD;AADf,WAAd;AAGH;AACR;AAEA,KAvFiB;;AAEd,SAAK7B,KAAL,GAAa;AACTqC,MAAAA,aAAa,EAAG,EADP;AAETC,MAAAA,YAAY,EAAG,CAFN;AAGTC,MAAAA,YAAY,EAAG,EAHN;AAITH,MAAAA,kBAAkB,EAAG,EAJZ;AAKTrC,MAAAA,WAAW,EAAG,KALL;AAMToC,MAAAA,OAAO,EAAG;AAND,KAAb;AAQA,SAAKK,YAAL,GAAoB,CAApB;AACA,SAAKC,QAAL,GAAgBC,IAAI,CAACC,IAAL,CAAU,KAAK3C,KAAL,CAAWsC,YAAX,GAA0B,KAAKE,YAAzC,CAAhB;AACH;;AAQD,QAAMI,iBAAN,GAA0B;AACtB,UAAMtB,GAAG,GAAG,MAAMC,KAAK,CAAC,qCAAD,EAAwC;AACvDC,MAAAA,MAAM,EAAG,KAD8C;AAEvDI,MAAAA,OAAO,EAAG;AACN,wBAAiB,kBADX;AAEN,kBAAU;AAFJ;AAF6C,KAAxC,CAAvB;AAOA,UAAMC,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAJ,EAAnB;;AACA,QAAI,CAAC,KAAK9B,KAAL,CAAWD,WAAhB,EAA4B;AACxB,WAAKD,QAAL,CAAc;AACVwC,QAAAA,YAAY,EAAGT,IAAI,CAAC,eAAD,CADT;AAEVO,QAAAA,kBAAkB,EAAG,MAAMP,IAAI,CAAC,UAAD;AAFrB,OAAd;AAIH;AAEJ;;AAoDDgB,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAgC,MAAA,KAAK,EAAE;AAACC,QAAAA,QAAQ,EAAG;AAAZ,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,YAAD;AAAe,MAAA,aAAa,EAAE,KAAK9C,KAAL,CAAWoC,kBAAzC;AACgB,MAAA,mBAAmB,EAAE,KAAK1B,cAD1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,eAGI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAE,KAAK+B,QAAxB;AACY,MAAA,IAAI,EAAE,KAAKD,YADvB;AAEY,MAAA,SAAS,EAAC,OAFtB;AAGY,MAAA,UAAU,EAAC,OAHvB;AAIY,MAAA,aAAa,EAAE,KAAKxC,KAAL,CAAWoC,kBAJtC;AAKY,MAAA,mBAAmB,EAAE,KAAK9B,UALtC,CAMY;AANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAHJ,CADJ;AAgBH;;AA1GiC;;AA4GtC,eAAeZ,cAAf","sourcesContent":["import React, {Component} from \"react\"\r\n\r\nimport ProductGrid from './ProductGrid'\r\nimport RenderFilter from \"./RenderFilter\"\r\n\r\nclass ProductHandler extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            productImages : [],\r\n            productCount : 0,\r\n            selectedItem : \"\",\r\n            productItemObjects : [],\r\n            isFiltering : false,\r\n            isError : false\r\n        }\r\n        this.COLUMN_COUNT = 4\r\n        this.rowCount = Math.ceil(this.state.productCount / this.COLUMN_COUNT)\r\n    }\r\n    passFilterValue = () =>{\r\n        this.setState({\r\n            isFiltering : !this.state.isFiltering\r\n        })\r\n        console.log(this.state.isFiltering)\r\n        return this.state.isFiltering\r\n    }\r\n    async componentDidMount() {\r\n        const res = await fetch(\"http://127.0.0.1:8000/api/products/\", {\r\n                method : \"GET\",\r\n                headers : {\r\n                    \"Content-Type\" : \"application/json\",\r\n                    'Accept': 'application/json'\r\n                }\r\n            })\r\n        const data = await res.json()\r\n        if (!this.state.isFiltering){\r\n            this.setState({\r\n                productCount : data[\"product_count\"],\r\n                productItemObjects : await data[\"products\"]\r\n            })    \r\n        }\r\n\r\n    }\r\n    handleSelectedItem = (itemSelected) => {\r\n        this.setState({\r\n            selectedIndex : itemSelected\r\n        })\r\n    }\r\n    selectItem = (e) => {\r\n        this.handleSelectedItem(e.target.id) \r\n        console.log(e.target.id)\r\n    }\r\n    checkPriceItem = async e => {\r\n        let idString = e.target.id\r\n        let cbIndex = idString.substr(idString.length - 1)\r\n        this.state.isItemChecked[cbIndex] = e.target.checked\r\n        if (this.state.isItemChecked[cbIndex]){\r\n            const passedData = {\r\n                minRange : this.priceFilterStart[cbIndex],\r\n                maxRange : this.priceFilterEnd[cbIndex]\r\n            }\r\n            const res = await fetch(\"http://127.0.0.1:8000/api/products_filter_price\", {\r\n                method : \"POST\",\r\n                body : JSON.stringify(passedData),\r\n                headers : {\r\n                    \"Content-Type\" : \"application/json\",\r\n                    'Accept': 'application/json'\r\n                }\r\n            })\r\n            let data = await res.json()\r\n            !data.hasOwnProperty(\"error\") \r\n            ? this.setState({message : data.success}) \r\n            : this.setState({message : data.error, isError : true})\r\n            console.log(this.state.message)\r\n            if (!this.state.isError){\r\n                res = await fetch(\"http://127.0.0.1:8000/api/products_filter_price\", {\r\n                    method : \"GET\",\r\n                    headers : {\r\n                        \"Content-Type\" : \"application/json\",\r\n                        'Accept': 'application/json'\r\n                    }                  \r\n                })\r\n                const data = await res.json()\r\n                !data.hasOwnProperty(\"error\") \r\n                ? this.setState({message : data.success})\r\n                : this.setState({message : data.error, isError : true})\r\n\r\n                this.setState({\r\n                    productItemObjects : data[\"products_filter_price\"]\r\n                })\r\n            }\r\n    }\r\n\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"productWrapper\" style={{position : \"relative\"}}> \r\n            <RenderFilter  itemsToFilter={this.state.productItemObjects} \r\n                            handleFilterByPrice={this.checkPriceItem}/>          \r\n                <div className=\"gridContainer\">\r\n                    <ProductGrid rows={this.rowCount}\r\n                                cols={this.COLUMN_COUNT}\r\n                                itemWidth=\"200px\" \r\n                                itemHeight=\"310px\" \r\n                                itemsToRender={this.state.productItemObjects}\r\n                                handleGridSelection={this.selectItem}\r\n                                //isCleared={clearedGrid}\r\n                                />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default ProductHandler"]},"metadata":{},"sourceType":"module"}