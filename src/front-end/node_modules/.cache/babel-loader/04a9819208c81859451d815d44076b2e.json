{"ast":null,"code":"var _jsxFileName = \"C:\\\\Workspace\\\\Cortex\\\\cortex-official-website\\\\src\\\\front-end\\\\src\\\\components\\\\products\\\\ProductGrid.js\";\nimport React, { Component } from \"react\";\nimport ProductItem from './ProductItem';\n\nclass ProductGrid extends Component {\n  constructor(props) {\n    super(props);\n\n    this.makeGrid = () => {\n      let rows = this.props.rows;\n      let cols = this.props.cols;\n      let grid = [];\n      let cell;\n\n      for (let c = 0; c < rows * cols; c++) {\n        cell = /*#__PURE__*/React.createElement(\"div\", {\n          key: c,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 20\n          }\n        }, this.props.itemsToRender[c]);\n        grid.push(cell);\n      }\n\n      this.setState({\n        grid: grid,\n        cell: cell\n      });\n      return grid;\n    };\n\n    this.setCellHeight = () => {\n      let propHeight = this.props.itemHeight.concat(\" \");\n      let height = propHeight.repeat(this.props.rows);\n      return height;\n    };\n\n    this.setCellWidth = () => {\n      let propWidth = this.props.itemWidth.concat(\" \");\n      let width = propWidth.repeat(this.props.cols);\n      return width;\n    };\n\n    this.state = {\n      cell: null\n    };\n  }\n\n  render() {\n    const containerStyle = {\n      display: \"grid\",\n      justifyContent: \"center\",\n      gridRows: this.props.rows,\n      gridCols: this.props.cols,\n      gridTemplateRows: this.setCellHeight(),\n      gridTemplateColumns: this.setCellWidth(),\n      columnGap: \"20px\",\n      rowGap: \"20px\"\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: containerStyle,\n      id: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, this.makeGrid());\n  }\n\n}\n\nexport default ProductGrid;","map":{"version":3,"sources":["C:/Workspace/Cortex/cortex-official-website/src/front-end/src/components/products/ProductGrid.js"],"names":["React","Component","ProductItem","ProductGrid","constructor","props","makeGrid","rows","cols","grid","cell","c","itemsToRender","push","setState","setCellHeight","propHeight","itemHeight","concat","height","repeat","setCellWidth","propWidth","itemWidth","width","state","render","containerStyle","display","justifyContent","gridRows","gridCols","gridTemplateRows","gridTemplateColumns","columnGap","rowGap"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,WAAN,SAA0BF,SAA1B,CAAoC;AAChCG,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAMlBC,QANkB,GAMP,MAAM;AACb,UAAIC,IAAI,GAAG,KAAKF,KAAL,CAAWE,IAAtB;AACA,UAAIC,IAAI,GAAG,KAAKH,KAAL,CAAWG,IAAtB;AACA,UAAIC,IAAI,GAAG,EAAX;AACA,UAAIC,IAAJ;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAIJ,IAAI,GAAGC,IAA5B,EAAmCG,CAAC,EAApC,EAAuC;AACnCD,QAAAA,IAAI,gBAAG;AAAK,UAAA,GAAG,EAAEC,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAc,KAAKN,KAAL,CAAWO,aAAX,CAAyBD,CAAzB,CAAd,CAAP;AACAF,QAAAA,IAAI,CAACI,IAAL,CAAUH,IAAV;AACH;;AACD,WAAKI,QAAL,CAAc;AACVL,QAAAA,IAAI,EAAGA,IADG;AAEVC,QAAAA,IAAI,EAAIA;AAFE,OAAd;AAIA,aAAOD,IAAP;AACH,KApBiB;;AAAA,SAqBlBM,aArBkB,GAqBF,MAAM;AAClB,UAAIC,UAAU,GAAG,KAAKX,KAAL,CAAWY,UAAX,CAAsBC,MAAtB,CAA6B,GAA7B,CAAjB;AACA,UAAIC,MAAM,GAAGH,UAAU,CAACI,MAAX,CAAkB,KAAKf,KAAL,CAAWE,IAA7B,CAAb;AACA,aAAOY,MAAP;AACH,KAzBiB;;AAAA,SA0BlBE,YA1BkB,GA0BH,MAAM;AACjB,UAAIC,SAAS,GAAG,KAAKjB,KAAL,CAAWkB,SAAX,CAAqBL,MAArB,CAA4B,GAA5B,CAAhB;AACA,UAAIM,KAAK,GAAGF,SAAS,CAACF,MAAV,CAAiB,KAAKf,KAAL,CAAWG,IAA5B,CAAZ;AACA,aAAOgB,KAAP;AACH,KA9BiB;;AAEd,SAAKC,KAAL,GAAa;AACTf,MAAAA,IAAI,EAAG;AADE,KAAb;AAGH;;AA0BDgB,EAAAA,MAAM,GAAE;AACJ,UAAMC,cAAc,GAAG;AACnBC,MAAAA,OAAO,EAAG,MADS;AAEnBC,MAAAA,cAAc,EAAG,QAFE;AAGnBC,MAAAA,QAAQ,EAAG,KAAKzB,KAAL,CAAWE,IAHH;AAInBwB,MAAAA,QAAQ,EAAG,KAAK1B,KAAL,CAAWG,IAJH;AAKnBwB,MAAAA,gBAAgB,EAAG,KAAKjB,aAAL,EALA;AAMnBkB,MAAAA,mBAAmB,EAAG,KAAKZ,YAAL,EANH;AAOnBa,MAAAA,SAAS,EAAG,MAPO;AAQnBC,MAAAA,MAAM,EAAG;AARU,KAAvB;AAWA,wBACI;AAAK,MAAA,KAAK,EAAER,cAAZ;AAA4B,MAAA,EAAE,EAAC,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKrB,QAAL,EADL,CADJ;AAKH;;AAjD+B;;AAmDpC,eAAeH,WAAf","sourcesContent":["import React, {Component} from \"react\"\r\n\r\nimport ProductItem from './ProductItem'\r\n\r\nclass ProductGrid extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            cell : null\r\n        }\r\n    }\r\n    makeGrid = () => {\r\n        let rows = this.props.rows\r\n        let cols = this.props.cols\r\n        let grid = []\r\n        let cell\r\n        for (let c = 0; c < (rows * cols); c++){\r\n            cell = <div key={c}>{this.props.itemsToRender[c]}</div>\r\n            grid.push(cell)\r\n        }\r\n        this.setState({\r\n            grid : grid,\r\n            cell :  cell\r\n        })\r\n        return grid\r\n    }\r\n    setCellHeight = () => {\r\n        let propHeight = this.props.itemHeight.concat(\" \")\r\n        let height = propHeight.repeat(this.props.rows)\r\n        return height\r\n    }\r\n    setCellWidth = () => {\r\n        let propWidth = this.props.itemWidth.concat(\" \")\r\n        let width = propWidth.repeat(this.props.cols)\r\n        return width\r\n    }\r\n    render(){\r\n        const containerStyle = {\r\n            display : \"grid\",\r\n            justifyContent : \"center\",\r\n            gridRows : this.props.rows,\r\n            gridCols : this.props.cols,\r\n            gridTemplateRows : this.setCellHeight(),\r\n            gridTemplateColumns : this.setCellWidth(),\r\n            columnGap : \"20px\",\r\n            rowGap : \"20px\"\r\n          \r\n        }\r\n        return(\r\n            <div style={containerStyle} id=\"container\">\r\n                {this.makeGrid()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default ProductGrid"]},"metadata":{},"sourceType":"module"}