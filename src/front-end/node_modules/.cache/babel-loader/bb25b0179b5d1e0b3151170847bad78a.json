{"ast":null,"code":"var _jsxFileName = \"C:\\\\Workspace\\\\Cortex\\\\cortex-official-website\\\\src\\\\front-end\\\\src\\\\components\\\\forms\\\\Register.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Base from '../base/Base';\nimport Modal from 'react-modal';\nimport { Row, Col } from 'reactstrap';\nModal.defaultStyles.overlay.backgroundColor = \"none\";\n\nclass RegisterForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.validateForm = () => {\n      if (this.status !== null) {\n        if (this.status == 406) {\n          this.isInvalid = true;\n        } else if (!this.isInvalid) this.isValid = true;\n      }\n    };\n\n    this.handleFormChange = e => {\n      let elementName = e.target.name;\n      let content = e.target.value;\n      this.setState({\n        values: { ...this.state.values,\n          [elementName]: content\n        }\n      });\n    };\n\n    this.SubmitRegisterData = async e => {\n      e.preventDefault();\n      console.log(this.state);\n\n      if (this.state.isValid) {\n        this.setState({\n          isSubmitting: true\n        });\n        const res = await fetch(\"http://127.0.0.1:8000/api/accounts/\", {\n          method: \"POST\",\n          body: JSON.stringify(this.state.values),\n          headers: {\n            \"Content-Type\": \"application/json\",\n            'Accept': 'application/json'\n          }\n        });\n        this.status = res.status;\n        this.setState({\n          isSubmitting: false\n        });\n        const data = await res.json();\n        !data.hasOwnProperty(\"error\") ? this.setState({\n          message: data.success\n        }) : this.setState({\n          message: data.error,\n          isError: true\n        });\n        console.log(this.state.message);\n        this.setState({\n          values: {\n            email: \"\",\n            firstname: \"\",\n            lastname: \"\",\n            fullName: \"\",\n            password: \"\",\n            passwordConfirm: \"\",\n            phoneNumber: \"\"\n          }\n        });\n      }\n    };\n\n    this.feedbackStyle = () => {\n      if (this.isInvalid == true) {\n        return {\n          display: \"flex\"\n        };\n      }\n    };\n\n    this.toggleHover = e => {\n      this.setState({\n        isHover: !this.state.hover\n      });\n      if (this.state.isHover) this.setState({\n        isHover: false\n      });\n    };\n\n    this.getHoverStyle = () => {\n      var style;\n      if (this.state.isHover) style = \"#404040\";else style = \"black\";\n      return style;\n    };\n\n    this.handlePassword = e => {\n      this.setState({\n        password: e.target.value\n      });\n    };\n\n    this.validatePassword = e => {\n      if (e.target.value !== this.state.password) {\n        this.setState({\n          confirmPassword: e.target.value,\n          isPasswordValid: false\n        });\n      } else {\n        this.setState({\n          isPasswordValid: true\n        });\n      }\n    };\n\n    this.getPasswordInputStyle = () => {\n      if (!this.state.isPasswordValid) {\n        return \"red\";\n      } else {\n        return \"black\";\n      }\n    };\n\n    this.state = {\n      values: {\n        email: \"\",\n        firstname: \"\",\n        lastname: \"\",\n        fullName: \"\",\n        password: \"\",\n        passwordConfirm: \"\",\n        phoneNumber: \"\"\n      },\n      isSubmitting: false,\n      isOpen: false,\n      isPasswordValid: false,\n      isError: false,\n      isHover: false\n    };\n    this.status = null;\n  }\n\n  componentDidMount() {\n    this.setState({\n      isOpen: true\n    });\n  }\n\n  render() {\n    this.validateForm();\n    const buttonStyle = {\n      outline: \"none\",\n      width: \"90%\",\n      height: \"39px\",\n      marginLeft: \"18px\",\n      borderRadius: \"10px\",\n      borderColor: \"\t#FFFFFF\",\n      borderWidth: \"2px\",\n      backgroundColor: this.getHoverStyle(),\n      color: \"white\",\n      transition: \"all ease .5s\"\n    };\n    const inputStyle = {\n      borderColor: \"black\",\n      borderWidth: \"1px\",\n      borderRadius: \"3px\",\n      outline: \"none\",\n      width: \"100%\"\n    };\n    document.getElementById('root').style.filter = 'none';\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.isOpen,\n      ariaHideApp: false,\n      style: modalStyle,\n      width: \"10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 21\n      }\n    }, \"Sign Up\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        paddingTop: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        display: \"flex\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 29\n      }\n    }, \"First Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      style: {\n        width: \"100%\",\n        paddingRight: \"5px\"\n      },\n      type: \"text\",\n      name: \"firstname\",\n      placeholder: \"Enter your first name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      style: {\n        paddingLeft: \"5px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        display: \"flex\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 29\n      }\n    }, \"Last Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      style: {\n        width: \"100%\"\n      },\n      type: \"text\",\n      name: \"lastname\",\n      placeholder: \"Enter your last name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        paddingTop: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        display: \"flex\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 29\n      }\n    }, \"Email *\"), /*#__PURE__*/React.createElement(\"input\", {\n      style: inputStyle,\n      type: \"text\",\n      name: \"firstname\",\n      placeholder: \"Enter your email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        display: \"flex\",\n        paddingTop: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 29\n      }\n    }, \"Password *\"), /*#__PURE__*/React.createElement(\"input\", {\n      style: inputStyle,\n      type: \"password\",\n      name: \"password\",\n      onChange: this.handlePassword,\n      placeholder: \"Enter your password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        display: \"flex\",\n        paddingTop: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 29\n      }\n    }, \"Confirm Password *\"), /*#__PURE__*/React.createElement(\"input\", {\n      autoFocus: false,\n      style: inputStyle,\n      type: \"password\",\n      name: \"password\",\n      onChange: this.validatePassword,\n      placeholder: \"Confirm password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        paddingTop: \"10px\",\n        paddingLeft: \"20px\",\n        color: \"#808080\",\n        fontSize: \"15px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 29\n      }\n    }, \"Protect your data!\"), /*#__PURE__*/React.createElement(\"ul\", {\n      style: {\n        marginTop: \"-10px\",\n        fontSize: \"15px\",\n        color: \"#808080\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 33\n      }\n    }, \"Try to include one symbol in your password.\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 33\n      }\n    }, \"Password must have numbers.\")), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"registerSubmit\",\n      onMouseEnter: this.toggleHover,\n      onMouseLeave: this.toggleHover,\n      style: buttonStyle,\n      type: \"submit\",\n      onSubmit: this.SubmitRegisterData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 29\n      }\n    }, \"Create a Cortex account\")))));\n  }\n\n}\n\nconst formStyle = {\n  padding: \"15px\",\n  margin: \"auto\",\n  width: \"100%\",\n  maxWidth: \"1000px\"\n};\nconst modalStyle = {\n  content: {\n    margin: \"auto\",\n    width: \"55vh\",\n    height: \"55vh\",\n    position: \"absolute\",\n    borderRadius: \"10px\",\n    overflow: \"none\",\n    boxShadow: \"0px 0px 20px\"\n  }\n};\nexport default RegisterForm;","map":{"version":3,"sources":["C:/Workspace/Cortex/cortex-official-website/src/front-end/src/components/forms/Register.js"],"names":["React","Component","Link","Base","Modal","Row","Col","defaultStyles","overlay","backgroundColor","RegisterForm","constructor","props","validateForm","status","isInvalid","isValid","handleFormChange","e","elementName","target","name","content","value","setState","values","state","SubmitRegisterData","preventDefault","console","log","isSubmitting","res","fetch","method","body","JSON","stringify","headers","data","json","hasOwnProperty","message","success","error","isError","email","firstname","lastname","fullName","password","passwordConfirm","phoneNumber","feedbackStyle","display","toggleHover","isHover","hover","getHoverStyle","style","handlePassword","validatePassword","confirmPassword","isPasswordValid","getPasswordInputStyle","isOpen","componentDidMount","render","buttonStyle","outline","width","height","marginLeft","borderRadius","borderColor","borderWidth","color","transition","inputStyle","document","getElementById","filter","modalStyle","paddingTop","paddingRight","paddingLeft","fontSize","marginTop","formStyle","padding","margin","maxWidth","position","overflow","boxShadow"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport Base from '../base/Base'\r\nimport Modal from 'react-modal'\r\nimport {\r\n          Row, \r\n          Col,\r\n        } from 'reactstrap'\r\n\r\n\r\nModal.defaultStyles.overlay.backgroundColor = \"none\"\r\n\r\nclass RegisterForm extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            values: {\r\n                email: \"\",\r\n                firstname: \"\",\r\n                lastname: \"\",\r\n                fullName: \"\",\r\n                password : \"\",\r\n                passwordConfirm : \"\",\r\n                phoneNumber : \"\",\r\n            },\r\n            isSubmitting: false,\r\n            isOpen : false,\r\n            isPasswordValid : false,\r\n            isError: false,\r\n            isHover : false\r\n        } \r\n\r\n        this.status = null\r\n    }\r\n\r\n    validateForm = () => {\r\n        if(this.status !== null){\r\n            if (this.status == 406){\r\n                this.isInvalid = true\r\n            }else if(!this.isInvalid)\r\n                this.isValid = true\r\n        }\r\n    }\r\n    handleFormChange = (e) =>{\r\n        let elementName = e.target.name;\r\n        let content = e.target.value;\r\n        this.setState({\r\n            values : {\r\n                ...this.state.values, [elementName] : content\r\n            }            \r\n        });\r\n    }\r\n    SubmitRegisterData = async e =>{\r\n        e.preventDefault();\r\n        console.log(this.state)\r\n        if(this.state.isValid){\r\n            this.setState({isSubmitting : true})\r\n\r\n            const res = await fetch(\"http://127.0.0.1:8000/api/accounts/\", {\r\n                method : \"POST\",\r\n                body: JSON.stringify(this.state.values),\r\n                headers : {\r\n                    \"Content-Type\" : \"application/json\",\r\n                    'Accept': 'application/json'\r\n                }\r\n            });\r\n            this.status = res.status\r\n            this.setState({isSubmitting : false})\r\n            const data = await res.json();\r\n            !data.hasOwnProperty(\"error\")\r\n            ? this.setState({ message : data.success })\r\n            : this.setState({message: data.error, isError: true}) \r\n            console.log(this.state.message)\r\n            this.setState({\r\n                values : {\r\n                    email: \"\",\r\n                    firstname: \"\",\r\n                    lastname: \"\",\r\n                    fullName: \"\",\r\n                    password : \"\",\r\n                    passwordConfirm : \"\",\r\n                    phoneNumber : \"\",\r\n                },\r\n            })\r\n        }   \r\n    }\r\n    feedbackStyle = () => {\r\n        if(this.isInvalid == true){\r\n            return {\r\n                display : \"flex\"\r\n            }\r\n        }\r\n    }\r\n    toggleHover = (e) => {\r\n        this.setState({isHover : !this.state.hover})\r\n        if (this.state.isHover)\r\n            this.setState({isHover : false})\r\n    }\r\n    getHoverStyle = () => {\r\n        var style\r\n        if(this.state.isHover)\r\n            style = \"#404040\"\r\n        else\r\n            style = \"black\"\r\n        return style\r\n    }\r\n    componentDidMount(){\r\n        this.setState({\r\n            isOpen : true\r\n        });\r\n    }\r\n    handlePassword = (e) => {\r\n        this.setState({\r\n            password : e.target.value\r\n        })\r\n\r\n    }\r\n    validatePassword = (e) => {\r\n        if (e.target.value !== this.state.password){\r\n            this.setState({\r\n                confirmPassword : e.target.value,\r\n                isPasswordValid : false\r\n            })\r\n        } else {\r\n            this.setState({\r\n                isPasswordValid : true\r\n            })\r\n        }\r\n    }\r\n    getPasswordInputStyle = () => {\r\n        if (!this.state.isPasswordValid){\r\n            return \"red\"\r\n        }\r\n        else {\r\n            return \"black\"\r\n        }\r\n    }\r\n    render(){\r\n        this.validateForm()\r\n        const buttonStyle = {\r\n            outline : \"none\",\r\n            width: \"90%\",\r\n            height : \"39px\",\r\n            marginLeft : \"18px\",\r\n            borderRadius : \"10px\",\r\n            borderColor : \"\t#FFFFFF\",\r\n            borderWidth : \"2px\",\r\n            backgroundColor : this.getHoverStyle(),\r\n            color : \"white\",\r\n            transition: \"all ease .5s\",\r\n        }\r\n        const inputStyle = {\r\n            borderColor : \"black\",\r\n            borderWidth : \"1px\",\r\n            borderRadius : \"3px\",\r\n            outline: \"none\",\r\n            width : \"100%\"\r\n        }\r\n        document.getElementById('root').style.filter = 'none'\r\n        return(    \r\n            <div style={{display : \"flex\"}}>          \r\n                <Modal isOpen={this.state.isOpen} ariaHideApp={false} style={modalStyle} width=\"10\">\r\n                    <h2>Sign Up</h2>\r\n                    <hr/>\r\n                    <Row style={{paddingTop : \"10px\"}}>             \r\n                        <Col>\r\n                            <label style={{display : \"flex\"}}>First Name</label>\r\n                            <input style={{width: \"100%\", paddingRight : \"5px\" }} type=\"text\" name=\"firstname\" placeholder=\"Enter your first name\"/>\r\n                        </Col>\r\n                        <Col style={{paddingLeft : \"5px\"}}>\r\n                            <label style={{display : \"flex\"}}>Last Name</label>\r\n                            <input style={{width: \"100%\" }} type=\"text\" name=\"lastname\" placeholder=\"Enter your last name\"/>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row style={{paddingTop : \"10px\"}}>\r\n                        <Col>\r\n                            <label style={{display : \"flex\"}}>Email *</label>\r\n                            <input style={inputStyle} type=\"text\" name=\"firstname\" placeholder=\"Enter your email\"/>\r\n                            <label style={{display : \"flex\", paddingTop : \"10px\"}}>Password *</label>\r\n                            <input style={inputStyle} type=\"password\" name=\"password\" onChange={this.handlePassword}  placeholder=\"Enter your password\"/>\r\n                            <label style={{display : \"flex\", paddingTop : \"10px\"}}>Confirm Password *</label>\r\n                            <input autoFocus={false} style={inputStyle} type=\"password\" name=\"password\"  onChange={this.validatePassword} placeholder=\"Confirm password\"/>\r\n                            <label style={{paddingTop : \"10px\", paddingLeft : \"20px\", color: \"#808080\", fontSize : \"15px\"}}>Protect your data!</label>\r\n                            <ul style={{marginTop : \"-10px\", fontSize : \"15px\", color: \"#808080\"}}>\r\n                                <li>Try to include one symbol in your password.</li>\r\n                                <li>Password must have numbers.</li>\r\n                            </ul>\r\n                            <button className=\"registerSubmit\" onMouseEnter={this.toggleHover} onMouseLeave={this.toggleHover} style={buttonStyle} type=\"submit\" onSubmit={this.SubmitRegisterData}>\r\n                                Create a Cortex account\r\n                            </button>\r\n                        </Col>\r\n                    </Row>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst formStyle = {\r\n    padding: \"15px\",\r\n    margin: \"auto\",\r\n    width : \"100%\",\r\n    maxWidth : \"1000px\"\r\n}\r\nconst modalStyle = {\r\n    content : {\r\n        margin : \"auto\",\r\n        width : \"55vh\",\r\n        height : \"55vh\",\r\n        position : \"absolute\",\r\n        borderRadius : \"10px\",\r\n        overflow : \"none\",\r\n        boxShadow : \"0px 0px 20px\"\r\n      }\r\n}\r\nexport default RegisterForm"]},"metadata":{},"sourceType":"module"}