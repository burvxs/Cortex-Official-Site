{"ast":null,"code":"var _jsxFileName = \"C:\\\\Workspace\\\\Cortex\\\\cortex-official-website\\\\src\\\\front-end\\\\src\\\\components\\\\forms\\\\Register.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Base from '../base/Base';\nimport Modal from 'react-modal';\nimport { Row, Col } from 'reactstrap';\nModal.defaultStyles.overlay.backgroundColor = \"none\";\n\nclass RegisterForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.validateForm = () => {\n      if (this.status !== null) {\n        if (this.status == 406) {\n          this.isInvalid = true;\n        } else if (!this.isInvalid) this.isValid = true;\n      }\n    };\n\n    this.handleFormChange = e => {\n      let elementName = e.target.name;\n      let content = e.target.value;\n      this.setState({\n        values: { ...this.state.values,\n          [elementName]: content\n        }\n      });\n    };\n\n    this.SubmitRegisterData = async e => {\n      e.preventDefault();\n      console.log(this.state);\n\n      if (this.state.isValid[0] && this.state.isValid[1]) {\n        this.setState({\n          isSubmitting: true\n        });\n        const res = await fetch(\"http://127.0.0.1:8000/api/accounts/\", {\n          method: \"POST\",\n          body: JSON.stringify(this.state.values),\n          headers: {\n            \"Content-Type\": \"application/json\",\n            'Accept': 'application/json'\n          }\n        });\n        this.status = res.status;\n        this.setState({\n          isSubmitting: false\n        });\n        const data = await res.json();\n        !data.hasOwnProperty(\"error\") ? this.setState({\n          message: data.success\n        }) : this.setState({\n          message: data.error,\n          isError: true\n        });\n        console.log(this.state.message);\n        this.setState({\n          values: {\n            email: \"\",\n            firstname: \"\",\n            lastname: \"\",\n            fullName: \"\",\n            password: \"\",\n            phoneNumber: \"\"\n          }\n        });\n      }\n    };\n\n    this.feedbackStyle = () => {\n      if (this.isInvalid == true) {\n        return {\n          display: \"flex\"\n        };\n      }\n    };\n\n    this.toggleHover = e => {\n      this.setState({\n        isHover: !this.state.hover\n      });\n      if (this.state.isHover) this.setState({\n        isHover: false\n      });\n    };\n\n    this.getHoverStyle = () => {\n      var style;\n      if (this.state.isHover) style = \"#404040\";else style = \"black\";\n      return style;\n    };\n\n    this.validatePassword = e => {\n      //let digitReg = new RegExp(\"[0-9].{2}\");    \n      let pwReg = new RegExp(\"^((?=.*[0-9]{2,})(?=.*[A-Z])(?=.{8,}))\");\n      let isConfirmed = false;\n\n      if (e.target.value === \"\" || e.target.value === null || e.target.value === undefined) {\n        this.setState({\n          isPasswordValid: false,\n          values: {\n            password: e.target.value\n          }\n        });\n      } else {\n        isConfirmed = true;\n      }\n\n      if (isConfirmed) {\n        if (!pwReg.test([e.target.value])) {\n          this.setState({\n            isPasswordValid: false,\n            values: {\n              password: e.target.value\n            }\n          });\n        } else {\n          this.setState({\n            isPasswordValid: true,\n            values: {\n              password: e.target.value\n            }\n          });\n        }\n      }\n    };\n\n    this.getPasswordStyle = () => {\n      if (this.state.values.password !== \"\") {\n        if (!this.state.isPasswordValid) return \"#f70d1a\";else return \"black\";\n      }\n    };\n\n    this.validateEmail = e => {\n      let email = [e.target.value];\n\n      if (email[0].lastLndexOf('@') > 0) {\n        this.setState({\n          isEmailValid: true\n        });\n      } else {\n        this.setState({\n          isEmailValid: false\n        });\n      }\n    };\n\n    this.getEmailStyle = () => {\n      if (this.state.values.email !== \"\") {\n        if (!this.state.isEmailValid) return \"#f70d1a\";else return \"black\";\n      }\n    };\n\n    this.state = {\n      values: {\n        email: \"\",\n        firstname: \"\",\n        lastname: \"\",\n        fullName: \"\",\n        password: \"\",\n        phoneNumber: \"\"\n      },\n      isSubmitting: false,\n      isOpen: false,\n      isPasswordValid: null,\n      isEmailValid: false,\n      isValid: [this.isPasswordValid, this.isEmailValid],\n      isError: false,\n      isHover: false\n    };\n    this.pwInvalidLine = null;\n    this.status = null;\n  }\n\n  componentDidMount() {\n    this.setState({\n      isOpen: true\n    });\n  }\n\n  render() {\n    this.validateForm();\n    const buttonStyle = {\n      outline: \"none\",\n      width: \"90%\",\n      height: \"39px\",\n      marginLeft: \"18px\",\n      borderRadius: \"10px\",\n      borderColor: \"\t#FFFFFF\",\n      borderWidth: \"2px\",\n      backgroundColor: this.getHoverStyle(),\n      color: \"white\",\n      transition: \"all ease .5s\"\n    };\n    const passwordStyle = {\n      borderColor: \"black\",\n      borderWidth: \"1px\",\n      borderRadius: \"3px\",\n      borderColor: this.getPasswordStyle(),\n      outline: \"none\",\n      width: \"100%\"\n    };\n    const emailStyle = {\n      borderColor: \"black\",\n      borderWidth: \"1px\",\n      borderRadius: \"3px\",\n      borderColor: this.getEmailStyle(),\n      outline: \"none\",\n      width: \"100%\"\n    };\n    document.getElementById('root').style.filter = 'none';\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.isOpen,\n      ariaHideApp: false,\n      style: modalStyle,\n      width: \"10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 21\n      }\n    }, \"Sign Up\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        paddingTop: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        display: \"flex\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 29\n      }\n    }, \"First Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      style: {\n        width: \"100%\",\n        paddingRight: \"5px\"\n      },\n      type: \"text\",\n      name: \"firstname\",\n      placeholder: \"Enter your first name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      style: {\n        paddingLeft: \"5px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        display: \"flex\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 29\n      }\n    }, \"Last Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      style: {\n        width: \"100%\"\n      },\n      type: \"text\",\n      name: \"lastname\",\n      placeholder: \"Enter your last name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        paddingTop: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        display: \"flex\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 29\n      }\n    }, \"Email *\"), /*#__PURE__*/React.createElement(\"input\", {\n      style: emailStyle,\n      type: \"text\",\n      name: \"email\",\n      onChange: this.validateEmail,\n      placeholder: \"Enter your email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        display: \"flex\",\n        paddingTop: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 29\n      }\n    }, \"Password\", /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: this.getPasswordStyle()\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 92\n      }\n    }, \"*\")), /*#__PURE__*/React.createElement(\"input\", {\n      style: passwordStyle,\n      type: \"password\",\n      name: \"password\",\n      onChange: this.validatePassword,\n      placeholder: \"Enter your password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 29\n      }\n    }), this.pwInvalidLine, /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        paddingLeft: \"20px\",\n        paddingTop: \"10px\",\n        color: \"#808080\",\n        fontSize: \"15px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 29\n      }\n    }, \"Protect your data!\"), /*#__PURE__*/React.createElement(\"ul\", {\n      style: {\n        marginTop: \"-10px\",\n        fontSize: \"15px\",\n        color: \"#808080\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 33\n      }\n    }, \"Try to include one symbol in your password. !@#$\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 33\n      }\n    }, \"Password must 2 numbers.\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 33\n      }\n    }, \"Password must 1 uppercase letter.\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 33\n      }\n    }, \"Password must contain 8 digits.\")), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"registerSubmit\",\n      onMouseEnter: this.toggleHover,\n      onMouseLeave: this.toggleHover,\n      style: buttonStyle,\n      type: \"submit\",\n      onSubmit: this.SubmitRegisterData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 29\n      }\n    }, \"Create a Cortex account\")))));\n  }\n\n}\n\nconst formStyle = {\n  padding: \"15px\",\n  margin: \"auto\",\n  width: \"100%\",\n  maxWidth: \"1000px\"\n};\nconst modalStyle = {\n  content: {\n    margin: \"auto\",\n    width: \"55vh\",\n    height: \"53vh\",\n    position: \"absolute\",\n    borderRadius: \"10px\",\n    overflow: \"none\",\n    boxShadow: \"0px 0px 20px\"\n  }\n};\nexport default RegisterForm;","map":{"version":3,"sources":["C:/Workspace/Cortex/cortex-official-website/src/front-end/src/components/forms/Register.js"],"names":["React","Component","Link","Base","Modal","Row","Col","defaultStyles","overlay","backgroundColor","RegisterForm","constructor","props","validateForm","status","isInvalid","isValid","handleFormChange","e","elementName","target","name","content","value","setState","values","state","SubmitRegisterData","preventDefault","console","log","isSubmitting","res","fetch","method","body","JSON","stringify","headers","data","json","hasOwnProperty","message","success","error","isError","email","firstname","lastname","fullName","password","phoneNumber","feedbackStyle","display","toggleHover","isHover","hover","getHoverStyle","style","validatePassword","pwReg","RegExp","isConfirmed","undefined","isPasswordValid","test","getPasswordStyle","validateEmail","lastLndexOf","isEmailValid","getEmailStyle","isOpen","pwInvalidLine","componentDidMount","render","buttonStyle","outline","width","height","marginLeft","borderRadius","borderColor","borderWidth","color","transition","passwordStyle","emailStyle","document","getElementById","filter","modalStyle","paddingTop","paddingRight","paddingLeft","fontSize","marginTop","formStyle","padding","margin","maxWidth","position","overflow","boxShadow"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport Base from '../base/Base'\r\nimport Modal from 'react-modal'\r\nimport {\r\n          Row, \r\n          Col,\r\n        } from 'reactstrap'\r\n\r\n\r\nModal.defaultStyles.overlay.backgroundColor = \"none\"\r\n\r\nclass RegisterForm extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            values: {\r\n                email: \"\",\r\n                firstname: \"\",\r\n                lastname: \"\",\r\n                fullName: \"\",\r\n                password : \"\",\r\n                phoneNumber : \"\",\r\n            },\r\n            isSubmitting: false,\r\n            isOpen : false,\r\n            isPasswordValid : null,\r\n            isEmailValid : false,\r\n            isValid : [this.isPasswordValid, this.isEmailValid],\r\n            isError: false,\r\n            isHover : false\r\n        } \r\n        this.pwInvalidLine = null\r\n        this.status = null\r\n    }\r\n\r\n    validateForm = () => {\r\n        if(this.status !== null){\r\n            if (this.status == 406){\r\n                this.isInvalid = true\r\n            }else if(!this.isInvalid)\r\n                this.isValid = true\r\n        }\r\n    }\r\n    handleFormChange = (e) =>{\r\n        let elementName = e.target.name;\r\n        let content = e.target.value;\r\n        this.setState({\r\n            values : {\r\n                ...this.state.values, [elementName] : content\r\n            }            \r\n        });\r\n    }\r\n    SubmitRegisterData = async e =>{\r\n        e.preventDefault();\r\n        console.log(this.state)\r\n        if(this.state.isValid[0] && this.state.isValid[1]){\r\n            this.setState({isSubmitting : true})\r\n\r\n            const res = await fetch(\"http://127.0.0.1:8000/api/accounts/\", {\r\n                method : \"POST\",\r\n                body: JSON.stringify(this.state.values),\r\n                headers : {\r\n                    \"Content-Type\" : \"application/json\",\r\n                    'Accept': 'application/json'\r\n                }\r\n            });\r\n            this.status = res.status\r\n            this.setState({isSubmitting : false})\r\n            const data = await res.json();\r\n            !data.hasOwnProperty(\"error\")\r\n            ? this.setState({ message : data.success })\r\n            : this.setState({message: data.error, isError: true}) \r\n            console.log(this.state.message)\r\n            this.setState({\r\n                values : {\r\n                    email: \"\",\r\n                    firstname: \"\",\r\n                    lastname: \"\",\r\n                    fullName: \"\",\r\n                    password : \"\",\r\n                    phoneNumber : \"\",\r\n                },\r\n            })\r\n        }   \r\n    }\r\n    feedbackStyle = () => {\r\n        if(this.isInvalid == true){\r\n            return {\r\n                display : \"flex\"\r\n            }\r\n        }\r\n    }\r\n    toggleHover = (e) => {\r\n        this.setState({isHover : !this.state.hover})\r\n        if (this.state.isHover)\r\n            this.setState({isHover : false})\r\n    }\r\n    getHoverStyle = () => {\r\n        var style\r\n        if(this.state.isHover)\r\n            style = \"#404040\"\r\n        else\r\n            style = \"black\"\r\n        return style\r\n    }\r\n    componentDidMount(){\r\n        this.setState({\r\n            isOpen : true\r\n        });\r\n    }\r\n    validatePassword = (e) => {\r\n        //let digitReg = new RegExp(\"[0-9].{2}\");    \r\n        let pwReg = new RegExp(\"^((?=.*[0-9]{2,})(?=.*[A-Z])(?=.{8,}))\")\r\n        let isConfirmed = false      \r\n        if (e.target.value === \"\" || e.target.value === null || e.target.value === undefined){\r\n            this.setState({\r\n                isPasswordValid : false,\r\n                values : {\r\n                    password : e.target.value\r\n                }\r\n            })\r\n        }else{\r\n            isConfirmed = true\r\n        }\r\n        if (isConfirmed){\r\n            if (!pwReg.test([e.target.value])){\r\n                this.setState({\r\n                    isPasswordValid : false,\r\n                    values : {\r\n                        password : e.target.value\r\n                    }\r\n                })\r\n            }else{\r\n                this.setState({\r\n                    isPasswordValid : true,\r\n                    values : {\r\n                        password : e.target.value\r\n                    }\r\n                })\r\n            }\r\n        }         \r\n    }\r\n    getPasswordStyle = () => {\r\n        if(this.state.values.password !== \"\"){\r\n            if (!this.state.isPasswordValid)\r\n                return \"#f70d1a\"\r\n            else\r\n                return \"black\"\r\n        }\r\n    }\r\n    validateEmail = (e) => {     \r\n        let email = [e.target.value]\r\n        if (email[0].lastLndexOf('@') > 0){\r\n            this.setState({\r\n            isEmailValid : true\r\n            })\r\n        }\r\n        else{\r\n            this.setState({\r\n                isEmailValid : false\r\n            })\r\n        }\r\n    }\r\n    getEmailStyle = () => {\r\n        if(this.state.values.email !== \"\"){\r\n            if(!this.state.isEmailValid)\r\n                return \"#f70d1a\"\r\n            else\r\n                return \"black\"\r\n        }\r\n    }\r\n    render(){\r\n        this.validateForm()\r\n        const buttonStyle = {\r\n            outline : \"none\",\r\n            width: \"90%\",\r\n            height : \"39px\",\r\n            marginLeft : \"18px\",\r\n            borderRadius : \"10px\",\r\n            borderColor : \"\t#FFFFFF\",\r\n            borderWidth : \"2px\",\r\n            backgroundColor : this.getHoverStyle(),\r\n            color : \"white\",\r\n            transition: \"all ease .5s\",\r\n        }\r\n        const passwordStyle = {\r\n            borderColor : \"black\",\r\n            borderWidth : \"1px\",\r\n            borderRadius : \"3px\",\r\n            borderColor : this.getPasswordStyle(),\r\n            outline: \"none\",\r\n            width : \"100%\"\r\n        }\r\n        const emailStyle = {\r\n            borderColor : \"black\",\r\n            borderWidth : \"1px\",\r\n            borderRadius : \"3px\",\r\n            borderColor : this.getEmailStyle(),\r\n            outline: \"none\",\r\n            width : \"100%\"\r\n        }\r\n        document.getElementById('root').style.filter = 'none'\r\n        return(    \r\n            <div style={{display : \"flex\"}}>          \r\n                <Modal isOpen={this.state.isOpen} ariaHideApp={false} style={modalStyle} width=\"10\">\r\n                    <h2>Sign Up</h2>\r\n                    <hr/>\r\n                    <Row style={{paddingTop : \"10px\"}}>             \r\n                        <Col>\r\n                            <label style={{display : \"flex\"}}>First Name</label>\r\n                            <input style={{width: \"100%\", paddingRight : \"5px\" }} type=\"text\" name=\"firstname\" placeholder=\"Enter your first name\"/>\r\n                        </Col>\r\n                        <Col style={{paddingLeft : \"5px\"}}>\r\n                            <label style={{display : \"flex\"}}>Last Name</label>\r\n                            <input style={{width: \"100%\" }} type=\"text\" name=\"lastname\" placeholder=\"Enter your last name\"/>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row style={{paddingTop : \"10px\"}}>\r\n                        <Col>\r\n                            <label style={{display : \"flex\"}}>Email *</label>\r\n                            <input style={emailStyle} type=\"text\" name=\"email\" onChange={this.validateEmail} placeholder=\"Enter your email\"/>\r\n                            <label style={{display : \"flex\", paddingTop : \"10px\"}}>Password<span style={{color : this.getPasswordStyle()}}>*</span></label>\r\n                            <input style={passwordStyle} type=\"password\" name=\"password\" onChange={this.validatePassword}  placeholder=\"Enter your password\"/>\r\n                            {this.pwInvalidLine}\r\n                            <label style={{ paddingLeft : \"20px\", paddingTop : \"10px\", color: \"#808080\", fontSize : \"15px\"}}>Protect your data!</label>                           \r\n                            <ul style={{marginTop : \"-10px\", fontSize : \"15px\", color: \"#808080\"}}>\r\n                                <li>Try to include one symbol in your password. !@#$</li>\r\n                                <li>Password must 2 numbers.</li>\r\n                                <li>Password must 1 uppercase letter.</li>\r\n                                <li>Password must contain 8 digits.</li>\r\n                            </ul>\r\n                            <button className=\"registerSubmit\" onMouseEnter={this.toggleHover} onMouseLeave={this.toggleHover} style={buttonStyle} type=\"submit\" onSubmit={this.SubmitRegisterData}>\r\n                                Create a Cortex account\r\n                            </button>\r\n                        </Col>\r\n                    </Row>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst formStyle = {\r\n    padding: \"15px\",\r\n    margin: \"auto\",\r\n    width : \"100%\",\r\n    maxWidth : \"1000px\"\r\n}\r\nconst modalStyle = {\r\n    content : {\r\n        margin : \"auto\",\r\n        width : \"55vh\",\r\n        height : \"53vh\",\r\n        position : \"absolute\",\r\n        borderRadius : \"10px\",\r\n        overflow : \"none\",\r\n        boxShadow : \"0px 0px 20px\"\r\n      }\r\n}\r\nexport default RegisterForm"]},"metadata":{},"sourceType":"module"}