{"ast":null,"code":"var _jsxFileName = \"C:\\\\Workspace\\\\Cortex\\\\cortex-official-website\\\\src\\\\front-end\\\\src\\\\components\\\\forms\\\\Register.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Modal from 'react-modal';\nimport BrainAnimation from '../LoadingAnimation';\nimport { Row, Col } from 'reactstrap';\nModal.defaultStyles.overlay.backgroundColor = \"none\";\n\nclass RegisterForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleFormChange = e => {\n      let elementName = e.target.name;\n      if (elementName == \"password\") this.validatePassword(e.target.value);\n      if (elementName == \"email\") this.validateEmail(e.target.value);\n      let content = e.target.value;\n      this.setState({\n        values: { ...this.state.values,\n          [elementName]: content\n        }\n      });\n    };\n\n    this.submitRegisterData = async e => {\n      if (this.state.isEmailValid && this.state.isPasswordValid) {\n        this.setState({\n          isSubmitting: true\n        });\n        const res = await fetch(\"http://127.0.0.1:8000/api/accounts/\", {\n          method: \"POST\",\n          body: JSON.stringify(this.state.values),\n          headers: {\n            \"Content-Type\": \"application/json\",\n            'Accept': 'application/json'\n          }\n        });\n        this.status = res.status;\n        setTimeout(() => {\n          this.setState({\n            isSubmitting: false\n          });\n          this.buttonText = \"Account created!\";\n        }, 1500);\n        const data = await res.json();\n        this.setState({\n          emailExists: data['validity']\n        });\n        if (this.state.emailExists) this.emailExistsText = /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            fontSize: \"14px\",\n            marginBottom: \"-10px\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 40\n          }\n        }, \"It looks like you already have an account. \", /*#__PURE__*/React.createElement(Link, {\n          to: \"/login\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 138\n          }\n        }, \"Login?\"));else this.emailExistsText = null;\n        !data.hasOwnProperty(\"error\") ? this.setState({\n          message: data.success\n        }) : this.setState({\n          message: data.error,\n          isError: true\n        });\n        console.log(this.state.message);\n        this.setState({\n          values: {\n            email: \"\",\n            firstname: \"\",\n            lastname: \"\",\n            fullName: \"\",\n            password: \"\",\n            phoneNumber: \"\"\n          }\n        });\n        this.setState({\n          isOpen: false\n        });\n      }\n    };\n\n    this.feedbackStyle = () => {\n      if (this.isInvalid == true) {\n        return {\n          display: \"flex\"\n        };\n      }\n    };\n\n    this.toggleHover = e => {\n      this.setState({\n        isHover: !this.state.hover\n      });\n      if (this.state.isHover) this.setState({\n        isHover: false\n      });\n    };\n\n    this.getHoverStyle = () => {\n      var style;\n      if (this.state.isHover) style = \"#404040\";else style = \"black\";\n      return style;\n    };\n\n    this.validatePassword = value => {\n      //let digitReg = new RegExp(\"[0-9].{2}\");    \n      let pwReg = new RegExp(\"^((?=.*[0-9]{2,})(?=.*[A-Z])(?=.{8,}))\");\n      let isConfirmed = false;\n\n      if (value === \"\" || value === null || value === undefined) {\n        this.setState({\n          isPasswordValid: false\n        });\n      } else {\n        isConfirmed = true;\n      }\n\n      if (isConfirmed) {\n        if (!pwReg.test([value])) {\n          this.setState({\n            isPasswordValid: false\n          });\n        } else {\n          this.setState({\n            isPasswordValid: true\n          });\n        }\n      }\n\n      if (value !== null) {\n        let pw = [value.toString()];\n\n        if (pw[0].lastIndexOf('\"') > 0) {\n          this.setState({\n            isPassword: false\n          });\n        }\n      }\n    };\n\n    this.getPasswordStyle = () => {\n      if (this.state.values.password !== \"\") {\n        if (!this.state.isPasswordValid) return \"#f70d1a\";else return \"black\";\n      }\n    };\n\n    this.setLoading = () => {\n      if (this.state.isSubmitting) this.loadingAnim = /*#__PURE__*/React.createElement(BrainAnimation, {\n        MarginLeft: \"86.5%\",\n        MarginTop: \"-7%\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 32\n        }\n      });else if (!this.state.isSubmitting) this.loadingAnim = null;\n    };\n\n    this.validateEmail = value => {\n      let email = [value.toString()];\n      if (email[0] === \"\") this.setState({\n        isEmailValid: false\n      });\n\n      if (email[0].lastIndexOf('@') > 0 && email[0].lastIndexOf('.') > 0) {\n        this.setState({\n          isEmailValid: true\n        });\n      } else {\n        this.setState({\n          isEmailValid: false\n        });\n      }\n\n      if (email[0].lastIndexOf('\"') > 0) {\n        this.setState({\n          isEmailValid: false\n        });\n      }\n    };\n\n    this.getEmailStyle = () => {\n      if (this.state.values.email !== \"\") {\n        if (!this.state.isEmailValid) return \"#f70d1a\";else return \"black\";\n      }\n    };\n\n    this.state = {\n      values: {\n        email: \"\",\n        firstname: \"\",\n        lastname: \"\",\n        fullName: \"\",\n        password: \"\",\n        phoneNumber: \"\"\n      },\n      isSubmitting: false,\n      isOpen: false,\n      isPasswordValid: false,\n      isEmailValid: null,\n      emailExists: false,\n      isError: false,\n      isHover: false\n    };\n    this.emailExistsText = null;\n    this.loadingAnim = null;\n    this.status = null;\n    this.buttonText = \"Create a Cortex account\";\n  }\n\n  componentDidMount() {\n    this.setState({\n      isOpen: true\n    });\n  }\n\n  render() {\n    const buttonStyle = {\n      outline: \"none\",\n      width: \"90%\",\n      height: \"39px\",\n      marginLeft: \"18px\",\n      borderRadius: \"10px\",\n      borderColor: \"\t#FFFFFF\",\n      borderWidth: \"2px\",\n      backgroundColor: this.getHoverStyle(),\n      color: \"white\",\n      transition: \"all ease .5s\"\n    };\n    const passwordStyle = {\n      borderColor: \"black\",\n      borderWidth: \"1px\",\n      borderRadius: \"3px\",\n      borderColor: this.getPasswordStyle(),\n      outline: \"none\",\n      width: \"100%\"\n    };\n    const emailStyle = {\n      borderColor: \"black\",\n      borderWidth: \"1px\",\n      borderRadius: \"3px\",\n      borderColor: this.getEmailStyle(),\n      outline: \"none\",\n      width: \"100%\"\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.isOpen,\n      ariaHideApp: false,\n      style: modalStyle,\n      width: \"10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 21\n      }\n    }, \"Sign Up\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        paddingTop: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        display: \"flex\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 29\n      }\n    }, \"First Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      style: {\n        width: \"100%\",\n        paddingRight: \"5px\"\n      },\n      type: \"text\",\n      name: \"firstname\",\n      placeholder: \"Enter your first name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      style: {\n        paddingLeft: \"5px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        display: \"flex\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 29\n      }\n    }, \"Last Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      style: {\n        width: \"100%\"\n      },\n      type: \"text\",\n      name: \"lastname\",\n      placeholder: \"Enter your last name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        paddingTop: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        display: \"flex\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 29\n      }\n    }, \"Email\", /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: this.getEmailStyle()\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 68\n      }\n    }, \"*\")), /*#__PURE__*/React.createElement(\"input\", {\n      style: emailStyle,\n      type: \"text\",\n      name: \"email\",\n      onChange: this.handleFormChange,\n      placeholder: \"Enter your email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        display: \"flex\",\n        paddingTop: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 29\n      }\n    }, \"Password\", /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: this.getPasswordStyle()\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 92\n      }\n    }, \"*\")), /*#__PURE__*/React.createElement(\"input\", {\n      style: passwordStyle,\n      type: \"password\",\n      name: \"password\",\n      onChange: this.handleFormChange,\n      placeholder: \"Enter your password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 29\n      }\n    }), this.emailExistsText, /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        paddingLeft: \"20px\",\n        paddingTop: \"10px\",\n        color: \"#808080\",\n        fontSize: \"15px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 29\n      }\n    }, \"Protect your data!\"), /*#__PURE__*/React.createElement(\"ul\", {\n      style: {\n        marginTop: \"-10px\",\n        fontSize: \"15px\",\n        color: \"#808080\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 33\n      }\n    }, \"Try to include one symbol in your password. !@#$\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 33\n      }\n    }, \"Password must contain 2 numbers.\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 33\n      }\n    }, \"Password must contain 1 uppercase letter.\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 33\n      }\n    }, \"Password must contain at least 8 digits.\")), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"registerSubmit\",\n      onMouseEnter: this.toggleHover,\n      onMouseLeave: this.toggleHover,\n      style: buttonStyle,\n      type: \"submit\",\n      onClick: this.submitRegisterData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 29\n      }\n    }, this.buttonText), this.setLoading(), this.loadingAnim))));\n  }\n\n}\n\nconst modalStyle = {\n  content: {\n    margin: \"auto\",\n    width: \"55vh\",\n    height: \"53vh\",\n    position: \"absolute\",\n    borderRadius: \"10px\",\n    overflow: \"none\",\n    boxShadow: \"0px 0px 20px\"\n  }\n};\nexport default RegisterForm;","map":{"version":3,"sources":["C:/Workspace/Cortex/cortex-official-website/src/front-end/src/components/forms/Register.js"],"names":["React","Component","Link","Modal","BrainAnimation","Row","Col","defaultStyles","overlay","backgroundColor","RegisterForm","constructor","props","handleFormChange","e","elementName","target","name","validatePassword","value","validateEmail","content","setState","values","state","submitRegisterData","isEmailValid","isPasswordValid","isSubmitting","res","fetch","method","body","JSON","stringify","headers","status","setTimeout","buttonText","data","json","emailExists","emailExistsText","fontSize","marginBottom","hasOwnProperty","message","success","error","isError","console","log","email","firstname","lastname","fullName","password","phoneNumber","isOpen","feedbackStyle","isInvalid","display","toggleHover","isHover","hover","getHoverStyle","style","pwReg","RegExp","isConfirmed","undefined","test","pw","toString","lastIndexOf","isPassword","getPasswordStyle","setLoading","loadingAnim","getEmailStyle","componentDidMount","render","buttonStyle","outline","width","height","marginLeft","borderRadius","borderColor","borderWidth","color","transition","passwordStyle","emailStyle","modalStyle","paddingTop","paddingRight","paddingLeft","marginTop","margin","position","overflow","boxShadow"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,OAAOC,cAAP,MAA2B,qBAA3B;AAEA,SACUC,GADV,EAEUC,GAFV,QAGe,YAHf;AAMAH,KAAK,CAACI,aAAN,CAAoBC,OAApB,CAA4BC,eAA5B,GAA8C,MAA9C;;AAEA,MAAMC,YAAN,SAA2BT,SAA3B,CAAqC;AACjCU,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAwBlBC,gBAxBkB,GAwBEC,CAAD,IAAM;AACrB,UAAIC,WAAW,GAAGD,CAAC,CAACE,MAAF,CAASC,IAA3B;AACA,UAAIF,WAAW,IAAI,UAAnB,EACI,KAAKG,gBAAL,CAAsBJ,CAAC,CAACE,MAAF,CAASG,KAA/B;AAEJ,UAAIJ,WAAW,IAAI,OAAnB,EACI,KAAKK,aAAL,CAAmBN,CAAC,CAACE,MAAF,CAASG,KAA5B;AAEJ,UAAIE,OAAO,GAAGP,CAAC,CAACE,MAAF,CAASG,KAAvB;AACA,WAAKG,QAAL,CAAc;AACVC,QAAAA,MAAM,EAAG,EACL,GAAG,KAAKC,KAAL,CAAWD,MADT;AACiB,WAACR,WAAD,GAAgBM;AADjC;AADC,OAAd;AAKH,KAtCiB;;AAAA,SAuClBI,kBAvCkB,GAuCG,MAAMX,CAAN,IAAU;AAC3B,UAAG,KAAKU,KAAL,CAAWE,YAAX,IAA2B,KAAKF,KAAL,CAAWG,eAAzC,EAAyD;AACrD,aAAKL,QAAL,CAAc;AAACM,UAAAA,YAAY,EAAG;AAAhB,SAAd;AACA,cAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,qCAAD,EAAwC;AAC3DC,UAAAA,MAAM,EAAG,MADkD;AAE3DC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe,KAAKV,KAAL,CAAWD,MAA1B,CAFqD;AAG3DY,UAAAA,OAAO,EAAG;AACN,4BAAiB,kBADX;AAEN,sBAAU;AAFJ;AAHiD,SAAxC,CAAvB;AAQA,aAAKC,MAAL,GAAcP,GAAG,CAACO,MAAlB;AACAC,QAAAA,UAAU,CAAC,MAAM;AACb,eAAKf,QAAL,CAAc;AAACM,YAAAA,YAAY,EAAG;AAAhB,WAAd;AACA,eAAKU,UAAL,GAAkB,kBAAlB;AACH,SAHS,EAGP,IAHO,CAAV;AAIA,cAAMC,IAAI,GAAG,MAAMV,GAAG,CAACW,IAAJ,EAAnB;AACA,aAAKlB,QAAL,CAAc;AAACmB,UAAAA,WAAW,EAAGF,IAAI,CAAC,UAAD;AAAnB,SAAd;AACA,YAAG,KAAKf,KAAL,CAAWiB,WAAd,EACI,KAAKC,eAAL,gBAAuB;AAAG,UAAA,KAAK,EAAE;AAACC,YAAAA,QAAQ,EAAG,MAAZ;AAAoBC,YAAAA,YAAY,EAAG;AAAnC,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uEAAkG,oBAAC,IAAD;AAAM,UAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAlG,CAAvB,CADJ,KAGI,KAAKF,eAAL,GAAuB,IAAvB;AACJ,SAACH,IAAI,CAACM,cAAL,CAAoB,OAApB,CAAD,GACE,KAAKvB,QAAL,CAAc;AAAEwB,UAAAA,OAAO,EAAGP,IAAI,CAACQ;AAAjB,SAAd,CADF,GAEE,KAAKzB,QAAL,CAAc;AAACwB,UAAAA,OAAO,EAAEP,IAAI,CAACS,KAAf;AAAsBC,UAAAA,OAAO,EAAE;AAA/B,SAAd,CAFF;AAGAC,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAK3B,KAAL,CAAWsB,OAAvB;AACA,aAAKxB,QAAL,CAAc;AACVC,UAAAA,MAAM,EAAG;AACL6B,YAAAA,KAAK,EAAE,EADF;AAELC,YAAAA,SAAS,EAAE,EAFN;AAGLC,YAAAA,QAAQ,EAAE,EAHL;AAILC,YAAAA,QAAQ,EAAE,EAJL;AAKLC,YAAAA,QAAQ,EAAG,EALN;AAMLC,YAAAA,WAAW,EAAG;AANT;AADC,SAAd;AAWA,aAAKnC,QAAL,CAAc;AAACoC,UAAAA,MAAM,EAAG;AAAV,SAAd;AAEH;AACJ,KA/EiB;;AAAA,SAgFlBC,aAhFkB,GAgFF,MAAM;AAClB,UAAG,KAAKC,SAAL,IAAkB,IAArB,EAA0B;AACtB,eAAO;AACHC,UAAAA,OAAO,EAAG;AADP,SAAP;AAGH;AACJ,KAtFiB;;AAAA,SAuFlBC,WAvFkB,GAuFHhD,CAAD,IAAO;AACjB,WAAKQ,QAAL,CAAc;AAACyC,QAAAA,OAAO,EAAG,CAAC,KAAKvC,KAAL,CAAWwC;AAAvB,OAAd;AACA,UAAI,KAAKxC,KAAL,CAAWuC,OAAf,EACI,KAAKzC,QAAL,CAAc;AAACyC,QAAAA,OAAO,EAAG;AAAX,OAAd;AACP,KA3FiB;;AAAA,SA4FlBE,aA5FkB,GA4FF,MAAM;AAClB,UAAIC,KAAJ;AACA,UAAG,KAAK1C,KAAL,CAAWuC,OAAd,EACIG,KAAK,GAAG,SAAR,CADJ,KAGIA,KAAK,GAAG,OAAR;AACJ,aAAOA,KAAP;AACH,KAnGiB;;AAAA,SAyGlBhD,gBAzGkB,GAyGEC,KAAD,IAAW;AAC1B;AACA,UAAIgD,KAAK,GAAG,IAAIC,MAAJ,CAAW,wCAAX,CAAZ;AACA,UAAIC,WAAW,GAAG,KAAlB;;AACA,UAAIlD,KAAK,KAAK,EAAV,IAAgBA,KAAK,KAAK,IAA1B,IAAkCA,KAAK,KAAKmD,SAAhD,EAA0D;AACtD,aAAKhD,QAAL,CAAc;AACVK,UAAAA,eAAe,EAAG;AADR,SAAd;AAGH,OAJD,MAIK;AACD0C,QAAAA,WAAW,GAAG,IAAd;AACH;;AACD,UAAIA,WAAJ,EAAgB;AACZ,YAAI,CAACF,KAAK,CAACI,IAAN,CAAW,CAACpD,KAAD,CAAX,CAAL,EAAyB;AACrB,eAAKG,QAAL,CAAc;AACVK,YAAAA,eAAe,EAAG;AADR,WAAd;AAGH,SAJD,MAIK;AACD,eAAKL,QAAL,CAAc;AACVK,YAAAA,eAAe,EAAG;AADR,WAAd;AAGH;AACJ;;AACD,UAAIR,KAAK,KAAK,IAAd,EAAoB;AAChB,YAAIqD,EAAE,GAAG,CAACrD,KAAK,CAACsD,QAAN,EAAD,CAAT;;AACA,YAAID,EAAE,CAAC,CAAD,CAAF,CAAME,WAAN,CAAkB,GAAlB,IAAyB,CAA7B,EAA+B;AAC3B,eAAKpD,QAAL,CAAc;AACVqD,YAAAA,UAAU,EAAG;AADH,WAAd;AAGH;AACJ;AACJ,KAvIiB;;AAAA,SAwIlBC,gBAxIkB,GAwIC,MAAM;AACrB,UAAG,KAAKpD,KAAL,CAAWD,MAAX,CAAkBiC,QAAlB,KAA+B,EAAlC,EAAqC;AACjC,YAAI,CAAC,KAAKhC,KAAL,CAAWG,eAAhB,EACI,OAAO,SAAP,CADJ,KAGI,OAAO,OAAP;AACP;AACJ,KA/IiB;;AAAA,SAgJlBkD,UAhJkB,GAgJL,MAAM;AACd,UAAG,KAAKrD,KAAL,CAAWI,YAAd,EACG,KAAKkD,WAAL,gBAAmB,oBAAC,cAAD;AAAgB,QAAA,UAAU,EAAC,OAA3B;AAAmC,QAAA,SAAS,EAAC,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAnB,CADH,KAEK,IAAI,CAAC,KAAKtD,KAAL,CAAWI,YAAhB,EACF,KAAKkD,WAAL,GAAoB,IAApB;AACP,KArJiB;;AAAA,SAsJlB1D,aAtJkB,GAsJDD,KAAD,IAAW;AACvB,UAAIiC,KAAK,GAAG,CAACjC,KAAK,CAACsD,QAAN,EAAD,CAAZ;AACA,UAAIrB,KAAK,CAAC,CAAD,CAAL,KAAa,EAAjB,EACI,KAAK9B,QAAL,CAAc;AAACI,QAAAA,YAAY,EAAG;AAAhB,OAAd;;AACJ,UAAI0B,KAAK,CAAC,CAAD,CAAL,CAASsB,WAAT,CAAqB,GAArB,IAA4B,CAA5B,IAAiCtB,KAAK,CAAC,CAAD,CAAL,CAASsB,WAAT,CAAqB,GAArB,IAA4B,CAAjE,EAAmE;AAC/D,aAAKpD,QAAL,CAAc;AACdI,UAAAA,YAAY,EAAG;AADD,SAAd;AAGH,OAJD,MAKI;AACA,aAAKJ,QAAL,CAAc;AACVI,UAAAA,YAAY,EAAG;AADL,SAAd;AAGH;;AACD,UAAI0B,KAAK,CAAC,CAAD,CAAL,CAASsB,WAAT,CAAqB,GAArB,IAA4B,CAAhC,EAAkC;AAC9B,aAAKpD,QAAL,CAAc;AACVI,UAAAA,YAAY,EAAG;AADL,SAAd;AAGH;AACJ,KAzKiB;;AAAA,SA0KlBqD,aA1KkB,GA0KF,MAAM;AAClB,UAAG,KAAKvD,KAAL,CAAWD,MAAX,CAAkB6B,KAAlB,KAA4B,EAA/B,EAAkC;AAC9B,YAAG,CAAC,KAAK5B,KAAL,CAAWE,YAAf,EACI,OAAO,SAAP,CADJ,KAGI,OAAO,OAAP;AACP;AACJ,KAjLiB;;AAEd,SAAKF,KAAL,GAAa;AACTD,MAAAA,MAAM,EAAE;AACJ6B,QAAAA,KAAK,EAAE,EADH;AAEJC,QAAAA,SAAS,EAAE,EAFP;AAGJC,QAAAA,QAAQ,EAAE,EAHN;AAIJC,QAAAA,QAAQ,EAAE,EAJN;AAKJC,QAAAA,QAAQ,EAAG,EALP;AAMJC,QAAAA,WAAW,EAAG;AANV,OADC;AAST7B,MAAAA,YAAY,EAAE,KATL;AAUT8B,MAAAA,MAAM,EAAG,KAVA;AAWT/B,MAAAA,eAAe,EAAG,KAXT;AAYTD,MAAAA,YAAY,EAAG,IAZN;AAaTe,MAAAA,WAAW,EAAG,KAbL;AAcTQ,MAAAA,OAAO,EAAE,KAdA;AAeTc,MAAAA,OAAO,EAAG;AAfD,KAAb;AAiBA,SAAKrB,eAAL,GAAuB,IAAvB;AACA,SAAKoC,WAAL,GAAmB,IAAnB;AACA,SAAK1C,MAAL,GAAc,IAAd;AACA,SAAKE,UAAL,GAAkB,yBAAlB;AACH;;AA6ED0C,EAAAA,iBAAiB,GAAE;AACf,SAAK1D,QAAL,CAAc;AACVoC,MAAAA,MAAM,EAAG;AADC,KAAd;AAGH;;AA0EDuB,EAAAA,MAAM,GAAE;AACJ,UAAMC,WAAW,GAAG;AAChBC,MAAAA,OAAO,EAAG,MADM;AAEhBC,MAAAA,KAAK,EAAE,KAFS;AAGhBC,MAAAA,MAAM,EAAG,MAHO;AAIhBC,MAAAA,UAAU,EAAG,MAJG;AAKhBC,MAAAA,YAAY,EAAG,MALC;AAMhBC,MAAAA,WAAW,EAAG,UANE;AAOhBC,MAAAA,WAAW,EAAG,KAPE;AAQhBhF,MAAAA,eAAe,EAAG,KAAKwD,aAAL,EARF;AAShByB,MAAAA,KAAK,EAAG,OATQ;AAUhBC,MAAAA,UAAU,EAAE;AAVI,KAApB;AAYA,UAAMC,aAAa,GAAG;AAClBJ,MAAAA,WAAW,EAAG,OADI;AAElBC,MAAAA,WAAW,EAAG,KAFI;AAGlBF,MAAAA,YAAY,EAAG,KAHG;AAIlBC,MAAAA,WAAW,EAAG,KAAKZ,gBAAL,EAJI;AAKlBO,MAAAA,OAAO,EAAE,MALS;AAMlBC,MAAAA,KAAK,EAAG;AANU,KAAtB;AAQA,UAAMS,UAAU,GAAG;AACfL,MAAAA,WAAW,EAAG,OADC;AAEfC,MAAAA,WAAW,EAAG,KAFC;AAGfF,MAAAA,YAAY,EAAG,KAHA;AAIfC,MAAAA,WAAW,EAAG,KAAKT,aAAL,EAJC;AAKfI,MAAAA,OAAO,EAAE,MALM;AAMfC,MAAAA,KAAK,EAAG;AANO,KAAnB;AAQA,wBACI;AAAK,MAAA,KAAK,EAAE;AAACvB,QAAAA,OAAO,EAAG;AAAX,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAE,KAAKrC,KAAL,CAAWkC,MAA1B;AAAkC,MAAA,WAAW,EAAE,KAA/C;AAAsD,MAAA,KAAK,EAAEoC,UAA7D;AAAyE,MAAA,KAAK,EAAC,IAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI,oBAAC,GAAD;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,UAAU,EAAG;AAAd,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,KAAK,EAAE;AAAClC,QAAAA,OAAO,EAAG;AAAX,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAO,MAAA,KAAK,EAAE;AAACuB,QAAAA,KAAK,EAAE,MAAR;AAAgBY,QAAAA,YAAY,EAAG;AAA/B,OAAd;AAAsD,MAAA,IAAI,EAAC,MAA3D;AAAkE,MAAA,IAAI,EAAC,WAAvE;AAAmF,MAAA,WAAW,EAAC,uBAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,eAKI,oBAAC,GAAD;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,WAAW,EAAG;AAAf,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,KAAK,EAAE;AAACpC,QAAAA,OAAO,EAAG;AAAX,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI;AAAO,MAAA,KAAK,EAAE;AAACuB,QAAAA,KAAK,EAAE;AAAR,OAAd;AAAgC,MAAA,IAAI,EAAC,MAArC;AAA4C,MAAA,IAAI,EAAC,UAAjD;AAA4D,MAAA,WAAW,EAAC,sBAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CALJ,CAHJ,eAaI,oBAAC,GAAD;AAAK,MAAA,KAAK,EAAE;AAACW,QAAAA,UAAU,EAAG;AAAd,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,KAAK,EAAE;AAAClC,QAAAA,OAAO,EAAG;AAAX,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAuC;AAAM,MAAA,KAAK,EAAE;AAAC6B,QAAAA,KAAK,EAAG,KAAKX,aAAL;AAAT,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAvC,CADJ,eAEI;AAAO,MAAA,KAAK,EAAEc,UAAd;AAA0B,MAAA,IAAI,EAAC,MAA/B;AAAsC,MAAA,IAAI,EAAC,OAA3C;AAAoD,MAAA,QAAQ,EAAE,KAAKhF,gBAAnE;AAAsF,MAAA,WAAW,EAAC,kBAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI;AAAO,MAAA,KAAK,EAAE;AAACgD,QAAAA,OAAO,EAAG,MAAX;AAAmBkC,QAAAA,UAAU,EAAG;AAAhC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAA+D;AAAM,MAAA,KAAK,EAAE;AAACL,QAAAA,KAAK,EAAG,KAAKd,gBAAL;AAAT,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA/D,CAHJ,eAII;AAAO,MAAA,KAAK,EAAEgB,aAAd;AAA6B,MAAA,IAAI,EAAC,UAAlC;AAA6C,MAAA,IAAI,EAAC,UAAlD;AAA6D,MAAA,QAAQ,EAAE,KAAK/E,gBAA5E;AAA8F,MAAA,WAAW,EAAC,qBAA1G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAKK,KAAK6B,eALV,eAMI;AAAO,MAAA,KAAK,EAAE;AAAEuD,QAAAA,WAAW,EAAG,MAAhB;AAAwBF,QAAAA,UAAU,EAAG,MAArC;AAA6CL,QAAAA,KAAK,EAAE,SAApD;AAA+D/C,QAAAA,QAAQ,EAAG;AAA1E,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BANJ,eAOI;AAAI,MAAA,KAAK,EAAE;AAACuD,QAAAA,SAAS,EAAG,OAAb;AAAsBvD,QAAAA,QAAQ,EAAG,MAAjC;AAAyC+C,QAAAA,KAAK,EAAE;AAAhD,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0DADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDAJJ,CAPJ,eAaI;AAAQ,MAAA,SAAS,EAAC,gBAAlB;AACC,MAAA,YAAY,EAAE,KAAK5B,WADpB;AAEC,MAAA,YAAY,EAAE,KAAKA,WAFpB;AAGC,MAAA,KAAK,EAAEoB,WAHR;AAIC,MAAA,IAAI,EAAC,QAJN;AAKC,MAAA,OAAO,EAAE,KAAKzD,kBALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMK,KAAKa,UANV,CAbJ,EAqBK,KAAKuC,UAAL,EArBL,EAsBK,KAAKC,WAtBV,CADJ,CAbJ,CADJ,CADJ;AA4CH;;AA5PgC;;AA8PrC,MAAMgB,UAAU,GAAG;AACfzE,EAAAA,OAAO,EAAG;AACN8E,IAAAA,MAAM,EAAG,MADH;AAENf,IAAAA,KAAK,EAAG,MAFF;AAGNC,IAAAA,MAAM,EAAG,MAHH;AAINe,IAAAA,QAAQ,EAAG,UAJL;AAKNb,IAAAA,YAAY,EAAG,MALT;AAMNc,IAAAA,QAAQ,EAAG,MANL;AAONC,IAAAA,SAAS,EAAG;AAPN;AADK,CAAnB;AAWA,eAAe5F,YAAf","sourcesContent":["import React, {Component} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport Modal from 'react-modal'\r\n\r\nimport BrainAnimation from '../LoadingAnimation'\r\n\r\nimport {\r\n          Row, \r\n          Col,\r\n        } from 'reactstrap'\r\n\r\n\r\nModal.defaultStyles.overlay.backgroundColor = \"none\"\r\n\r\nclass RegisterForm extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            values: {\r\n                email: \"\",\r\n                firstname: \"\",\r\n                lastname: \"\",\r\n                fullName: \"\",\r\n                password : \"\",\r\n                phoneNumber : \"\",\r\n            },\r\n            isSubmitting: false,\r\n            isOpen : false,\r\n            isPasswordValid : false,\r\n            isEmailValid : null,\r\n            emailExists : false,\r\n            isError: false,\r\n            isHover : false\r\n        } \r\n        this.emailExistsText = null\r\n        this.loadingAnim = null\r\n        this.status = null\r\n        this.buttonText = \"Create a Cortex account\"\r\n    }\r\n    handleFormChange = (e) =>{\r\n        let elementName = e.target.name;\r\n        if (elementName == \"password\")\r\n            this.validatePassword(e.target.value)\r\n\r\n        if (elementName == \"email\")\r\n            this.validateEmail(e.target.value)\r\n\r\n        let content = e.target.value;\r\n        this.setState({\r\n            values : {\r\n                ...this.state.values, [elementName] : content\r\n            }            \r\n        });\r\n    }\r\n    submitRegisterData = async e =>{\r\n        if(this.state.isEmailValid && this.state.isPasswordValid){\r\n            this.setState({isSubmitting : true}) \r\n            const res = await fetch(\"http://127.0.0.1:8000/api/accounts/\", {\r\n                method : \"POST\",\r\n                body: JSON.stringify(this.state.values),\r\n                headers : {\r\n                    \"Content-Type\" : \"application/json\",\r\n                    'Accept': 'application/json'\r\n                }\r\n            });\r\n            this.status = res.status\r\n            setTimeout(() => {\r\n                this.setState({isSubmitting : false})\r\n                this.buttonText = \"Account created!\"\r\n            }, 1500)     \r\n            const data = await res.json();\r\n            this.setState({emailExists : data['validity']})\r\n            if(this.state.emailExists)\r\n                this.emailExistsText = <p style={{fontSize : \"14px\", marginBottom : \"-10px\"}}>It looks like you already have an account. <Link to=\"/login\">Login?</Link></p> \r\n            else\r\n                this.emailExistsText = null\r\n            !data.hasOwnProperty(\"error\")\r\n            ? this.setState({ message : data.success })\r\n            : this.setState({message: data.error, isError: true}) \r\n            console.log(this.state.message)\r\n            this.setState({\r\n                values : {\r\n                    email: \"\",\r\n                    firstname: \"\",\r\n                    lastname: \"\",\r\n                    fullName: \"\",\r\n                    password : \"\",\r\n                    phoneNumber : \"\",\r\n                },\r\n            })\r\n            \r\n            this.setState({isOpen : false})\r\n\r\n        }   \r\n    }\r\n    feedbackStyle = () => {\r\n        if(this.isInvalid == true){\r\n            return {\r\n                display : \"flex\"\r\n            }\r\n        }\r\n    }\r\n    toggleHover = (e) => {\r\n        this.setState({isHover : !this.state.hover})\r\n        if (this.state.isHover)\r\n            this.setState({isHover : false})\r\n    }\r\n    getHoverStyle = () => {\r\n        var style\r\n        if(this.state.isHover)\r\n            style = \"#404040\"\r\n        else\r\n            style = \"black\"\r\n        return style\r\n    }\r\n    componentDidMount(){\r\n        this.setState({\r\n            isOpen : true\r\n        });\r\n    }\r\n    validatePassword = (value) => {\r\n        //let digitReg = new RegExp(\"[0-9].{2}\");    \r\n        let pwReg = new RegExp(\"^((?=.*[0-9]{2,})(?=.*[A-Z])(?=.{8,}))\")\r\n        let isConfirmed = false      \r\n        if (value === \"\" || value === null || value === undefined){\r\n            this.setState({\r\n                isPasswordValid : false,\r\n            })\r\n        }else{\r\n            isConfirmed = true\r\n        }\r\n        if (isConfirmed){\r\n            if (!pwReg.test([value])){\r\n                this.setState({\r\n                    isPasswordValid : false,\r\n                })\r\n            }else{\r\n                this.setState({\r\n                    isPasswordValid : true,\r\n                })\r\n            }\r\n        }  \r\n        if (value !== null) {\r\n            let pw = [value.toString()]    \r\n            if (pw[0].lastIndexOf('\"') > 0){\r\n                this.setState({\r\n                    isPassword : false\r\n                })\r\n            }\r\n        }\r\n    }\r\n    getPasswordStyle = () => {\r\n        if(this.state.values.password !== \"\"){\r\n            if (!this.state.isPasswordValid)\r\n                return \"#f70d1a\"\r\n            else\r\n                return \"black\"\r\n        }\r\n    }\r\n    setLoading = () => {\r\n         if(this.state.isSubmitting)\r\n            this.loadingAnim = <BrainAnimation MarginLeft=\"86.5%\" MarginTop=\"-7%\"/>\r\n         else if (!this.state.isSubmitting)\r\n            this.loadingAnim =  null\r\n    }\r\n    validateEmail = (value) => {     \r\n        let email = [value.toString()]\r\n        if (email[0] === \"\")\r\n            this.setState({isEmailValid : false})\r\n        if (email[0].lastIndexOf('@') > 0 && email[0].lastIndexOf('.') > 0){\r\n            this.setState({\r\n            isEmailValid : true,\r\n            })\r\n        }\r\n        else{\r\n            this.setState({\r\n                isEmailValid : false,\r\n            })\r\n        }\r\n        if (email[0].lastIndexOf('\"') > 0){\r\n            this.setState({\r\n                isEmailValid : false\r\n            })\r\n        }\r\n    }\r\n    getEmailStyle = () => {\r\n        if(this.state.values.email !== \"\"){\r\n            if(!this.state.isEmailValid)\r\n                return \"#f70d1a\"\r\n            else\r\n                return \"black\"\r\n        }\r\n    }\r\n    render(){\r\n        const buttonStyle = {\r\n            outline : \"none\",\r\n            width: \"90%\",\r\n            height : \"39px\",\r\n            marginLeft : \"18px\",\r\n            borderRadius : \"10px\",\r\n            borderColor : \"\t#FFFFFF\",\r\n            borderWidth : \"2px\",\r\n            backgroundColor : this.getHoverStyle(),\r\n            color : \"white\",\r\n            transition: \"all ease .5s\",\r\n        }\r\n        const passwordStyle = {\r\n            borderColor : \"black\",\r\n            borderWidth : \"1px\",\r\n            borderRadius : \"3px\",\r\n            borderColor : this.getPasswordStyle(),\r\n            outline: \"none\",\r\n            width : \"100%\"\r\n        }\r\n        const emailStyle = {\r\n            borderColor : \"black\",\r\n            borderWidth : \"1px\",\r\n            borderRadius : \"3px\",\r\n            borderColor : this.getEmailStyle(),\r\n            outline: \"none\",\r\n            width : \"100%\"\r\n        }\r\n        return(    \r\n            <div style={{display : \"flex\"}}>          \r\n                <Modal isOpen={this.state.isOpen} ariaHideApp={false} style={modalStyle} width=\"10\">\r\n                    <h2>Sign Up</h2> \r\n                    <hr/>\r\n                    <Row style={{paddingTop : \"10px\"}}>             \r\n                        <Col>\r\n                            <label style={{display : \"flex\"}}>First Name</label>\r\n                            <input style={{width: \"100%\", paddingRight : \"5px\" }} type=\"text\" name=\"firstname\" placeholder=\"Enter your first name\"/>\r\n                        </Col>\r\n                        <Col style={{paddingLeft : \"5px\"}}>\r\n                            <label style={{display : \"flex\"}}>Last Name</label>\r\n                            <input style={{width: \"100%\" }} type=\"text\" name=\"lastname\" placeholder=\"Enter your last name\"/>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row style={{paddingTop : \"10px\"}}>\r\n                        <Col>\r\n                            <label style={{display : \"flex\"}}>Email<span style={{color : this.getEmailStyle()}}>*</span></label>\r\n                            <input style={emailStyle} type=\"text\" name=\"email\"  onChange={this.handleFormChange}  placeholder=\"Enter your email\"/>\r\n                            <label style={{display : \"flex\", paddingTop : \"10px\"}}>Password<span style={{color : this.getPasswordStyle()}}>*</span></label>\r\n                            <input style={passwordStyle} type=\"password\" name=\"password\" onChange={this.handleFormChange} placeholder=\"Enter your password\"/>\r\n                            {this.emailExistsText}\r\n                            <label style={{ paddingLeft : \"20px\", paddingTop : \"10px\", color: \"#808080\", fontSize : \"15px\"}}>Protect your data!</label>                           \r\n                            <ul style={{marginTop : \"-10px\", fontSize : \"15px\", color: \"#808080\"}}>\r\n                                <li>Try to include one symbol in your password. !@#$</li>\r\n                                <li>Password must contain 2 numbers.</li>\r\n                                <li>Password must contain 1 uppercase letter.</li>\r\n                                <li>Password must contain at least 8 digits.</li>\r\n                            </ul>\r\n                            <button className=\"registerSubmit\"\r\n                             onMouseEnter={this.toggleHover} \r\n                             onMouseLeave={this.toggleHover}\r\n                             style={buttonStyle} \r\n                             type=\"submit\"\r\n                             onClick={this.submitRegisterData}>\r\n                                {this.buttonText}\r\n                            </button>\r\n                            {this.setLoading()}\r\n                            {this.loadingAnim}\r\n                        </Col>\r\n                    </Row>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst modalStyle = {\r\n    content : {\r\n        margin : \"auto\",\r\n        width : \"55vh\",\r\n        height : \"53vh\",\r\n        position : \"absolute\",\r\n        borderRadius : \"10px\",\r\n        overflow : \"none\",\r\n        boxShadow : \"0px 0px 20px\"\r\n      }\r\n}\r\nexport default RegisterForm"]},"metadata":{},"sourceType":"module"}