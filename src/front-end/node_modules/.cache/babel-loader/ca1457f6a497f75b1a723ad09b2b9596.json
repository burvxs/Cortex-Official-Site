{"ast":null,"code":"var _jsxFileName = \"C:\\\\Workspace\\\\Cortex\\\\cortex-official-website\\\\src\\\\front-end\\\\src\\\\components\\\\products\\\\RenderFilter.js\";\nimport React, { Component } from 'react';\nimport \"../../checkbox.scss\";\n\nclass RenderFilter extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getHighestPrice = () => {\n      return Math.max(...this.props.itemsToFilter.map(item => {\n        return item.price;\n      }));\n    };\n\n    this.getLowestPrice = () => {\n      return Math.min(...this.props.itemsToFilter.map(item => {\n        return item.price;\n      }));\n    };\n\n    this.handleSymbolChange = e => {\n      e.preventDefault();\n      this.setState({\n        symbol: this.props.isFiltering() ? \"-\" : \"+\",\n        isOpen: !this.state.isOpen\n      });\n    };\n\n    this.handleFilterByMax = () => {\n      this.props.filterByMax();\n    };\n\n    this.displayCheckboxText = (startPrice, endPrice) => {\n      return \"$\" + startPrice + \" - \" + \"$\" + endPrice;\n    };\n\n    this.getPriceDifferences = () => {\n      var diff = [];\n\n      for (var i = 0; i < this.props.itemsToFilter.length; i++) {\n        if (this.props.itemsToFilter[i] !== undefined || null) {\n          if (this.props.itemsToFilter[i + 1] !== undefined) {\n            diff.push(Math.abs(this.props.itemsToFilter[i].price - this.props.itemsToFilter[i + 1].price));\n          } else {\n            break;\n          }\n        }\n      }\n\n      diff.sort((a, b) => a - b);\n      return diff;\n    };\n\n    this.checkPriceItem = async e => {\n      console.log(e.target);\n      let idString = e.target.id;\n      let cbIndex = idString.substr(idString.length - 1);\n      this.state.isItemChecked[cbIndex] = e.target.checked;\n\n      if (this.state.isItemChecked[cbIndex]) {\n        fetch();\n      }\n    };\n\n    this.renderCheckboxPrice = () => {\n      let checkboxes = [];\n\n      for (let i = 0; i < this.PRICE_THRESHOLDS.length; i++) {\n        if (this.checkProductBetweenValues(this.PRICE_THRESHOLDS[i], this.PRICE_THRESHOLDS[i + 1])) {\n          checkboxes.push( /*#__PURE__*/React.createElement(React.Fragment, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(\"input\", {\n            className: \"filter-checkbox\",\n            id: \"filter-checkbox-\" + i,\n            type: \"checkbox\",\n            onChange: e => this.checkPriceItem(e),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 25\n            }\n          }), /*#__PURE__*/React.createElement(\"label\", {\n            htmlFor: \"filter-checkbox-\" + i,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 27\n            }\n          }, this.displayCheckboxText(this.PRICE_THRESHOLDS[i], this.PRICE_THRESHOLDS[i + 1]))));\n          this.priceFilterStart.push(this.PRICE_THRESHOLDS[i]);\n          this.priceFilterEnd.push(this.PRICE_THRESHOLDS[i + 1]);\n        }\n      }\n\n      return checkboxes;\n    };\n\n    this.checkProductBetweenValues = (startValue, endValue) => {\n      let productExists = false;\n\n      for (let i = 0; i < this.props.itemsToFilter.length; i++) {\n        if (this.props.itemsToFilter[i] !== undefined) {\n          if (this.props.itemsToFilter[i].price > startValue && this.props.itemsToFilter[i].price < endValue) {\n            this.productLimit++;\n            if (this.productLimit > 0) productExists = this.props.itemsToFilter.includes(this.props.itemsToFilter[i]);\n          }\n        }\n      }\n\n      this.productLimit = 0;\n      return productExists;\n    };\n\n    this.filterForm = () => {\n      if (this.state.isOpen) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"filter-wrapper\",\n          style: filterWrapperStyle,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"price-filter-wrapper\",\n          style: {\n            gridArea: \"1 / col3Start\",\n            paddingRight: \"15vh\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"ul\", {\n          style: {\n            listStyle: \"none\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 24\n          }\n        }, /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"h3\", {\n          style: {\n            textAlign: \"left\",\n            fontSize: \"17px\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 29\n          }\n        }, \"Price\")), this.renderCheckboxPrice().map((item, i) => /*#__PURE__*/React.createElement(\"li\", {\n          style: {\n            textAlign: \"left\"\n          },\n          key: i,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 29\n          }\n        }, item)))));\n      } else return null;\n    };\n\n    this.state = {\n      symbol: \"+\",\n      isOpen: true,\n      isItemChecked: []\n    };\n    this.PRICE_THRESHOLDS = [0, 50, 100, 200, 300, 400, 500, 700, 900, 1000];\n    this.productLimit = 0;\n    this.priceFilterStart = [];\n    this.priceFilterEnd = [];\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: \"right\",\n        position: \"relative\",\n        zIndex: \"10\",\n        justifyContent: \"right\"\n      },\n      className: \"filter-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        cursor: \"pointer\"\n      },\n      onClick: this.handleSymbolChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }, this.state.symbol, \"Filter\"), this.filterForm());\n  }\n\n}\n\nconst filterWrapperStyle = {\n  display: \"grid\",\n  columns: \"4\",\n  gridTemplateColumns: \"repeat(4, 1fr)\",\n  columnGap: \"40px\",\n  rowGap: \"40px\",\n  gridTemplateRows: \"1\",\n  width: \"100%\",\n  justifyItems: \"end\",\n  position: \"absolute\",\n  zIndex: \"2\",\n  background: \"white\"\n};\nexport default RenderFilter;","map":{"version":3,"sources":["C:/Workspace/Cortex/cortex-official-website/src/front-end/src/components/products/RenderFilter.js"],"names":["React","Component","RenderFilter","constructor","props","getHighestPrice","Math","max","itemsToFilter","map","item","price","getLowestPrice","min","handleSymbolChange","e","preventDefault","setState","symbol","isFiltering","isOpen","state","handleFilterByMax","filterByMax","displayCheckboxText","startPrice","endPrice","getPriceDifferences","diff","i","length","undefined","push","abs","sort","a","b","checkPriceItem","console","log","target","idString","id","cbIndex","substr","isItemChecked","checked","fetch","renderCheckboxPrice","checkboxes","PRICE_THRESHOLDS","checkProductBetweenValues","priceFilterStart","priceFilterEnd","startValue","endValue","productExists","productLimit","includes","filterForm","filterWrapperStyle","gridArea","paddingRight","listStyle","textAlign","fontSize","render","position","zIndex","justifyContent","cursor","display","columns","gridTemplateColumns","columnGap","rowGap","gridTemplateRows","width","justifyItems","background"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\r\n\r\n\r\nimport \"../../checkbox.scss\"\r\n\r\nclass RenderFilter  extends Component {\r\n    constructor (props) {\r\n        super(props)\r\n        this.state ={ \r\n            symbol : \"+\",\r\n            isOpen : true,\r\n            isItemChecked : [],\r\n        }\r\n        this.PRICE_THRESHOLDS = [0, 50, 100, 200, 300, 400, 500, 700, 900, 1000]\r\n        this.productLimit = 0;\r\n        this.priceFilterStart = []\r\n        this.priceFilterEnd = []\r\n    }\r\n    getHighestPrice = () => {\r\n        return Math.max(...this.props.itemsToFilter.map((item) => {return item.price}))\r\n    }\r\n    getLowestPrice = () => {\r\n        return Math.min(...this.props.itemsToFilter.map(item => {return item.price}))   \r\n    }\r\n    handleSymbolChange = (e) => {\r\n        e.preventDefault()     \r\n        this.setState({\r\n            symbol : this.props.isFiltering() ? \"-\" : \"+\",\r\n            isOpen : !this.state.isOpen\r\n        })   \r\n    }\r\n    handleFilterByMax = () => {\r\n        this.props.filterByMax()\r\n    }\r\n    displayCheckboxText = (startPrice, endPrice) => {\r\n        return \"$\" + startPrice + \" - \" + \"$\" + endPrice\r\n    }\r\n    getPriceDifferences = () => {\r\n        var diff = []\r\n        for (var i = 0; i < this.props.itemsToFilter.length; i++){  \r\n            if(this.props.itemsToFilter[i] !== undefined || null){\r\n                if (this.props.itemsToFilter[i + 1] !== undefined){\r\n                    diff.push(Math.abs(this.props.itemsToFilter[i].price - this.props.itemsToFilter[i + 1].price))               \r\n                }else{\r\n                    break;    \r\n                }                                    \r\n            }\r\n        }\r\n        diff.sort((a, b) => a - b)\r\n        return diff;\r\n    }\r\n    checkPriceItem = async e => {\r\n        console.log(e.target)\r\n        let idString = e.target.id\r\n        let cbIndex = idString.substr(idString.length - 1)\r\n        this.state.isItemChecked[cbIndex] = e.target.checked\r\n        if (this.state.isItemChecked[cbIndex]){\r\n            fetch()\r\n        }\r\n\r\n    }\r\n    renderCheckboxPrice = () => {\r\n        let checkboxes = [] \r\n        for(let i = 0; i < this.PRICE_THRESHOLDS.length; i++){ \r\n            if(this.checkProductBetweenValues(this.PRICE_THRESHOLDS[i], this.PRICE_THRESHOLDS[i + 1])){      \r\n                checkboxes.push(    \r\n                    <React.Fragment>                        \r\n                        <input \r\n                        className={\"filter-checkbox\"}\r\n                        id={\"filter-checkbox-\" + i}\r\n                        type=\"checkbox\"\r\n                        onChange={(e) => this.checkPriceItem(e)}\r\n                        /><label htmlFor={\"filter-checkbox-\" + i} >\r\n                            {this.displayCheckboxText(this.PRICE_THRESHOLDS[i], this.PRICE_THRESHOLDS[i + 1])}\r\n                        </label>\r\n                    </React.Fragment> \r\n                )\r\n                this.priceFilterStart.push(this.PRICE_THRESHOLDS[i])\r\n                this.priceFilterEnd.push(this.PRICE_THRESHOLDS[i + 1])\r\n            }           \r\n        }\r\n        return checkboxes;\r\n    }\r\n    checkProductBetweenValues = (startValue, endValue) => {\r\n        let productExists = false;\r\n        for (let i = 0; i < this.props.itemsToFilter.length; i++){\r\n            if (this.props.itemsToFilter[i] !== undefined){\r\n                if ( this.props.itemsToFilter[i].price > startValue && this.props.itemsToFilter[i].price < endValue){\r\n                    this.productLimit++ \r\n                    if (this.productLimit > 0)\r\n                        productExists = this.props.itemsToFilter.includes(this.props.itemsToFilter[i])                \r\n                }\r\n            }\r\n        }\r\n        this.productLimit = 0;\r\n        return productExists\r\n    }\r\n    filterForm = () => {\r\n        if (this.state.isOpen){\r\n            return (\r\n                <div className=\"filter-wrapper\" style={filterWrapperStyle}>\r\n                    <div  className=\"price-filter-wrapper\" style={{gridArea : \"1 / col3Start\", paddingRight : \"15vh\"}}>                   \r\n                       <ul style={{listStyle : \"none\"}}>\r\n                        <li>\r\n                            <h3 style={{ textAlign : \"left\", fontSize : \"17px\"}}>Price</h3>  \r\n                        </li>     \r\n                        {this.renderCheckboxPrice().map((item, i) => (\r\n                            <li style={{textAlign : \"left\"}} key={i}>{item}</li>\r\n                        ))}                      \r\n                       </ul>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else\r\n            return null\r\n    }\r\n    render () {\r\n        return (\r\n            <div style={{textAlign : \"right\", position : \"relative\", zIndex : \"10\", justifyContent : \"right\"}} className=\"filter-wrapper\">\r\n                <span style={{cursor : \"pointer\"}} onClick={this.handleSymbolChange}>{this.state.symbol}Filter</span>\r\n                {this.filterForm()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst filterWrapperStyle = {\r\n    display : \"grid\", \r\n    columns : \"4\",\r\n    gridTemplateColumns: \"repeat(4, 1fr)\", \r\n    columnGap : \"40px\",\r\n    rowGap : \"40px\",\r\n    gridTemplateRows : \"1\",\r\n    width : \"100%\",\r\n    justifyItems : \"end\", \r\n    position : \"absolute\", \r\n    zIndex : \"2\", \r\n    background : \"white\"\r\n}\r\n\r\n\r\nexport default RenderFilter\r\n"]},"metadata":{},"sourceType":"module"}