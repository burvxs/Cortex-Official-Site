{"ast":null,"code":"var _jsxFileName = \"C:\\\\Workspace\\\\Cortex\\\\cortex-official-website\\\\src\\\\front-end\\\\src\\\\components\\\\products\\\\ProductHandler.js\";\nimport React, { Component } from \"react\";\nimport ProductGrid from './ProductGrid';\nimport FilterHandler from \"./FilterHandler\";\n\nclass ProductHandler extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSelectedItem = itemSelected => {\n      this.setState({\n        selectedIndex: itemSelected\n      });\n    };\n\n    this.selectItem = e => {\n      this.handleSelectedItem(e.target.id);\n      console.log(e.target.id);\n    };\n\n    this.state = {\n      productImages: [],\n      productCount: 0,\n      selectedItem: \"\",\n      productItemObjects: []\n    };\n    this.symbol = \"+\";\n    this.COLUMN_COUNT = 4;\n    this.rowCount = Math.ceil(this.state.productCount / this.COLUMN_COUNT);\n  }\n\n  async componentDidMount() {\n    const res = await fetch(\"http://127.0.0.1:8000/api/products/\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Accept': 'application/json'\n      }\n    });\n    const data = await res.json();\n    this.setState({\n      productCount: data[\"product_count\"],\n      productItemObjects: data[\"products\"]\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"productWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FilterHandler, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"gridContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ProductGrid, {\n      rows: this.rowCount,\n      cols: this.COLUMN_COUNT,\n      itemWidth: \"200px\",\n      itemHeight: \"310px\",\n      itemsToRender: this.state.productItemObjects,\n      handleGridSelection: this.selectItem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default ProductHandler;","map":{"version":3,"sources":["C:/Workspace/Cortex/cortex-official-website/src/front-end/src/components/products/ProductHandler.js"],"names":["React","Component","ProductGrid","FilterHandler","ProductHandler","constructor","props","handleSelectedItem","itemSelected","setState","selectedIndex","selectItem","e","target","id","console","log","state","productImages","productCount","selectedItem","productItemObjects","symbol","COLUMN_COUNT","rowCount","Math","ceil","componentDidMount","res","fetch","method","headers","data","json","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,MAAMC,cAAN,SAA6BH,SAA7B,CAAsC;AAClCI,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SA0BlBC,kBA1BkB,GA0BIC,YAAD,IAAkB;AACnC,WAAKC,QAAL,CAAc;AACVC,QAAAA,aAAa,EAAGF;AADN,OAAd;AAGH,KA9BiB;;AAAA,SA+BlBG,UA/BkB,GA+BJC,CAAD,IAAO;AAChB,WAAKL,kBAAL,CAAwBK,CAAC,CAACC,MAAF,CAASC,EAAjC;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,CAAC,CAACC,MAAF,CAASC,EAArB;AACH,KAlCiB;;AAEd,SAAKG,KAAL,GAAa;AACTC,MAAAA,aAAa,EAAG,EADP;AAETC,MAAAA,YAAY,EAAG,CAFN;AAGTC,MAAAA,YAAY,EAAG,EAHN;AAITC,MAAAA,kBAAkB,EAAG;AAJZ,KAAb;AAMA,SAAKC,MAAL,GAAc,GAAd;AACA,SAAKC,YAAL,GAAoB,CAApB;AACA,SAAKC,QAAL,GAAgBC,IAAI,CAACC,IAAL,CAAU,KAAKT,KAAL,CAAWE,YAAX,GAA0B,KAAKI,YAAzC,CAAhB;AACH;;AACD,QAAMI,iBAAN,GAA0B;AACtB,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,qCAAD,EAAwC;AACvDC,MAAAA,MAAM,EAAG,KAD8C;AAEvDC,MAAAA,OAAO,EAAG;AACN,wBAAiB,kBADX;AAEN,kBAAU;AAFJ;AAF6C,KAAxC,CAAvB;AAOA,UAAMC,IAAI,GAAG,MAAMJ,GAAG,CAACK,IAAJ,EAAnB;AACA,SAAKxB,QAAL,CAAc;AACVU,MAAAA,YAAY,EAAGa,IAAI,CAAC,eAAD,CADT;AAEVX,MAAAA,kBAAkB,EAAGW,IAAI,CAAC,UAAD;AAFf,KAAd;AAIH;;AAUDE,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAE,KAAKV,QAAxB;AACY,MAAA,IAAI,EAAE,KAAKD,YADvB;AAEY,MAAA,SAAS,EAAC,OAFtB;AAGY,MAAA,UAAU,EAAC,OAHvB;AAIY,MAAA,aAAa,EAAE,KAAKN,KAAL,CAAWI,kBAJtC;AAKY,MAAA,mBAAmB,EAAE,KAAKV,UALtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAFJ,CADJ;AAcH;;AAnDiC;;AAqDtC,eAAeP,cAAf","sourcesContent":["import React, {Component} from \"react\"\r\n\r\nimport ProductGrid from './ProductGrid'\r\nimport FilterHandler from \"./FilterHandler\"\r\n\r\nclass ProductHandler extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            productImages : [],\r\n            productCount : 0,\r\n            selectedItem : \"\",\r\n            productItemObjects : [],\r\n        }\r\n        this.symbol = \"+\"\r\n        this.COLUMN_COUNT = 4\r\n        this.rowCount = Math.ceil(this.state.productCount / this.COLUMN_COUNT)\r\n    }\r\n    async componentDidMount() {\r\n        const res = await fetch(\"http://127.0.0.1:8000/api/products/\", {\r\n                method : \"GET\",\r\n                headers : {\r\n                    \"Content-Type\" : \"application/json\",\r\n                    'Accept': 'application/json'\r\n                }\r\n            })\r\n        const data = await res.json()\r\n        this.setState({\r\n            productCount : data[\"product_count\"],\r\n            productItemObjects : data[\"products\"]\r\n        })    \r\n    }\r\n    handleSelectedItem = (itemSelected) => {\r\n        this.setState({\r\n            selectedIndex : itemSelected\r\n        })\r\n    }\r\n    selectItem = (e) => {\r\n        this.handleSelectedItem(e.target.id) \r\n        console.log(e.target.id)\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"productWrapper\"> \r\n                <FilterHandler/>           \r\n                <div className=\"gridContainer\">\r\n                    <ProductGrid rows={this.rowCount}\r\n                                cols={this.COLUMN_COUNT}\r\n                                itemWidth=\"200px\" \r\n                                itemHeight=\"310px\" \r\n                                itemsToRender={this.state.productItemObjects}\r\n                                handleGridSelection={this.selectItem}\r\n                                />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default ProductHandler"]},"metadata":{},"sourceType":"module"}